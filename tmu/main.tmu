<TMU|<tuple|1.1.0|2025.0.14>>

<style|<tuple|book|number-europe|preview-ref|smart-ref>>

<\body>
  <\hide-preamble>
    <assign|cite-parenthesized|<macro|var|(<cite|<arg|var>>)>>

    <assign|bookbox|<\macro|var>
      <\framed>
        <arg|var>
      </framed>
    </macro>>

    <assign|minipage|<\macro|var1|var2|var3>
      <\algorithm>
        <arg|var3>
      </algorithm>
    </macro>>

    <assign|id|<macro|<math-up|id>>>

    <assign|K|<macro|<math-up|KL>>>

    <assign|kl|<macro|<math-up|kl>>>

    <assign|bp|<macro|\<b-p\>>>

    <assign|phi|<macro|\<varphi\>>>

    <assign|a|<macro|\<alpha\>>>

    <assign|Â|<macro|ű>>\<bbb-P\>

    <assign|E|<macro|\<bbb-E\>>>

    <assign|N|<macro|\<bbb-N\>>>

    <assign|R|<macro|\<bbb-R\>>>

    <assign|Q|<macro|\<bbb-Q\>>>

    <assign|KL|<macro|<math-up|KL>>>

    <assign|LG|<macro|<wide|log|\<bar\>>(K)>>

    <assign|ocP|<macro|<wide|\<cal-P\>|\<bar\>>>>

    <assign|cZ|<macro|\<cal-Z\>>>

    <assign|cA|<macro|\<cal-A\>>>

    <assign|cB|<macro|\<cal-B\>>><assign|cN|<macro|\<cal-N\>>>

    <assign|cM|<macro|\<cal-M\>>><assign|cF|<macro|\<cal-F\>>><assign|cL|<macro|\<cal-L\>>><assign|cX|<macro|\<cal-X\>>>

    <assign|cI|<macro|\<cal-I\>>><assign|cJ|<macro|\<cal-J\>>><assign|cY|<macro|\<cal-Y\>>><assign|cH|<macro|\<cal-H\>>><assign|cP|<macro|\<cal-P\>>>

    <assign|cT|<macro|\<cal-T\>>><assign|cC|<macro|\<cal-C\>>><assign|cS|<macro|\<cal-S\>>><assign|cE|<macro|\<cal-E\>>><assign|cK|<macro|\<cal-K\>>>

    <assign|cD|<macro|\<cal-D\>>><assign|oD|<macro|<wide|\<cal-D\>|\<bar\>>>><assign|oR|<macro|<wide|R|\<bar\>>>><assign|ds|<macro|<with|math-font|Bbb****|1>>><assign|epsilon|<macro|\<varepsilon\>>><assign|wh|<macro|1|<wide|<arg|1>|^>>>

    <assign|argmax|<macro|<math-up|argmax>>>

    <assign|argmin|<macro|<math-up|argmin>>>

    <assign|mod|<macro|1|2|[<arg|1> <space|0.17em><space|0.17em> <math-up|mod> <space|0.17em><space|0.17em> <arg|2>]>>

    <assign|Ber|<macro|<math-up|Ber>>><assign|beq|<macro|>><assign|eeq|<macro|>><assign|beqa|<macro|>>

    <assign|eeqa|<macro|>>

    <assign|beqan|<macro|>>

    <assign|eeqan|<macro|>>

    <assign|ba|<\macro|1>
      <\align*>
        <tformat|<table|<row|<cell|<arg|1>>>>>
      </align*>
    </macro>>

    <assign|banum|<\macro|1>
      <\align>
        <tformat|<table|<row|<cell|<arg|1><eq-number>>>>>
      </align>
    </macro>>

    <assign|charfct|<macro|<ds>1>>

    <assign|Fcal|<macro|\<cal-F\>>>

    <assign|Xcal|<macro|\<cal-X\>>>

    <assign|Hcal|<macro|\<cal-H\>>>

    <assign|Gcal|<macro|\<cal-G\>>>

    <assign|Nat|<macro|\<bbb-N\>>>

    <assign|dt|<macro|>>

    <assign|arginf|<macro|<math-up|arginf>>>

    <assign|theset|<macro|1|2|<left|{><arg|1><space|0.17em>:<space|0.17em><arg|2><right|}>>>

    <assign|inner|<macro|1|2|<left|langle><arg|1>,<arg|2><right|rangle>>>

    <assign|ve|<macro|\<varepsilon\>>>

    <assign|scO|<macro|\<cal-O\>>>

    <assign|conv|<macro|<math-up|Conv>>>

    <assign|Ball|<macro|\<bbb-B\>>>

    <assign|Sphere|<macro|\<bbb-S\>>>

    <assign|norm|<macro|1|<left|\|><arg|1><right|\|>>>

    <assign|oRx|<macro|<oR><rsup|<math-up|ctx>>>>

    <assign|Rx|<macro|R<rsup|<math-up|ctx>>>>

    <assign|oRS|<macro|<oR><rsup|<cS>>>>

    <assign|fhat|<macro|<wh|f>>>

    <assign|xhat|<macro|<wh|x>>>

    <assign|yhat|<macro|<wh|y>>>

    <assign|lhat|<macro|<wh|\<ell\>>>>

    <assign|muhat|<macro|<wh|\<mu\>>>>

    <assign|tx|<macro|<wide|x|~>>>

    <assign|tX|<macro|<wide|X|~>>>

    <assign|tloss|<macro|<wide|\<ell\>|~>>>

    <assign|gtilde|<macro|<wide|g|~>>>

    <assign|bx|<macro|\<b-x\>>>

    <assign|bw|<macro|\<b-w\>>>
  </hide-preamble>

  <doc-data|<doc-title|Regret Analysis of Stochastic and Nonstochastic Multi-armed Bandit Problems>|<doc-author|<author-data|<author-name|Sébastien Bubeck>|<author-email|sbubeck@princeton.edu>|<\author-affiliation>
    Department of Operations Research and Financial Engineering, Princeton University
  </author-affiliation>>>|<doc-author|<author-data|<author-name|Nicolò Cesa-Bianchi>|<author-email|nicolo.cesa-bianchi@unimi.it>|<\author-affiliation>
    Dipartimento di Informatica, Università degli Studi di Milano
  </author-affiliation>>>>

  <\abstract>
    Multi-armed bandit problems are the most basic examples of sequential decision problems with an exploration-exploitation trade-off. This is the balance between staying with the option that gave highest payoffs in the past and exploring new options that might give higher payoffs in the future. Although the study of bandit problems dates back to the Thirties, exploration-exploitation trade-offs arise in several modern applications, such as ad placement, website optimization, and packet routing. Mathematically, a multi-armed bandit is defined by the payoff process associated with each option. In this survey, we focus on two extreme cases in which the analysis of regret is particularly simple and elegant: i.i.d. payoffs and adversarial payoffs. Besides the basic setting of finitely many actions, we also analyze some of the most important variants and extensions, such as the contextual bandit model.\ 
  </abstract>

  <\table-of-contents|toc>
    <vspace*|1fn><with|font-series|bold|math-font-series|bold|Abstract> <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>> <no-break><pageref|auto-1><vspace|0.5fn>

    <vspace*|1fn><with|font-series|bold|math-font-series|bold|1<space|2spc>Introduction> <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>> <no-break><pageref|auto-2><vspace|0.5fn>

    <vspace*|1fn><with|font-series|bold|math-font-series|bold|2<space|2spc>Stochastic bandits: fundamental results> <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>> <no-break><pageref|auto-3><vspace|0.5fn>

    2.1<space|2spc>Optimism in face of uncertainty <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>> <no-break><pageref|auto-4>

    2.2<space|2spc>Upper Confidence Bound (UCB) strategies <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>> <no-break><pageref|auto-5>

    2.3<space|2spc>Lower bound <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>> <no-break><pageref|auto-6>

    <with|par-left|1tab|First step: Notations. <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>> <no-break><pageref|auto-7>>

    <with|par-left|1tab|Second step: <with|mode|math|\<bbb-P\><around|(|C<rsub|n>|)>=o<around|(|1|)>>. <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>> <no-break><pageref|auto-8>>

    <with|par-left|1tab|Third step: <with|mode|math|\<bbb-P\><around*|(|T<rsub|2><around|(|n|)>\<less\>f<rsub|n>|)>=o<around|(|1|)>>. <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>> <no-break><pageref|auto-9>>

    2.4<space|2spc>Refinements and bibliographic remarks <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>> <no-break><pageref|auto-10>

    <with|par-left|1tab|2.4.1<space|2spc>Improved constants <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>> <no-break><pageref|auto-11>>

    <with|par-left|1tab|2.4.2<space|2spc>Second order bounds <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>> <no-break><pageref|auto-12>>

    <with|par-left|1tab|2.4.3<space|2spc>Distribution-free bounds <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>> <no-break><pageref|auto-13>>

    <with|par-left|1tab|2.4.4<space|2spc>High probability bounds <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>> <no-break><pageref|auto-14>>

    <with|par-left|1tab|2.4.5<space|2spc><with|mode|math|\<epsilon\>>-greedy <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>> <no-break><pageref|auto-15>>

    <with|par-left|1tab|2.4.6<space|2spc>Thompson sampling <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>> <no-break><pageref|auto-16>>

    <with|par-left|1tab|2.4.7<space|2spc>Heavy-tailed distributions <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>> <no-break><pageref|auto-17>>

    <vspace*|1fn><with|font-series|bold|math-font-series|bold|3<space|2spc>Adversarial bandits: fundamental results> <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>> <no-break><pageref|auto-18><vspace|0.5fn>

    3.1<space|2spc>Pseudo-regret bounds <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>> <no-break><pageref|auto-19>

    <with|par-left|1tab|First step: Useful equalities. <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>> <no-break><pageref|auto-20>>

    <with|par-left|1tab|Second step: Study of the first term in (<reference|eq:logmoment>). <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>> <no-break><pageref|auto-21>>

    <with|par-left|1tab|Third step: Study of the second term in (<reference|eq:logmoment>). <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>> <no-break><pageref|auto-22>>

    <with|par-left|1tab|Fourth step: Summing. <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>> <no-break><pageref|auto-23>>

    3.2<space|2spc>High probability and expected regret bounds <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>> <no-break><pageref|auto-24>

    <with|par-left|1tab|First step: Notation and simple equalities. <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>> <no-break><pageref|auto-26>>

    <with|par-left|1tab|Second step: Study of the first term in (<reference|eq:exp3P2>). <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>> <no-break><pageref|auto-27>>

    <with|par-left|1tab|Third step: Summing. <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>> <no-break><pageref|auto-28>>

    3.3<space|2spc>Lower Bound <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>> <no-break><pageref|auto-29>

    <with|par-left|1tab|First step: Empirical distribution of plays. <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>> <no-break><pageref|auto-30>>

    <with|par-left|1tab|Second step: Pinsker's inequality. <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>> <no-break><pageref|auto-31>>

    <with|par-left|1tab|Third step: Computation of <with|mode|math|<with|mode|text|<with|font-family|rm|font-shape|right|KL>><around|(|\<bbb-P\><rsub|0>,\<bbb-P\><rsub|i>|)>>. \ <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>> <no-break><pageref|auto-32>>

    <with|par-left|1tab|Fourth step: conclusion for deterministic forecasters. \ <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>> <no-break><pageref|auto-33>>

    <with|par-left|1tab|Fifth step: randomized forecasters via Fubini's Theorem. <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>> <no-break><pageref|auto-34>>

    3.4<space|2spc>Refinements and bibliographic remarks <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>> <no-break><pageref|auto-35>

    <with|par-left|1tab|3.4.1<space|2spc>Log-free upper bounds <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>> <no-break><pageref|auto-36>>

    <with|par-left|1tab|3.4.2<space|2spc>Adaptive bounds <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>> <no-break><pageref|auto-37>>

    <with|par-left|1tab|3.4.3<space|2spc>Competing with the best switching strategy <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>> <no-break><pageref|auto-38>>

    <with|par-left|1tab|3.4.4<space|2spc>Stochastic versus adversarial bandits <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>> <no-break><pageref|auto-39>>

    <with|par-left|1tab|3.4.5<space|2spc>Alternative feedback structures <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>> <no-break><pageref|auto-40>>

    <vspace*|1fn><with|font-series|bold|math-font-series|bold|4<space|2spc>Contextual bandits> <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>> <no-break><pageref|auto-41><vspace|0.5fn>

    4.1<space|2spc>Bandits with side information <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>> <no-break><pageref|auto-42>

    4.2<space|2spc>The expert case <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>> <no-break><pageref|auto-43>

    <with|par-left|1tab|4.2.1<space|2spc>Competing against the best context set <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>> <no-break><pageref|auto-45>>

    4.3<space|2spc>Stochastic contextual bandits <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>> <no-break><pageref|auto-46>

    4.4<space|2spc>The multiclass case <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>> <no-break><pageref|auto-47>

    4.5<space|2spc>Bibliographic remarks <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>> <no-break><pageref|auto-48>

    <vspace*|1fn><with|font-series|bold|math-font-series|bold|5<space|2spc>Linear bandits> <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>> <no-break><pageref|auto-49><vspace|0.5fn>

    5.1<space|2spc>Exp2 (Expanded Exp) with John's exploration <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>> <no-break><pageref|auto-50>

    5.2<space|2spc>Online Mirror Descent (OMD) <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>> <no-break><pageref|auto-51>

    5.3<space|2spc>Online Stochastic Mirror Descent (OSMD) <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>> <no-break><pageref|auto-52>

    5.4<space|2spc>Online combinatorial optimization <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>> <no-break><pageref|auto-53>

    5.5<space|2spc>Improved regret bounds for bandit feedback <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>> <no-break><pageref|auto-54>

    5.6<space|2spc>Refinements and bibliographic remarks <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>> <no-break><pageref|auto-55>

    <with|par-left|1tab|5.6.1<space|2spc>Lower bounds <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>> <no-break><pageref|auto-56>>

    <with|par-left|1tab|5.6.2<space|2spc>High probability bounds <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>> <no-break><pageref|auto-57>>

    <with|par-left|1tab|5.6.3<space|2spc>Stochastic online linear optimization <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>> <no-break><pageref|auto-58>>

    <vspace*|1fn><with|font-series|bold|math-font-series|bold|6<space|2spc>Nonlinear bandits> <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>> <no-break><pageref|auto-59><vspace|0.5fn>

    6.1<space|2spc>Two-points bandit feedback <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>> <no-break><pageref|auto-60>

    6.2<space|2spc>One-point bandit feedback <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>> <no-break><pageref|auto-61>

    6.3<space|2spc>Nonlinear stochastic bandits <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>> <no-break><pageref|auto-62>

    6.4<space|2spc>Bibliographic remarks <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>> <no-break><pageref|auto-63>

    <vspace*|1fn><with|font-series|bold|math-font-series|bold|7<space|2spc>Variants> <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>> <no-break><pageref|auto-64><vspace|0.5fn>

    7.1<space|2spc>Markov Decision Processes, restless and sleeping bandits <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>> <no-break><pageref|auto-65>

    7.2<space|2spc>Pure exploration problems <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>> <no-break><pageref|auto-66>

    7.3<space|2spc>Dueling bandits <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>> <no-break><pageref|auto-67>

    7.4<space|2spc>Discovery with probabilistic expert advice <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>> <no-break><pageref|auto-68>

    7.5<space|2spc>Many-armed bandits <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>> <no-break><pageref|auto-69>

    7.6<space|2spc>Truthful bandits <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>> <no-break><pageref|auto-70>

    7.7<space|2spc>Concluding remarks <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>> <no-break><pageref|auto-71>

    <vspace*|1fn><with|font-series|bold|math-font-series|bold|Appendix<space|2spc>Acknowledgements> <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>> <no-break><pageref|auto-72><vspace|0.5fn>

    <vspace*|1fn><with|font-series|bold|math-font-series|bold|Bibliography> <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>> <no-break><pageref|auto-73><vspace|0.5fn>
  </table-of-contents>

  \;

  <chapter|Introduction><label|intro>

  A multi-armed bandit problem (or, simply, a bandit problem) is a sequential allocation problem defined by a set of actions. At each time step, a unit resource is allocated to an action and some observable payoff is obtained. The goal is to maximize the total payoff obtained in a sequence of allocations. The name <with|font-shape|slanted|bandit> refers to the colloquial term for a slot machine (“one-armed bandit” in American slang). In a casino, a sequential allocation problem is obtained when the player is facing many slot machines at once (a “multi-armed bandit”), and must repeatedly choose where to insert the next coin.

  Bandit problems are basic instances of sequential decision making with limited information, and naturally address the fundamental trade-off between exploration and exploitation in sequential experiments. Indeed, the player must balance the exploitation of actions that did well in the past and the exploration of actions that might give higher payoffs in the future.

  Although the original motivation of <cite|Tho33> for studying bandit problems came from clinical trials (when different treatments are available for a certain disease and one must decide which treatment to use on the next patient), modern technologies have created many opportunities for new applications, and bandit problems now play an important role in several industrial domains. In particular, online services are natural targets for bandit algorithms, because there one can benefit from adapting the service to the individual sequence of requests. We now describe a few concrete examples in various domains.

  Ad placement is the problem of deciding which advertisement to display on the web page delivered to the next visitor of a website. Similarly, website optimization deals with the problem of sequentially choosing design elements (font, images, layout) for the web page. Here the payoff is associated with visitor's actions, e.g., clickthroughs or other desired behaviors. Of course there are important differences with the basic bandit problem: in ad placement the pool of available ads (bandit arms) may change over time, and there might be a limit on the number of times each ad could be displayed.

  In source routing a sequence of packets must be routed from a source host to a destination host in a given network, and the protocol allows to choose a specific source-destination path for each packet to be sent. The (negative) payoff is the time it takes to deliver a packet, and depends additively on the congestion of the edges in the chosen path.

  In computer game-playing, each move is chosen by simulating and evaluating many possible game continuations after the move. Algorithms for bandits (more specifically, for a tree-based version of the bandit problem) can be used to explore more efficiently the huge tree of game continuations by focusing on the most promising subtrees. This idea has been successfully implemented in the MoGo player of <cite|GWMT06>, which plays Go at world-class level. MoGo is based on the UCT strategy for hierarchical bandits of <cite|KS06>, which is in turn derived from the UCB bandit algorithm —see Chapter<nbsp><reference|stochastic>.

  There are three fundamental formalizations of the bandit problem depending on the assumed nature of the reward process: stochastic, adversarial, and Markovian. Three distinct playing strategies have been shown to effectively address each specific bandit model: the UCB algorithm in the stochastic case, the Exp3 randomized algorithm in the adversarial case, and the so-called Gittins indices in the Markovian case. In this survey, we focus on stochastic and adversarial bandits, and refer the reader to the survey by <cite|mahajan2008multi> or to the recent monograph by <cite|GGW11> for an extensive analysis of Markovian bandits.

  In order to analyze the behavior of a player or forecaster (i.e., the agent implementing a bandit strategy), we may compare its performance with that of an optimal strategy that, for any horizon of <math|n> time steps, consistently plays the arm that is best in the first <math|n> steps. In other terms, we may study the <with|font-shape|slanted|regret> of the forecaster for not playing always optimally. More specifically, given <math|K\<ge\>2> arms and given sequences <math|X<rsub|i,1>,X<rsub|i,2>,\<ldots\>> of unknown rewards associated with each arm <math|i=1,\<ldots\>,K>, we study forecasters that at each time step <math|t=1,2,\<ldots\>> select an arm <math|I<rsub|t>> and receive the associated reward <math|X<rsub|I<rsub|t>,t>>. The regret after <math|n> plays <math|I<rsub|1>,\<ldots\>,I<rsub|n>> is defined by

  <\equation>
    <label|eq:regret>R<rsub|n>=max<rsub|i=1,\<ldots\>,K> <big|sum><rsub|t=1><rsup|n>X<rsub|i,t>-<big|sum><rsub|t=1><rsup|n>X<rsub|I<rsub|t>,t><nbsp>.
  </equation>

  If the time horizon is not known in advance we say that the forecaster is <with|font-shape|italic|anytime>.

  In general, both rewards <math|X<rsub|i,t>> and forecaster's choices <math|I<rsub|t>> might be stochastic. This allows to distinguish between the two following notions of averaged regret: the <with|font-shape|slanted|expected regret>

  <\equation>
    <label|eq:exp-regret><E>*<space|0.17em>R<rsub|n>=<E>*<around*|[|max<rsub|i=1,\<ldots\>,K> <big|sum><rsub|t=1><rsup|n>X<rsub|i,t>-<big|sum><rsub|t=1><rsup|n>X<rsub|I<rsub|t>,t>|]>
  </equation>

  and the <with|font-shape|slanted|pseudo-regret>

  <\equation>
    <label|eq:pseudoregret><wide|R|\<bar\>><rsub|n>=max<rsub|i=1,\<ldots\>,K> <E>*<around*|[|<big|sum><rsub|t=1><rsup|n>X<rsub|i,t>-<big|sum><rsub|t=1><rsup|n>X<rsub|I<rsub|t>,t>|]><nbsp>.
  </equation>

  In both definitions, the expectation is taken with respect to the random draw of both rewards and forecaster's actions. Note that pseudo-regret is a weaker notion of regret, since one compares to the optimal action in expectation. The expected regret, instead, is the expectation of the regret with respect to the action which is optimal on the sequence of reward realizations. More formally one has <math|<oR><rsub|n>\<leq\><E>*R<rsub|n>>.

  In the original formalization of <cite|Rob52>, which builds on the work of<nbsp><cite|wald1947sequential> —see also<nbsp><cite|arrow1949bayes>, each arm <math|i=1,\<ldots\>,K> corresponds to an unknown probability distribution <math|\<nu\><rsub|i>> on <math|<around|[|0,1|]>>, and rewards <math|X<rsub|i,t>> are independent draws from the distribution <math|\<nu\><rsub|i>> corresponding to the selected arm.

  <\padded-center>
    <\bookbox>
      <\with|font-size|0.84>
        <with|font-series|bold|The stochastic bandit problem>

        <vspace*|0.5fn><no-indent><with|font-shape|slanted|Known parameters:> number of arms <math|K> and (possibly) number of rounds <math|n\<ge\>K>.<next-line><with|font-shape|slanted|Unknown parameters:> <math|K> probability distributions <math|\<nu\><rsub|1>,\<ldots\>,\<nu\><rsub|K>> on <math|<around|[|0,1|]>>.

        <vspace*|0.5fn><no-indent>For each round <math|t=1,2,\<ldots\>>

        <\itemize>
          <item*|(1)>the forecaster chooses <math|I<rsub|t>\<in\><around|{|1,\<ldots\>,K|}>>;

          <item*|(2)>given <math|I<rsub|t>>, the environment draws the reward <math|X<rsub|I<rsub|t>,t>\<sim\>\<nu\><rsub|I<rsub|t>>> independently from the past and reveals it to the forecaster.
        </itemize>
      </with>
    </bookbox>
  </padded-center>

  For <math|i=1,\<ldots\>,K> we denote by <math|\<mu\><rsub|i>> the mean of <math|\<nu\><rsub|i>> (mean reward of arm <math|i>). Let

  <\equation*>
    \<mu\><rsup|\<ast\>>=max<rsub|i=1,\<ldots\>,K> \<mu\><rsub|i>*<space|2em><text|and><space|2em>i<rsup|\<ast\>>\<in\><argmax><rsub|i=1,\<ldots\>,K>\<mu\><rsub|i><nbsp>.
  </equation*>

  In the stochastic setting, it is easy to see that the pseudo-regret can be written as

  <\equation>
    <label|eq:pregretstocha><wide|R|\<bar\>><rsub|n>=n*\<mu\><rsup|\<ast\>>-<big|sum><rsub|t=1><rsup|n><E><around*|[|\<mu\><rsub|I<rsub|t>>|]><nbsp>.
  </equation>

  The analysis of the stochastic bandit model was pioneered in the seminal paper of<nbsp><cite|LR85>, who introduced the technique of upper confidence bounds for the asymptotic analysis of regret. In Chapter<nbsp><reference|stochastic> we describe this technique using the simpler formulation of<nbsp><cite|Agr95>, which naturally lends itself to a finite-time analysis.

  In parallel to the research on stochastic bandits, a game-theoretic formulation of the trade-off between exploration and exploitation has been independently investigated, although for quite some time this alternative formulation was not recognized as an instance of the multi-armed bandit problem. In order to motivate these game-theoretic bandits, consider again the initial example of gambling on slot machines. We now assume that we are in a rigged casino, where for each slot machine <math|i=1,\<ldots\>,K> and time step <math|t\<ge\>1> the owner sets the gain <math|X<rsub|i,t>> to some arbitrary (and possibly maliciously chosen) value <math|g<rsub|i,t>\<in\><around|[|0,1|]>>. Note that it is not in the interest of the owner to simply set all the gains to zero (otherwise, no gamblers would go to that casino). Now recall that a forecaster selects sequentially one arm <math|I<rsub|t>\<in\><around|{|1,\<ldots\>,K|}>> at each time step <math|t=1,2,\<ldots\>> and observes (and earns) the gain <math|g<rsub|I<rsub|t>,t>>. Is it still possible to minimize regret in such a setting?

  Following a standard terminology, we call adversary, or opponent, the mechanism setting the sequence of gains for each arm. If this mechanism is independent of the forecaster's actions, then we call it an <with|font-shape|slanted|oblivious> adversary. In general, however, the adversary may adapt to the forecaster's past behaviour, in which case we speak of a <with|font-shape|slanted|non-oblivious> adversary. For instance, in the rigged casino the owner may observe the way a gambler plays in order to design even more evil sequences of gains. Clearly, the distinction between oblivious and non-oblivious adversary is only meaningful when the player is randomized (if the player is deterministic, then the adversary can pick a bad sequence of gains right at the beginning of the game by simulating the player's future actions). Note, however, that in presence of a non-oblivious adversary the interpretation of regret is ambiguous. Indeed, in this case the assignment of gains <math|g<rsub|i,t>> to arms <math|i=1,\<ldots\>,K> made by the adversary at each step <math|t> is allowed to depend on the player's past randomized actions <math|I<rsub|1>,\<ldots\>,I<rsub|t-1>>. In other words, <math|g<rsub|i,t>=g<rsub|i,t>*<around|(|I<rsub|1>,\<ldots\>,I<rsub|t-1>|)>> for each <math|i> and <math|t>. Now, the regret compares the player's cumulative gain to that obtained by playing the single best arm for the first <math|n> rounds. However, had the player consistently chosen the same arm <math|i> in each round, namely <math|I<rsub|t>=i> for <math|t=1,\<ldots\>,n>, the adversarial gains <math|g<rsub|i,t>*<around|(|I<rsub|1>,\<ldots\>,I<rsub|t-1>|)>> would have been possibly different than those actually experienced by the player.

  The study of non-oblivious regret is mainly motivated by the connection between regret minimization and equilibria in games —see, e.g.<nbsp><cite-detail|ACFS03|Section<nbsp>9>. Here we just observe that game-theoretic equilibria are indeed defined similarly to regret: in equilibrium, the player has nSo incentive to behave differently provided the opponent does not react to changes in the player's behaviour. Interestingly, regret minimization has been also studied against <with|font-shape|slanted|reactive opponents>, see for instance the works of<nbsp><cite|farias2006combining> and<nbsp><cite|arora2012online>.

  <\padded-center>
    <\bookbox>
      <\with|font-size|0.84>
        <with|font-series|bold|The adversarial bandit problem>

        <vspace*|0.5fn><no-indent><with|font-shape|slanted|Known parameters:> number of arms <math|K\<ge\>2> and (possibly) number of rounds <math|n\<ge\>K>.

        <vspace*|0.5fn><no-indent>For each round <math|t=1,2,\<ldots\>>

        <\itemize>
          <item*|(1)>the forecaster chooses <math|I<rsub|t>\<in\><around|{|1,\<ldots\>,K|}>>, possibly with the help of external randomization;

          <item*|(2)>simultaneously, the adversary selects a gain vector <math|g<rsub|t>=<around|(|g<rsub|1,t>,\<ldots\>,g<rsub|K,t>|)>\<in\><around|[|0,1|]><rsup|K>>, possibly with the help of external randomization;

          <item*|(3)>the forecaster receives (and observes) the reward <math|g<rsub|I<rsub|t>,t>>, while the gains of the other arms are not observed.
        </itemize>
      </with>
    </bookbox>
  </padded-center>

  In this adversarial setting the goal is to obtain regret bounds in high probability or in expectation with respect to any possible randomization in the strategies used by the forecaster or the opponent, and irrespective of the opponent. In the case of a non-oblivious adversary this is not an easy task, and for this reason we usually start by bounding the pseudo-regret

  <\equation*>
    <wide|R|\<bar\>><rsub|n>=max<rsub|i=1,\<ldots\>,K> <E>*<around*|[|<big|sum><rsub|t=1><rsup|n>g<rsub|i,t>-<big|sum><rsub|t=1><rsup|n>g<rsub|I<rsub|t>,t>|]><nbsp>.
  </equation*>

  Note that the randomization of the adversary is not very important here since we ask for bounds which hold for any opponent. On the other hand, it is fundamental to allow randomization for the forecaster —see Chapter<nbsp><reference|adversarial> for details and basic results in the adversarial bandit model. This adversarial, or non-stochastic, version of the bandit problem was originally proposed as a way of playing an unknown game against an opponent. The problem of playing a game repeatedly, now a classical topic in game theory, was initiated by the groundbreaking work of James Hannan and David Blackwell. In Hannan's seminal paper<nbsp><cite|Han57>, the game (i.e., the payoff matrix) is assumed to be known by the player, who also observes the opponent's moves in each play. Later, <cite|Ban68> considered the problem of a repeated unknown game, where in each game round the player only observes its own payoff. This problem turns out to be exactly equivalent to the adversarial bandit problem with a non-oblivious adversary. Simpler strategies for playing unknown games were more recently proposed by <cite|FoVo98> and <cite|HaMa99|HaMa00>. Approximately at the same time, the problem was re-discovered in computer science by<nbsp><cite|ACFS03>. It was them who made apparent the connection to stochastic bandits by coining the term nonstochastic multi-armed bandit problem.

  The third fundamental model of multi-armed bandits assumes that the reward processes are neither i.i.d. (like in stochastic bandits) nor adversarial. More precisely, arms are associated with <math|K> Markov processes, each with its own state space. Each time an arm <math|i> is chosen in state <math|s>, a stochastic reward is drawn from a probability distribution <math|\<nu\><rsub|i,s>>, and the state of the reward process for arm <math|i> changes in a Markovian fashion, based on an underlying stochastic transition matrix <math|M<rsub|i>>. Both reward and new state are revealed to the player. On the other hand, the state of arms that are not chosen remains unchanged. Going back to our initial interpretation of bandits as sequential resource allocation processes, here we may think of <math|K> competing projects that are sequentially allocated a unit resource of work. However, unlike the previous bandit models, in this case the state of a project that gets the resource may change. Moreover, the underlying stochastic transition matrices <math|M<rsub|i>> are typically assumed to be known, thus the optimal policy can be computed via dynamic programming and the problem is essentially of computational nature. The seminal result of<nbsp><cite|gittins1979bandit> provides an optimal greedy policy which can be computed efficiently.

  A notable special case of Markovian bandits is that of Bayesian bandits. These are parametric stochastic bandits, where the parameters of the reward distributions are assumed to be drawn from known priors, and the regret is computed by also averaging over the draw of parameters from the prior. The Markovian state change associated with the selection of an arm corresponds here to updating the posterior distribution of rewards for that arm after observing a new reward.

  Markovian bandits are a standard model in the areas of Operations Research and Economics. However, the techniques used in their analysis are significantly different from those used to analyze stochastic and adversarial bandits. For this reason, in this survey we do not cover Markovian bandits and their many variants.

  <chapter|Stochastic bandits: fundamental results><label|stochastic>

  We start by recalling the basic definitions for the stochastic bandit problem. Each arm <math|i\<in\><around|{|1,\<ldots\>,K|}>> corresponds to an unknown probability distribution <math|\<nu\><rsub|i>>. At each time step <math|t=1,2,\<ldots\>>, the forecaster selects some arm <math|I<rsub|t>\<in\><around|{|1,\<ldots\>,K|}>> and receives a reward <math|X<rsub|I<rsub|t>,t>> drawn from <math|\<nu\><rsub|I<rsub|t>>> (independently from the past). Denote by <math|\<mu\><rsub|i>> the mean of arm <math|i> and define

  <\equation*>
    \<mu\><rsup|\<ast\>>=max<rsub|i=1,\<ldots\>,K> \<mu\><rsub|i>*<space|2em><text|and><space|2em>i<rsup|\<ast\>>\<in\><argmax><rsub|i=1,\<ldots\>,K>\<mu\><rsub|i><nbsp>.
  </equation*>

  We focus here on the pseudo-regret, which is defined as

  <\equation>
    <label|eq:pseudoregretstocha><oR><rsub|n>=n*\<mu\><rsup|\<ast\>>-<E>*<big|sum><rsub|t=1><rsup|n>\<mu\><rsub|I<rsub|t>><nbsp>.
  </equation>

  We choose the pseudo-regret as our main quantity of interest because in a stochastic framework it is more natural to compete against the optimal action in expectation, rather than the optimal action on the sequence of realized rewards (as in the definition of the plain regret<nbsp><eqref|eq:regret>). Furthermore, because of the order of magnitude of typical random fluctuations, in general one cannot hope to prove a bound on the expected regret<nbsp><eqref|eq:exp-regret> better than <math|\<Theta\><around*|(|<sqrt|n>|)>>. On the contrary, the pseudo-regret can be controlled so well that we are able to bound it by a <with|font-shape|slanted|logarithmic> function of <math|n>.

  In the following we also use a different formula for the pseudo-regret. Let <math|T<rsub|i><around|(|s|)>=<big|sum><rsub|t=1><rsup|s><ds>*1<rsub|I<rsub|t>=i>> denote the number of times the player selected arm <math|i> on the first <math|s> rounds. Let <math|\<Delta\><rsub|i>=\<mu\><rsup|\<ast\>>-\<mu\><rsub|i>> be the suboptimality parameter of arm <math|i>. Then the pseudo-regret can be written as:

  <\equation*>
    <oR><rsub|n>=<around*|(|<big|sum><rsub|i=1><rsup|K><E>*<space|0.17em>T<rsub|i><around|(|n|)>|)>*\<mu\><rsup|\<ast\>>-<E>*<big|sum><rsub|i=1><rsup|K>T<rsub|i><around|(|n|)>*\<mu\><rsub|i>=<big|sum><rsub|i=1><rsup|K>\<Delta\><rsub|i>*<space|0.17em><E>*<space|0.17em>T<rsub|i><around|(|n|)><nbsp>.
  </equation*>

  <section|Optimism in face of uncertainty>

  The difficulty of the stochastic multi-armed bandit problem lies in the <with|font-shape|italic|exploration-exploitation dilemma> that the forecaster is facing. Indeed, there is an intrinsic tradeoff between <with|font-shape|italic|exploiting> the current knowledge to focus on the arm that seems to yield the highest rewards, and <with|font-shape|italic|exploring> further the other arms to identify with better precision which arm is actually the best. As we shall see, the key to obtain a good strategy for this problem is, in a certain sense, to simultaneously perform exploration and exploitation.

  A simple heuristic principle for doing that is the so-called <with|font-shape|italic|optimism in face of uncertainty>. The idea is very general, and applies to many sequential decision making problems in uncertain environments. Assume that the forecaster has accumulated some data on the environment and must decide how to act next. First, a set of “plausible” environments which are “consistent” with the data (typically, through concentration inequalities) is constructed. Then, the most “favorable” environment is identified in this set. Based on that, the heuristic prescribes that the decision which is optimal in this most favorable and plausible environment should be made. As we see below, this principle gives simple and yet almost optimal algorithms for the stochastic multi-armed bandit problem. More complex algorithms for various extensions of the stochastic multi-armed bandit problem are also based on the same idea which, along with the exponential weighting scheme presented in Section<nbsp><reference|adversarial>, is an algorithmic cornerstone of regret analysis in bandits.

  <section|Upper Confidence Bound (UCB) strategies><label|sec:UCB>

  In this section we assume that the distribution of rewards <math|X> satisfy the following moment conditions. There exists a convex function<footnote|One can easily generalize the discussion to functions <math|\<psi\>> defined only on an interval <math|<around|[|0,b|]>>. > <math|\<psi\>> on the reals such that, for all <math|\<lambda\>\<geq\>0>,

  <\equation>
    <label|eq:psicond>ln <E>*<space|0.17em>e<rsup|\<lambda\>*<around*|(|X-<E><around|[|X|]>|)>>\<leq\>\<psi\><around|(|\<lambda\>|)>*<space|1em><text|and><space|1em>ln <space|0.17em><E>*<space|0.17em>e<rsup|\<lambda\>*<around*|(|<E><around|[|X|]>-X|)>>\<leq\>\<psi\><around|(|\<lambda\>|)><nbsp>.
  </equation>

  For example, when <math|X\<in\><around|[|0,1|]>> one can take <math|\<psi\><around|(|\<lambda\>|)>=<tfrac|\<lambda\><rsup|2>|8>>. In this case<nbsp><eqref|eq:psicond> is known as Hoeffding's lemma.

  We attack the stochastic multi-armed bandit using the optimism in face of uncertainty principle. In order do so, we use assumption <eqref|eq:psicond> to construct an upper bound estimate on the mean of each arm at some fixed confidence level, and then choose the arm that looks best under this estimate. We need a standard notion from convex analysis: the Legendre-Fenchel transform of <math|\<psi\>>, defined by

  <\equation*>
    \<psi\><rsup|\<ast\>><around|(|\<epsilon\>|)>=sup<rsub|\<lambda\>\<in\><R>><around*|(|\<lambda\>*\<epsilon\>-\<psi\><around|(|\<lambda\>|)>|)><nbsp>.
  </equation*>

  For instance, if <math|\<psi\><around|(|x|)>=e<rsup|x>> then <math|\<psi\><rsup|\<ast\>><around|(|x|)>=x*ln x-x> for <math|x\<gtr\>0>. If <math|\<psi\><around|(|x|)>=<frac|1|p><around|\||x|\|><rsup|p>> then <math|\<psi\><rsup|\<ast\>><around|(|x|)>=<frac|1|q><around|\||x|\|><rsup|q>> for any pair <math|1\<less\>p,q\<less\>\<infty\>> such that <math|<frac|1|p>+<frac|1|q>=1> —see also Section<nbsp><reference|sec:OMD>, where the same notion is used in a different bandit model.

  Let <math|<wh|\<mu\>><rsub|i,s>> be the sample mean of rewards obtained by pulling arm <math|i> for <math|s> times. Note that since the rewards are i.i.d., we have that in distribution <math|<wh|\<mu\>><rsub|i,s>> is equal to <math|<frac|1|s>*<big|sum><rsub|t=1><rsup|s>X<rsub|i,t>>.

  Using Markov's inequality, from<nbsp><eqref|eq:psicond> one obtains that

  <\equation>
    <label|eq:psiconcentration>\<bbb-P\><around|(|\<mu\><rsub|i>-<wh|\<mu\>><rsub|i,s>\<gtr\>\<epsilon\>|)>\<leq\>e<rsup|-s*<space|0.17em>\<psi\><rsup|\<ast\>><around|(|\<epsilon\>|)>><nbsp>.
  </equation>

  In other words, with probability at least <math|1-\<delta\>>,

  <\equation*>
    <wh|\<mu\>><rsub|i,s>+<around*|(|\<psi\><rsup|\<ast\>>|)><rsup|-1>*<around*|(|<frac|1|s>*ln <frac|1|\<delta\>>|)>\<gtr\>\<mu\><rsub|i><nbsp>.
  </equation*>

  We thus consider the following strategy, called <math|<around|(|\<alpha\>,\<psi\>|)>>-UCB, where <math|\<alpha\>\<gtr\>0> is an input parameter: At time <math|t>, select

  <\equation*>
    I<rsub|t>\<in\><argmax><rsub|i=1,\<ldots\>,K><around*|[|<wh|\<mu\>><rsub|i,T<rsub|i>*<around|(|t-1|)>>+<around*|(|\<psi\><rsup|\<ast\>>|)><rsup|-1><around*|(|<frac|\<alpha\>*ln t|T<rsub|i>*<around|(|t-1|)>>|)>|]><nbsp>.
  </equation*>

  We can prove the following simple bound.

  <\theorem>
    [Pseudo-regret of <math|<around|(|\<alpha\>,\<psi\>|)>>-UCB]<label|th:ucb>Assume that the reward distributions satisfy <eqref|eq:psicond>. Then <math|<around|(|\<alpha\>,\<psi\>|)>>-UCB with <math|\<alpha\>\<gtr\>2> satisfies

    <\equation*>
      <oR><rsub|n>\<leq\><big|sum><rsub|i<space|0.17em>:<space|0.17em>\<Delta\><rsub|i>\<gtr\>0><around*|(|<frac|\<alpha\>*\<Delta\><rsub|i>|\<psi\><rsup|\<ast\>>*<around|(|\<Delta\><rsub|i>/2|)>>*ln n+<frac|\<alpha\>|\<alpha\>-2>|)><nbsp>.
    </equation*>
  </theorem>

  In case of <math|<around|[|0,1|]>>-valued random variables, taking <math|\<psi\><around|(|\<lambda\>|)>=<tfrac|\<lambda\><rsup|2>|8>> in<nbsp><eqref|eq:psicond> —the Hoeffding's Lemma— gives <math|\<psi\><rsup|\<ast\>><around|(|\<epsilon\>|)>=2*\<epsilon\><rsup|2>>, which in turns gives the following pseudo-regret bound

  <\equation>
    <label|eq:regretUCBbounded><oR><rsub|n>\<leq\><big|sum><rsub|i:\<Delta\><rsub|i>\<gtr\>0><around*|(|<frac|2*\<alpha\>|\<Delta\><rsub|i>>*ln n+<frac|\<alpha\>|\<alpha\>-2>|)><nbsp>.
  </equation>

  In this important special case of bounded random variables we refer to <math|<around|(|\<alpha\>,\<psi\>|)>>-UCB simply as <math|\<alpha\>>-UCB.

  <\proof>
    First note that if <math|I<rsub|t>=i>, then at least one of the three following equations must be true:

    <\align>
      <tformat|<table|<row|<cell|>|<cell|<wh|\<mu\>><rsub|i<rsup|\<ast\>>,T<rsub|i<rsup|\<ast\>>>*<around|(|t-1|)>>+<around*|(|\<psi\><rsup|\<ast\>>|)><rsup|-1><around*|(|<frac|\<alpha\>*ln t|T<rsub|i<rsup|\<ast\>>>*<around|(|t-1|)>>|)>\<leq\>\<mu\><rsup|\<ast\>><eq-number><label|eq:UCB1>>>|<row|<cell|>|<cell|<wide|\<mu\>|^><rsub|i,T<rsub|i>*<around|(|t-1|)>>\<gtr\>\<mu\><rsub|i>+<around*|(|\<psi\><rsup|\<ast\>>|)><rsup|-1><around*|(|<frac|\<alpha\>*ln t|T<rsub|i>*<around|(|t-1|)>>|)><eq-number><label|eq:UCB2>>>|<row|<cell|>|<cell|T<rsub|i>*<around|(|t-1|)>\<less\><frac|\<alpha\>*ln n|\<psi\><rsup|\<ast\>>*<around|(|\<Delta\><rsub|i>/2|)>><nbsp>.<eq-number><label|eq:UCB3>>>>>
    </align>

    Indeed, assume that the three equations are all false, then we have:

    <\align*>
      <tformat|<table|<row|<cell|<wh|\<mu\>><rsub|i<rsup|\<ast\>>,T<rsub|i<rsup|\<ast\>>>*<around|(|t-1|)>>+<around*|(|\<psi\><rsup|\<ast\>>|)><rsup|-1><around*|(|<frac|\<alpha\>*ln t|T<rsub|i<rsup|\<ast\>>>*<around|(|t-1|)>>|)>>|<cell|\<gtr\>\<mu\><rsup|\<ast\>>>>|<row|<cell|>|<cell|=\<mu\><rsub|i>+\<Delta\><rsub|i>>>|<row|<cell|>|<cell|\<geq\>\<mu\><rsub|i>+2<around*|(|\<psi\><rsup|\<ast\>>|)><rsup|-1><around*|(|<frac|\<alpha\>*ln t|T<rsub|i>*<around|(|t-1|)>>|)>>>|<row|<cell|>|<cell|\<geq\><wide|\<mu\>|^><rsub|i,T<rsub|i>*<around|(|t-1|)>>+<around*|(|\<psi\><rsup|\<ast\>>|)><rsup|-1><around*|(|<frac|\<alpha\>*ln t|T<rsub|i>*<around|(|t-1|)>>|)>>>>>
    </align*>

    which implies, in particular, that <math|I<rsub|t>\<neq\>i>. In other words, letting

    <\equation*>
      u=<around*|\<lceil\>|<frac|\<alpha\>*ln n|\<psi\><rsup|\<ast\>>*<around|(|\<Delta\><rsub|i>/2|)>>|\<rceil\>>
    </equation*>

    we just proved

    <\align*>
      <tformat|<table|<row|<cell|<E>*<space|0.17em>T<rsub|i><around|(|n|)>=<E>*<big|sum><rsub|t=1><rsup|n><with|font-series|bold|1><rsub|I<rsub|t>=i>>|<cell|\<leq\>u+<E>*<big|sum><rsub|t=u+1><rsup|n><with|font-series|bold|1><rsub|I<rsub|t>=i<space|0.27em><text|and <eqref|eq:UCB3> is false>>>>|<row|<cell|>|<cell|\<leq\>u+<E>*<big|sum><rsub|t=u+1><rsup|n><with|font-series|bold|1><rsub|<text|<eqref|eq:UCB1> or <eqref|eq:UCB2> is true>>>>|<row|<cell|>|<cell|=u+<big|sum><rsub|t=u+1><rsup|n>\<bbb-P\><around*|(|<text|<eqref|eq:UCB1> is true>|)>+\<bbb-P\><around*|(|<text|<eqref|eq:UCB2> is true>|)>.>>>>
    </align*>

    Thus it suffices to bound the probability of the events <eqref|eq:UCB1> and <eqref|eq:UCB2>. Using an union bound and <eqref|eq:psiconcentration> one directly obtains:

    <\align*>
      <tformat|<table|<row|<cell|\<bbb-P\><around*|(|<text|<eqref|eq:UCB1> is true>|)>>|<cell|\<leq\>\<bbb-P\><around*|(|\<exists\>s\<in\><around|{|1,\<ldots\>,t|}>:<wh|\<mu\>><rsub|i<rsup|\<ast\>>,s>+<around*|(|\<psi\><rsup|\<ast\>>|)><rsup|-1><around*|(|<frac|\<alpha\>*ln t|s>|)>\<leq\>\<mu\><rsup|\<ast\>>|)>>>|<row|<cell|>|<cell|\<leq\><big|sum><rsub|s=1><rsup|t>\<bbb-P\><around*|(|<wh|\<mu\>><rsub|i<rsup|\<ast\>>,s>+<around*|(|\<psi\><rsup|\<ast\>>|)><rsup|-1><around*|(|<frac|\<alpha\>*ln t|s>|)>\<leq\>\<mu\><rsup|\<ast\>>|)>>>|<row|<cell|>|<cell|\<leq\><big|sum><rsub|s=1><rsup|t><frac|1|t<rsup|\<alpha\>>>=<frac|1|t<rsup|\<alpha\>-1>><nbsp>.>>>>
    </align*>

    The same upper bound holds for <eqref|eq:UCB2>. Straightforward computations conclude the proof.
  </proof>

  <section|Lower bound><label|s:stoch-lower>

  We now show that the result of the previous section is essentially unimprovable when the reward distributions are Bernoulli. For <math|p,q\<in\><around|[|0,1|]>> we denote by <math|<kl><around|(|p,q|)>> the Kullback-Leibler divergence between a Bernoulli of parameter <math|p> and a Bernoulli of parameter <math|q>, defined as

  <\equation*>
    <kl><around|(|p,q|)>=p*ln <frac|p|q>+<around|(|1-p|)>*ln <frac|1-p|1-q><nbsp>.
  </equation*>

  <\theorem>
    [Distribution-dependent lower bound]<label|th:LR85>Consider a strategy that satisfies <math|<E>*<space|0.17em>T<rsub|i><around|(|n|)>=o<around|(|n<rsup|a>|)>> for any set of Bernoulli reward distributions, any arm <math|i> with <math|\<Delta\><rsub|i>\<gtr\>0>, and any <math|a\<gtr\>0>. Then, for any set of Bernoulli reward distributions the following holds

    <\equation*>
      liminf<rsub|n\<to\>+\<infty\>> <frac|<oR><rsub|n>|ln n>\<geq\><big|sum><rsub|i<space|0.17em>:<space|0.17em>\<Delta\><rsub|i>\<gtr\>0><frac|\<Delta\><rsub|i>|<kl><around|(|\<mu\><rsub|i>,\<mu\><rsup|\<ast\>>|)>><nbsp>.
    </equation*>
  </theorem>

  In order to compare this result with <eqref|eq:regretUCBbounded> we use the following standard inequalities (the left hand side follows from Pinsker's inequality, and the right hand side simply uses <math|ln x\<leq\>x-1>),

  <\equation>
    <label|eq:klbernoullis>2*<around|(|p-q|)><rsup|2>\<leq\><kl><around|(|p,q|)>\<leq\><frac|<around|(|p-q|)><rsup|2>|q*<around|(|1-q|)>><nbsp>.
  </equation>

  <\proof>
    The proof is organized in three steps. For simplicity, we only consider the case of two arms.

    <subsection*|First step: Notations.>

    Without loss of generality assume that arm <math|1> is optimal and arm <math|2> is suboptimal, that is <math|\<mu\><rsub|2>\<less\>\<mu\><rsub|1>\<less\>1>. Let <math|\<epsilon\>\<gtr\>0>. Since <math|x\<mapsto\><kl><around|(|\<mu\><rsub|2>,x|)>> is continuous one can find <math|\<mu\><rsub|2><rprime|'>\<in\><around|(|\<mu\><rsub|1>,1|)>> such that

    <\equation>
      <label|eq:defmu2prime><kl><around|(|\<mu\><rsub|2>,\<mu\><rsub|2><rprime|'>|)>\<leq\><around|(|1+\<epsilon\>|)><kl><around|(|\<mu\><rsub|2>,\<mu\><rsub|1>|)><nbsp>.
    </equation>

    We use the notation <math|<E><rprime|'>,\<bbb-P\><rprime|'>> when we integrate with respect to the modified bandit where the parameter of arm <math|2> is replaced by <math|\<mu\><rsub|2><rprime|'>>. We want to compare the behavior of the forecaster on the initial and modified bandits. In particular, we prove that with a big enough probability the forecaster can not distinguish between the two problems. Then, using the fact that we have a good forecaster by hypothesis, we know that the algorithm does not make too many mistakes on the modified bandit where arm <math|2> is optimal. In other words, we have a lower bound on the number of times the optimal arm is played. This reasoning implies a lower bound on the number of times arm <math|2> is played in the initial problem.

    We now slightly change the notation for rewards and denote by <math|X<rsub|2,1>,\<ldots\>,X<rsub|2,n>> the sequence of random variables obtained when pulling arm <math|2> for <math|n> times (that is, <math|X<rsub|2,s>> is the reward obtained from the <math|s>-th pull). For <math|s\<in\><around|{|1,\<ldots\>,n|}>>, let

    <\equation*>
      <wide|<kl>|^><rsub|s>=<big|sum><rsub|t=1><rsup|s>ln <frac|\<mu\><rsub|2>*X<rsub|2,t>+<around|(|1-\<mu\><rsub|2>|)>*<around|(|1-X<rsub|2,t>|)>|\<mu\><rsub|2><rprime|'>*X<rsub|2,t>+<around|(|1-\<mu\><rsub|2><rprime|'>|)>*<around|(|1-X<rsub|2,t>|)>><nbsp>.
    </equation*>

    Note that, with respect to the initial bandit, <math|<wide|<kl>|^><rsub|T<rsub|2><around|(|n|)>>> is the (non re-normalized) empirical estimate of <math|<kl><around|(|\<mu\><rsub|2>,\<mu\><rsub|2><rprime|'>|)>> at time <math|n>, since in that case the process <math|<around|(|X<rsub|2,s>|)>> is i.i.d. from a Bernoulli of parameter <math|\<mu\><rsub|2>>. Another important property is the following: for any event <math|A> in the <math|\<sigma\>>-algebra generated by <math|X<rsub|2,1>,\<ldots\>,X<rsub|2,n>> the following change-of-measure identity holds:

    <\equation>
      <label|eq:KLchapeauprop>\<bbb-P\><rprime|'><around|(|A|)>=<E><around*|[|<with|font-series|bold|1><rsub|A>*exp <around*|(|-<wide|<kl>|^><rsub|T<rsub|2><around|(|n|)>>|)>|]><nbsp>.
    </equation>

    In order to link the behavior of the forecaster on the initial and modified bandits we introduce the event

    <\equation>
      <label|eq:cndef>C<rsub|n>=<around*|{|T<rsub|2><around|(|n|)>\<less\><frac|1-\<epsilon\>|<kl><around|(|\<mu\><rsub|2>,\<mu\><rsub|2><rprime|'>|)>>*ln <around|(|n|)><space|0.27em><space|0.27em><text|and><space|0.27em><space|0.27em><wide|<kl>|^><rsub|T<rsub|2><around|(|n|)>>\<leq\><around*|(|1-<frac|\<epsilon\>|2>|)>*ln <around|(|n|)>|}><nbsp>.
    </equation>

    <subsection*|Second step: <math|\<bbb-P\><around|(|C<rsub|n>|)>=o<around|(|1|)>>.>

    By <eqref|eq:KLchapeauprop> and <eqref|eq:cndef> one has

    <\equation*>
      \<bbb-P\><rprime|'><around|(|C<rsub|n>|)>=<E>*<space|0.27em><with|font-series|bold|1><rsub|C<rsub|n>>*exp <around*|(|-<wide|<kl>|^><rsub|T<rsub|2><around|(|n|)>>|)>\<geq\>e<rsup|-<around|(|1-\<epsilon\>/2|)>*ln <around|(|n|)>>\<bbb-P\><around|(|C<rsub|n>|)><nbsp>.
    </equation*>

    Introduce the shorthand

    <\equation*>
      f<rsub|n>=<frac|1-\<epsilon\>|<kl><around|(|\<mu\><rsub|2>,\<mu\><rsub|2><rprime|'>|)>>*ln <around|(|n|)><nbsp>.
    </equation*>

    Using again<nbsp><eqref|eq:cndef> and Markov's inequality, the above implies

    <\align*>
      <tformat|<table|<row|<cell|\<bbb-P\><around|(|C<rsub|n>|)>\<leq\>n<rsup|<around|(|1-\<epsilon\>/2|)>>\<bbb-P\><rprime|'><around|(|C<rsub|n>|)>>|<cell|\<leq\>n<rsup|<around|(|1-\<epsilon\>/2|)>>\<bbb-P\><rprime|'><around|(|T<rsub|2><around|(|n|)>\<less\>f<rsub|n>|)>>>|<row|<cell|>|<cell|\<leq\>n<rsup|<around|(|1-\<epsilon\>/2|)>>*<frac|<E><rprime|'>*<around|[|n-T<rsub|2><around|(|n|)>|]>|n-f<rsub|n>><nbsp>.>>>>
    </align*>

    Now note that in the modified bandit arm <math|2> is the unique optimal arm. Hence the assumption that for any bandit, any suboptimal arm <math|i>, and any <math|a\<gtr\>0>, the strategy satisfies <math|<E>*<space|0.17em>T<rsub|i><around|(|n|)>=o<around|(|n<rsup|a>|)>>, implies that

    <\equation*>
      \<bbb-P\><around|(|C<rsub|n>|)>\<leq\>n<rsup|<around|(|1-\<epsilon\>/2|)>>*<frac|<E><rprime|'>*<around|[|n-T<rsub|2><around|(|n|)>|]>|n-f<rsub|n>>=o<around|(|1|)><nbsp>.
    </equation*>

    <subsection*|Third step: <math|\<bbb-P\><around*|(|T<rsub|2><around|(|n|)>\<less\>f<rsub|n>|)>=o<around|(|1|)>>.>

    Observe that

    <\align>
      <tformat|<table|<row|<cell|\<bbb-P\><around|(|C<rsub|n>|)>>|<cell|\<ge\>\<bbb-P\><around*|(|T<rsub|2><around|(|n|)>\<less\>f<rsub|n>*<space|0.27em><space|0.27em><text|and><space|0.27em><space|0.27em>max<rsub|s\<le\>f<rsub|n>><wide|<kl>|^><rsub|s>\<leq\><around*|(|1-<frac|\<epsilon\>|2>|)>*ln <around|(|n|)>|)><eq-number>>>|<row|<cell|>|<cell|=\<bbb-P\><around*|(|T<rsub|2><around|(|n|)>\<less\>f<rsub|n>|\<nobracket\>><eq-number>>>|<row|<cell|>|<cell|<around*|\<nobracket\>|<space|2em><text|and><space|0.27em><space|0.27em><frac|<kl><around|(|\<mu\><rsub|2>,\<mu\><rsub|2><rprime|'>|)>|<around|(|1-\<epsilon\>|)>*ln <around|(|n|)>>\<times\>max<rsub|s\<le\>f<rsub|n>><wide|<kl>|^><rsub|s>\<leq\><frac|1-\<epsilon\>/2|1-\<epsilon\>><kl><around|(|\<mu\><rsub|2>,\<mu\><rsub|2><rprime|'>|)>|)><nbsp>.<eq-number><label|eq:endLR>>>>>
    </align>

    Now we use the maximal version of the strong law of large numbers: for any sequence <math|<around*|(|X<rsub|t>|)>> of independent real random variables with positive mean <math|\<mu\>\<gtr\>0>,

    <\equation*>
      lim<rsub|n\<to\>\<infty\>> <frac|1|n>*<big|sum><rsub|t=1><rsup|n>X<rsub|t>=\<mu\>*<space|1em>a.*s.*<space|1em><text|implies><space|1em>lim<rsub|n\<to\>\<infty\>> <frac|1|n>*max<rsub|s=1,\<ldots\>,n> <big|sum><rsub|t=1><rsup|s>X<rsub|t>=\<mu\>*<space|1em>a.*s.
    </equation*>

    See, e.g., <cite-detail|Bub10|Lemma 10.5>.

    Since <math|<kl><around|(|\<mu\><rsub|2>,\<mu\><rsub|2><rprime|'>|)>\<gtr\>0> and <math|<frac|1-\<epsilon\>/2|1-\<epsilon\>>\<gtr\>1>, we deduce that

    <\equation*>
      lim<rsub|n\<to\>\<infty\>>\<bbb-P\><around*|(|<frac|<kl><around|(|\<mu\><rsub|2>,\<mu\><rsub|2><rprime|'>|)>|<around|(|1-\<epsilon\>|)>*ln <around|(|n|)>>\<times\>max<rsub|s\<le\>f<rsub|n>><wide|<kl>|^><rsub|s>\<leq\><frac|1-\<epsilon\>/2|1-\<epsilon\>><kl><around|(|\<mu\><rsub|2>,\<mu\><rsub|2><rprime|'>|)>|)>=1<nbsp>.
    </equation*>

    Thus, by the result of the second step and<nbsp><eqref|eq:endLR>, we get

    <\equation*>
      \<bbb-P\><around*|(|T<rsub|2><around|(|n|)>\<less\>f<rsub|n>|)>=o<around|(|1|)><nbsp>.
    </equation*>

    Now recalling that <math|f<rsub|n>=<frac|1-\<epsilon\>|<kl><around|(|\<mu\><rsub|2>,\<mu\><rsub|2><rprime|'>|)>>*ln <around|(|n|)>>, and using<nbsp><eqref|eq:defmu2prime>, we obtain

    <\equation*>
      <E>*<space|0.17em>T<rsub|2><around|(|n|)>\<geq\><around|(|1+o<around|(|1|)>|)>*<frac|1-\<epsilon\>|1+\<epsilon\>>*<frac|ln <around|(|n|)>|<kl><around|(|\<mu\><rsub|2>,\<mu\><rsub|1>|)>>
    </equation*>

    which concludes the proof.
  </proof>

  <section|Refinements and bibliographic remarks>

  The UCB strategy presented in Section <reference|sec:UCB> was introduced by <cite|ACF02> for bounded random variables. Theorem<nbsp><reference|th:LR85> is extracted from <cite|LR85>. Note that in this last paper the result is more general than ours, which is restricted to Bernoulli distributions. Although <cite|BK97> prove an even more general lower bound, Theorem <reference|th:LR85> and the UCB regret bound provide a reasonably complete solution to the problem. We now discuss some of the possible refinements. In the following, we restrict our attention to the case of bounded rewards (except in Section <reference|sec:heavytail>).

  <subsection|Improved constants>

  The regret bound proof for UCB can be improved in two ways. First, the union bound over the different time steps can be replaced by a “peeling” argument. This allows to show a logarithmic regret for any <math|\<alpha\>\<gtr\>1>, whereas the proof of Section<nbsp><reference|sec:UCB> requires <math|\<alpha\>\<gtr\>2> —see <cite-detail|Bub10|Section 2.2> for more details. A second improvement, proposed by <cite|GC11>, is to use a more subtle set of conditions than <eqref|eq:UCB1>–<eqref|eq:UCB3>. In fact, the authors take both improvements into account, and show that <math|\<alpha\>>-UCB has a regret of order <math|<frac|\<alpha\>|2>*ln n> for any <math|\<alpha\>\<gtr\>1>. In the limit when <math|\<alpha\>> tends to <math|1>, this constant is unimprovable in light of Theorem<nbsp><reference|th:LR85> and <eqref|eq:klbernoullis>.

  <subsection|Second order bounds>

  Although <math|\<alpha\>>-UCB is essentially optimal, the gap between <eqref|eq:regretUCBbounded> and Theorem <reference|th:LR85> can be important if <math|<kl><around|(|\<mu\><rsub|i<rsup|\<ast\>>>,\<mu\><rsub|i>|)>> is significantly larger than <math|\<Delta\><rsub|i><rsup|2>>. Several improvements have been proposed towards closing this gap. In particular, the UCB-V algorithm of <cite|AMS09> takes into account the variance of the distributions and replaces Hoeffding's inequality by Bernstein's inequality in the derivation of UCB. A previous algorithm with similar ideas was developed by <cite|ACF02> without theoretical guarantees. A second type of approach replaces <math|L<rsub|2>>-neighborhoods in <math|\<alpha\>>-UCB by <math|<kl>>-neighborhoods. This line of work started with <cite|HT10> where only asymptotic guarantees were provided. Later, <cite|GC11> and<nbsp><cite|MMS11> (see also <cite|CGMMS12>) independently proposed a similar algorithm, called KL-UCB, which is shown to attain the optimal rate in finite-time. More precisely, <cite|GC11> showed that KL-UCB attains a regret smaller than

  <\equation*>
    <big|sum><rsub|i<space|0.17em>:<space|0.17em>\<Delta\><rsub|i>\<gtr\>0><frac|\<Delta\><rsub|i>|<kl><around|(|\<mu\><rsub|i>,\<mu\><rsup|\<ast\>>|)>>*\<alpha\>*ln n+\<cal-O\><around|(|1|)>
  </equation*>

  where <math|\<alpha\>\<gtr\>1> is a parameter of the algorithm. Thus, KL-UCB is optimal for Bernoulli distributions, and strictly dominates <math|\<alpha\>>-UCB for any bounded reward distributions.

  <subsection|Distribution-free bounds>

  In the limit when <math|\<Delta\><rsub|i>> tends to <math|0>, the upper bound in <eqref|eq:regretUCBbounded> becomes vacuous. On the other hand, it is clear that the regret incurred from pulling arm <math|i> cannot be larger than <math|n*<space|0.17em>\<Delta\><rsub|i>>. Using this idea, it is easy to show that the regret of <math|\<alpha\>>-UCB is always smaller than <math|<sqrt|\<alpha\>*n*K*ln n>> (up to a numerical constant). However, as we shall see in the next chapter, one can show a minimax lower bound on the regret of order <math|<sqrt|n*K>>. <cite|AB09> proposed a modification of <math|\<alpha\>>-UCB that gets rid of the extraneous logarithmic term in the upper bound. More precisely, let <math|\<Delta\>=min<rsub|i\<neq\>i<rsup|\<ast\>>> \<Delta\><rsub|i>>, <cite|AB10> show that MOSS (Minimax Optimal Strategy in the Stochastic case) attains a regret smaller than

  <\equation*>
    min <around*|{|<sqrt|n*K>,<space|0.17em><frac|K|\<Delta\>>*ln <frac|n*\<Delta\><rsup|2>|K>|}>
  </equation*>

  up to a numerical constant. The weakness of this result is that the second term in the above equation only depends on the smallest gap <math|\<Delta\>>. In <cite|AO10> (see also <cite|PR11>) the authors designed a strategy, called improved UCB, with a regret of order

  <\equation*>
    <big|sum><rsub|i<space|0.17em>:<space|0.17em>\<Delta\><rsub|i>\<gtr\>0><frac|1|\<Delta\><rsub|i>>*ln <around*|(|n*\<Delta\><rsub|i><rsup|2>|)><nbsp>.
  </equation*>

  This latter regret bound can be better than the one for MOSS in some regimes, but it does not attain the minimax optimal rate of order <math|<sqrt|n*K>>. It is an open problem to obtain a strategy with a regret always better than those of MOSS and improved UCB. A plausible conjecture is that a regret of order

  <\equation*>
    <big|sum><rsub|i<space|0.17em>:<space|0.17em>\<Delta\><rsub|i>\<gtr\>0><frac|1|\<Delta\><rsub|i>>*ln <frac|n|H>*<space|2em><text|with><space|2em>H=<big|sum><rsub|i<space|0.17em>:<space|0.17em>\<Delta\><rsub|i>\<gtr\>0><frac|1|\<Delta\><rsub|i><rsup|2>>
  </equation*>

  is attainable. Note that the quantity <math|H> appears in other variants of the stochastic multi-armed bandit problem, see <cite|ABM10>.

  <subsection|High probability bounds>

  While bounds on the pseudo-regret <math|<oR><rsub|n>> are important, one typically wants to control the quantity <math|<wide|R|^><rsub|n>=n*\<mu\><rsup|\<ast\>>-<big|sum><rsub|t=1><rsup|n>\<mu\><rsub|I<rsub|t>>> with high probability. Showing that <math|<wide|R|^><rsub|n>> is close to its expectation <math|<oR><rsub|n>> is a challenging task, since naively one might expect the fluctuations of <math|<wide|R|^><rsub|n>> to be of order <math|<sqrt|n>>, which would dominate the expectation <math|<oR><rsub|n>> which is only of order <math|ln n>. The concentration properties of <math|<wide|R|^><rsub|n>> for UCB are analyzed in detail in <cite|AMS09>, where it is shown that <math|<wide|R|^><rsub|n>> concentrates around its expectation, but that there is also a polynomial (in <math|n>) probability that <math|<wide|R|^><rsub|n>> is of order <math|n>. In fact the polynomial concentration of <math|<wide|R|^><rsub|n>> around <math|<oR><rsub|n>> can be directly derived from our proof of Theorem <reference|th:ucb>. In <cite|SA11> it is proved that for anytime strategies (i.e., strategies that do not use the time horizon <math|n>) it is basically impossible to improve this polynomial concentration to a classical exponential concentration. In particular this shows that, as far as high probability bounds are concerned, anytime strategies are surprisingly weaker than strategies using the time horizon information (for which exponential concentration of <math|<wide|R|^><rsub|n>> around <math|ln n> are possible, see <cite|AMS09>).

  <subsection|<math|\<epsilon\>>-greedy>

  A simple and popular heuristic for bandit problems is the <math|<ve>>-greedy strategy —see, e.g., <cite|SB98>. The idea is very simple. First, pick a parameter <math|0\<less\><ve>\<less\>1>. Then, at each step greedily play the arm with highest empirical mean reward with probability <math|1-<ve>>, and play a random arm with probability <math|<ve>>. <cite|ACF02> proved that, if <math|<ve>> is allowed to be a certain function <math|<ve><rsub|t>> of the current time step <math|t>, namely <math|<ve><rsub|t>=K/<around|(|d<rsup|2>*t|)>>, then the regret grows logarithmically like <math|<around|(|K*ln n|)>/d<rsup|2>>, provided <math|0\<less\>d\<less\>min<rsub|i\<neq\>i<rsup|\<ast\>>> \<Delta\><rsub|i>>. While this bound has a suboptimal dependence on <math|d>, <cite|ACF02> show that this algorithm performs well in practice, but the performance degrades quickly if <math|d> is not chosen as a tight lower bound of <math|min<rsub|i\<neq\>i<rsup|\<ast\>>> \<Delta\><rsub|i>>.

  <subsection|Thompson sampling>

  In the very first paper on the multi-armed bandit problem, <cite|Tho33>, a simple strategy was proposed for the case of Bernoulli distributions. The so-called Thompson sampling algorithm proceeds as follows. Assume a uniform prior on the parameters <math|\<mu\><rsub|i>\<in\><around|[|0,1|]>>, let <math|\<pi\><rsub|i,t>> be the posterior distribution for <math|\<mu\><rsub|i>> at the <math|t<rsup|t*h>> round, and let <math|\<theta\><rsub|i,t>\<sim\>\<pi\><rsub|i,t>> (independently from the past given <math|\<pi\><rsub|i,t>>). The strategy is then given by <math|I<rsub|t>\<in\><argmax><rsub|i=1,\<ldots\>,K>\<theta\><rsub|i,t>>. Recently there has been a surge of interest for this simple policy, mainly because of its flexibility to incorporate prior knowledge on the arms, see for example <cite|CLi11> and the references therein. While the theoretical behavior of Thompson sampling has remained elusive for a long time, we have now a fairly good understanding of its theoretical properties: in <cite|AG12> the first logarithmic regret bound was proved, and in <cite|KKM12> it was showed that in fact Thompson sampling attains essentially the same regret than in <eqref|eq:regretUCBbounded>. Interestingly note that while Thompson sampling comes from a Bayesian reasoning, it is analyzed with a frequentist perspective. For more on the interplay between Bayesian strategy and frequentist regret analysis we refer the reader to <cite|KCG12>.

  <subsection|Heavy-tailed distributions><label|sec:heavytail>

  We showed in Section <reference|sec:UCB> how to obtain a UCB-type strategy through a bound on the moment generating function. Moreover one can see that the resulting bound in Theorem <reference|th:ucb> deteriorates as the tail of the distributions become heavier. In particular, we did not provide any result for the case of distributions for which the moment generating function is not finite. Surprisingly, it was shown in <cite|BCL12> that in fact there exists strategy with essentially the same regret than in <eqref|eq:regretUCBbounded>, as soon as the <with|font-shape|italic|variance> of the distributions are finite. More precisely, using more refined robust estimators of the mean than the basic empirical mean, one can construct a UCB-type strategy such that for distributions with moment of order <math|1+\<epsilon\>> bounded by <math|1> it satisfies

  <\equation*>
    R<rsub|n>\<leq\><big|sum><rsub|i<space|0.17em>:<space|0.17em>\<Delta\><rsub|i>\<gtr\>0><around*|(|8<around*|(|<frac|4|\<Delta\><rsub|i>>|)><rsup|<frac|1|\<epsilon\>>>*ln n+5*\<Delta\><rsub|i>|)><nbsp>.
  </equation*>

  We refer the interested reader to <cite|BCL12> for more details on these 'robust' versions of UCB.

  <chapter|Adversarial bandits: fundamental results><label|adversarial>

  In this chapter we consider the important variant of the multi-armed bandit problem where no stochastic assumption is made on the generation of rewards. Denote by <math|g<rsub|i,t>> the reward (or gain) of arm <math|i> at time step <math|t>. We assume all rewards are bounded, say <math|g<rsub|i,t>\<in\><around|[|0,1|]>>. At each time step <math|t=1,2,\<ldots\>>, simultaneously with the player's choice of the arm <math|I<rsub|t>\<in\><around|{|1,\<ldots\>,K|}>>, an adversary assigns to each arm <math|i=1,\<ldots\>,K> the reward <math|g<rsub|i,t>>. Similarly to the stochastic setting, we measure the performance of the player compared to the performance of the best arm through the regret

  <\equation*>
    R<rsub|n>=max<rsub|i=1,\<ldots\>,K> <big|sum><rsub|t=1><rsup|n>g<rsub|i,t>-<big|sum><rsub|t=1><rsup|n>g<rsub|I<rsub|t>,t><nbsp>.
  </equation*>

  Sometimes we consider losses rather than gains. In this case we denote by <math|\<ell\><rsub|i,t>> the loss of arm <math|i> at time step <math|t>, and the regret rewrites as

  <\equation*>
    R<rsub|n>=<big|sum><rsub|t=1><rsup|n>\<ell\><rsub|I<rsub|t>,t>-min<rsub|i=1,\<ldots\>,K> <big|sum><rsub|t=1><rsup|n>\<ell\><rsub|i,t><nbsp>.
  </equation*>

  The loss and gain versions are symmetric, in the sense that one can translate the analysis from one to the other setting via the equivalence <math|\<ell\><rsub|i,t>=1-g<rsub|i,t>>. In the following we emphasize the loss version, but we revert to the gain version whenever it makes proofs simpler.

  The main goal is to achieve sublinear (in the number of rounds) bounds on the regret uniformly over all possible adversarial assignments of gains to arms. At first sight, this goal might seem hopeless. Indeed, for any deterministic forecaster there exists a sequence of losses <math|<around|(|\<ell\><rsub|i,t>|)>> such that <math|R<rsub|n>\<geq\>n/2>. Concretely, it suffices to consider the following sequence of losses:

  <\equation*>
    <tabular*|<tformat|<cwith|1|-1|1|1|cell-halign|c>|<cwith|1|-1|1|1|cell-lborder|0ln>|<cwith|1|-1|1|1|cell-rborder|0ln>|<table|<row|<cell|<text|if><space|0.27em>I<rsub|t>=1,<space|0.27em><text|then><space|0.27em>\<ell\><rsub|2,t>=0*<space|0.27em><text|and><space|0.27em>\<ell\><rsub|i,t>=1*<space|0.27em><text|for all><space|0.27em>i\<neq\>2;>>|<row|<cell|<text|if><space|0.27em>I<rsub|t>\<neq\>1,<space|0.27em><text|then><space|0.27em>\<ell\><rsub|1,t>=0*<space|0.27em><text|and><space|0.27em>\<ell\><rsub|i,t>=1*<space|0.27em><text|for all><space|0.27em>i\<neq\>1.>>>>>
  </equation*>

  The key idea to get around this difficulty is to add randomization to the selection of the action <math|I<rsub|t>> to play. By doing so, the forecaster can “surprise” the adversary, and this surprise effect suffices to get a regret essentially as low as the minimax regret for the stochastic model. Since the regret <math|R<rsub|n>> then becomes a random variable, the goal is thus to obtain bounds in high probability or in expectation on <math|R<rsub|n>> (with respect to both eventual randomization of the forecaster and of the adversary). This task is fairly difficult, and a convenient first step is to bound the pseudo-regret

  <\equation>
    <label|eq:pseudoregretadv><oR><rsub|n>=<E>*<big|sum><rsub|t=1><rsup|n>\<ell\><rsub|I<rsub|t>,t>-min<rsub|i=1,\<ldots\>,K> <E>*<big|sum><rsub|t=1><rsup|n>\<ell\><rsub|i,t><nbsp>.
  </equation>

  Clearly <math|<oR><rsub|n>\<leq\><E>*<space|0.17em>R<rsub|n>>, and thus an upper bound on the pseudo-regret does not imply a bound on the expected regret. As argued in the Introduction, the pseudo-regret has no natural interpretation unless the adversary is oblivious. In that case, the pseudo-regret coincides with the standard regret, which is always the ultimate quantity of interest.

  <section|Pseudo-regret bounds>

  As we pointed out, in order to obtain non-trivial regret guarantees in the adversarial framework it is necessary to consider randomized forecasters. Below we describe the randomized forecaster Exp3, which is based on two fundamental ideas.

  <\padded-center>
    <\bookbox>
      <with|font-shape|italic|Exp3 (Exponential weights for Exploration and Exploitation)><next-line>Parameter: a non-increasing sequence of real numbers <math|<around|(|\<eta\><rsub|t>|)><rsub|t\<in\><N>>>.

      <vspace*|0.5fn><no-indent>Let <math|p<rsub|1>> be the uniform distribution over <math|<around|{|1,\<ldots\>,K|}>>.

      <vspace*|0.5fn><no-indent>For each round <math|t=1,2,\<ldots\>,n>

      <\itemize>
        <item*|(1)>Draw an arm <math|I<rsub|t>> from the probability distribution <math|p<rsub|t>>.

        <item*|(2)>For each arm <math|i=1,\<ldots\>,K> compute the estimated loss <math|<wide|\<ell\>|~><rsub|i,t>=<frac|\<ell\><rsub|i,t>|p<rsub|i,t>>*<with|font-series|bold|1><rsub|I<rsub|t>=i>> and update the estimated cumulative loss <math|<wide|L|~><rsub|i,t>=<wide|L|~><rsub|i,t-1>+<wide|\<ell\>|~><rsub|i,s>>.

        <item*|(3)>Compute the new probability distribution over arms <math|p<rsub|t+1>=<around*|(|p<rsub|1,t+1>,\<ldots\>,p<rsub|K,t+1>|)>>, where

        <\equation*>
          p<rsub|i,t+1>=<frac|exp <around*|(|-\<eta\><rsub|t>*<wide|L|~><rsub|i,t>|)>|<big|sum><rsub|k=1><rsup|K>exp <around*|(|-\<eta\><rsub|t>*<wide|L|~><rsub|k,t>|)>><nbsp>.
        </equation*>
      </itemize>
    </bookbox>
  </padded-center>

  First, despite the fact that only the loss of the played arm is observed, with a simple trick it is still possible to build an unbiased estimator for the loss of any other arm. Namely, if the next arm <math|I<rsub|t>> to be played is drawn from a probability distribution <math|p<rsub|t>=<around*|(|p<rsub|1,t>,\<ldots\>,p<rsub|K,t>|)>>, then

  <\equation*>
    <wide|\<ell\>|~><rsub|i,t>=<frac|\<ell\><rsub|i,t>|p<rsub|i,t>>*<with|font-series|bold|1><rsub|I<rsub|t>=i>
  </equation*>

  is an unbiased estimator (with respect to the draw of <math|I<rsub|t>>) of <math|\<ell\><rsub|i,t>>. Indeed, for each <math|i=1,\<ldots\>,K> we have

  <\equation*>
    <E><rsub|I<rsub|t>\<sim\>p<rsub|t>><around*|[|<wide|\<ell\>|~><rsub|i,t>|]>=<big|sum><rsub|j=1><rsup|K>p<rsub|j,t>*<frac|\<ell\><rsub|i,t>|p<rsub|i,t>>*<with|font-series|bold|1><rsub|j=i>=\<ell\><rsub|i,t><nbsp>.
  </equation*>

  The second idea is to use an exponential reweighting of the cumulative estimated losses to define the probability distribution <math|p<rsub|t>> from which the forecaster will select the arm <math|I<rsub|t>>. Exponential weighting schemes are a standard tool in the study of sequential prediction schemes under adversarial assumptions. The reader is referred to the monograph by <cite|CL06> for a general introduction to prediction of individual sequences, and to the recent survey by <cite|arora2012multiplicative> focussed on computer science applications of exponential weighting.

  We provide two different pseudo-regret bounds for this strategy. The bound <eqref|eq:exp3boundanytime> is obtained assuming that the forecaster does not know the number of rounds <math|n>. This is the anytime version of the algorithm. The bound <eqref|eq:exp3bound>, instead, shows that a better constant can be achieved using the knowledge of the time horizon.

  <\theorem>
    [Pseudo-regret of Exp3]<label|th:Exp3>If Exp3 is run with <math|\<eta\><rsub|t>=\<eta\>=<sqrt|<frac|2*ln K|n*K>>>, then

    <\equation>
      <label|eq:exp3bound><oR><rsub|n>\<leq\><sqrt|2*n*K*ln K><nbsp>.
    </equation>

    Moeover, if Exp3 is run with <math|\<eta\><rsub|t>=<sqrt|<frac|ln K|t*K>>>, then

    <\equation>
      <label|eq:exp3boundanytime><oR><rsub|n>\<leq\>2*<sqrt|n*K*ln K><nbsp>.
    </equation>
  </theorem>

  <\proof>
    We prove that for any non-increasing sequence <math|<around|(|\<eta\><rsub|t>|)><rsub|t\<in\><N>>> Exp3 satisfies

    <\equation>
      <label|eq:exp3lem><oR><rsub|n>\<leq\><frac|K|2>*<big|sum><rsub|t=1><rsup|n>\<eta\><rsub|t>+<frac|ln K|\<eta\><rsub|n>><nbsp>.
    </equation>

    Inequality <eqref|eq:exp3bound> then trivially follows from <eqref|eq:exp3lem>. For <eqref|eq:exp3boundanytime> we use <eqref|eq:exp3lem> and <math|<big|sum><rsub|t=1><rsup|n><frac|1|<sqrt|t>>\<leq\><big|int><rsub|0><rsup|n><frac|1|<sqrt|t>>*d*t=2*<sqrt|n>>. The proof of <eqref|eq:exp3lem> in divided in five steps.

    <subsection*|First step: Useful equalities.>

    The following equalities can be easily verified:

    <\equation>
      <label|eq:equalities><E><rsub|i\<sim\>p<rsub|t>>*<wide|\<ell\>|~><rsub|i,t>=\<ell\><rsub|I<rsub|t>,t>,<space|1em><E><rsub|I<rsub|t>\<sim\>p<rsub|t>>*<wide|\<ell\>|~><rsub|i,t>=\<ell\><rsub|i,t>,<space|1em><E><rsub|i\<sim\>p<rsub|t>>*<wide|\<ell\>|~><rsup|2><rsub|i,t>=<frac|\<ell\><rsub|I<rsub|t>,t><rsup|2>|p<rsub|I<rsub|t>,t>>,<space|1em><E><rsub|I<rsub|t>\<sim\>p<rsub|t>>*<frac|1|p<rsub|I<rsub|t>,t>>=K<nbsp>.
    </equation>

    In particular, they imply

    <\equation>
      <label|eq:expregret><big|sum><rsub|t=1><rsup|n>\<ell\><rsub|I<rsub|t>,t>-<big|sum><rsub|t=1><rsup|n>\<ell\><rsub|k,t>=<big|sum><rsub|t=1><rsup|n><E><rsub|i\<sim\>p<rsub|t>>*<wide|\<ell\>|~><rsub|i,t>-<big|sum><rsub|t=1><rsup|n><E><rsub|I<rsub|t>\<sim\>p<rsub|t>>*<wide|\<ell\>|~><rsub|k,t><nbsp>.
    </equation>

    The key idea of the proof is rewrite <math|<E><rsub|i\<sim\>p<rsub|t>>*<wide|\<ell\>|~><rsub|i,t>> as follows

    <\align>
      <tformat|<table|<row|<cell|<E><rsub|i\<sim\>p<rsub|t>>*<wide|\<ell\>|~><rsub|i,t>=>|<cell|<frac|1|\<eta\><rsub|t>>*ln <E><rsub|i\<sim\>p<rsub|t>>*exp <around*|(|-\<eta\><rsub|t>*<around*|(|<wide|\<ell\>|~><rsub|i,t>-<E><rsub|k\<sim\>p<rsub|t>>*<wide|\<ell\>|~><rsub|k,t>|)>|)><eq-number>>>|<row|<cell|>|<cell|-<frac|1|\<eta\><rsub|t>>*ln <E><rsub|i\<sim\>p<rsub|t>>*exp <around*|(|-\<eta\><rsub|t>*<wide|\<ell\>|~><rsub|i,t>|)><nbsp>.<eq-number><label|eq:logmoment>>>>>
    </align>

    The reader may recognize <math|ln <E><rsub|i\<sim\>p<rsub|t>>*exp <around*|(|-\<eta\><rsub|t>*<wide|\<ell\>|~><rsub|i,t>|)>> as the cumulant-generating function (or the log of the moment-generating function) of the random variable <math|<wide|\<ell\>|~><rsub|I<rsub|t>,t>>. This quantity naturally arises in the analysis of forecasters based on exponential weights. In the next two steps we study the two terms in the right-hand side of <eqref|eq:logmoment>.

    <subsection*|Second step: Study of the first term in <eqref|eq:logmoment>.>

    We use the inequalities <math|ln x\<leq\>x-1> and <math|exp <around|(|-x|)>-1+x\<leq\>x<rsup|2>/2>, for all <math|x\<geq\>0>, to obtain:

    <\align>
      <tformat|<table|<row|<cell|ln <E><rsub|i\<sim\>p<rsub|t>>>|<cell|exp <around*|(|-\<eta\><rsub|t>*<around|(|<wide|\<ell\>|~><rsub|i,t>-<E><rsub|k\<sim\>p<rsub|t>>*<wide|\<ell\>|~><rsub|k,t>|)>|)><eq-number>>>|<row|<cell|>|<cell|=ln <E><rsub|i\<sim\>p<rsub|t>>*exp <around*|(|-\<eta\><rsub|t>*<wide|\<ell\>|~><rsub|i,t>|)>+\<eta\><rsub|t>*<E><rsub|k\<sim\>p<rsub|t>>*<wide|\<ell\>|~><rsub|k,t><eq-number>>>|<row|<cell|>|<cell|\<leq\><E><rsub|i\<sim\>p<rsub|t>>*<around*|(|exp <around*|(|-\<eta\><rsub|t>*<wide|\<ell\>|~><rsub|i,t>|)>-1+\<eta\><rsub|t>*<wide|\<ell\>|~><rsub|i,t>|)><eq-number>>>|<row|<cell|>|<cell|\<leq\><E><rsub|i\<sim\>p<rsub|t>>*<frac|\<eta\><rsub|t><rsup|2>*<wide|\<ell\>|~><rsub|i,t><rsup|2>|2><eq-number>>>|<row|<cell|>|<cell|\<leq\><frac|\<eta\><rsub|t><rsup|2>|2*p<rsub|I<rsub|t>,t>><eq-number><label|eq:secondstep>>>>>
    </align>

    where the last step comes from the third equality in <eqref|eq:equalities>.

    <subsection*|Third step: Study of the second term in <eqref|eq:logmoment>.>

    Let <math|<wide|L|~><rsub|i,0>=0>, <math|\<Phi\><rsub|0><around|(|\<eta\>|)>=0> and <math|\<Phi\><rsub|t><around|(|\<eta\>|)>=<frac|1|\<eta\>>*ln <frac|1|K>*<big|sum><rsub|i=1><rsup|K>exp <around*|(|-\<eta\>*<wide|L|~><rsub|i,t>|)>>. Then, by definition of <math|p<rsub|t>> we have

    <\align>
      <tformat|<table|<row|<cell|-<frac|1|\<eta\><rsub|t>>*ln <E><rsub|i\<sim\>p<rsub|t>>*exp <around*|(|-\<eta\><rsub|t>*<wide|\<ell\>|~><rsub|i,t>|)>>|<cell|=-<frac|1|\<eta\><rsub|t>>*ln <frac|<big|sum><rsub|i=1><rsup|K>exp <around*|(|-\<eta\><rsub|t>*<wide|L|~><rsub|i,t>|)>|<big|sum><rsub|i=1><rsup|K>exp <around*|(|-\<eta\><rsub|t>*<wide|L|~><rsub|i,t-1>|)>><eq-number>>>|<row|<cell|>|<cell|=\<Phi\><rsub|t-1><around|(|\<eta\><rsub|t>|)>-\<Phi\><rsub|t><around|(|\<eta\><rsub|t>|)><nbsp>.<eq-number><label|eq:thirdstep>>>>>
    </align>

    <subsection*|Fourth step: Summing.>

    Putting together <eqref|eq:expregret>, <eqref|eq:logmoment>, <eqref|eq:secondstep> and <eqref|eq:thirdstep> we obtain

    <\equation*>
      <big|sum><rsub|t=1><rsup|n>g<rsub|k,t>-<big|sum><rsub|t=1><rsup|n>g<rsub|I<rsub|t>,t>\<leq\><big|sum><rsub|t=1><rsup|n><frac|\<eta\><rsub|t>|2*p<rsub|I<rsub|t>,t>>+<big|sum><rsub|t=1><rsup|n>\<Phi\><rsub|t-1><around|(|\<eta\><rsub|t>|)>-\<Phi\><rsub|t><around|(|\<eta\><rsub|t>|)>-<big|sum><rsub|t=1><rsup|n><E><rsub|I<rsub|t>\<sim\>p<rsub|t>>*<wide|\<ell\>|~><rsub|k,t><nbsp>.
    </equation*>

    The first term is easy to bound in expectation since, by the rule of conditional expectations and the last equality in <eqref|eq:equalities> we have

    <\equation*>
      <E>*<big|sum><rsub|t=1><rsup|n><frac|\<eta\><rsub|t>|2*p<rsub|I<rsub|t>,t>>=<E>*<big|sum><rsub|t=1><rsup|n><E><rsub|I<rsub|t>\<sim\>p<rsub|t>>*<frac|\<eta\><rsub|t>|2*p<rsub|I<rsub|t>,t>>=<frac|K|2>*<big|sum><rsub|t=1><rsup|n>\<eta\><rsub|t><nbsp>.
    </equation*>

    For the second term we start with an Abel transformation,

    <\equation*>
      <big|sum><rsub|t=1><rsup|n><around*|(|\<Phi\><rsub|t-1><around|(|\<eta\><rsub|t>|)>-\<Phi\><rsub|t><around|(|\<eta\><rsub|t>|)>|)>=<big|sum><rsub|t=1><rsup|n-1><around*|(|\<Phi\><rsub|t><around|(|\<eta\><rsub|t+1>|)>-\<Phi\><rsub|t><around|(|\<eta\><rsub|t>|)>|)>-\<Phi\><rsub|n><around|(|\<eta\><rsub|n>|)>
    </equation*>

    since <math|\<Phi\><rsub|0><around|(|\<eta\><rsub|1>|)>=0>. Note that

    <\align*>
      <tformat|<table|<row|<cell|-\<Phi\><rsub|n><around|(|\<eta\><rsub|n>|)>>|<cell|=<frac|ln K|\<eta\><rsub|n>>-<frac|1|\<eta\><rsub|n>>*ln <around*|(|<big|sum><rsub|i=1><rsup|K>exp <around*|(|-\<eta\><rsub|n>*<wide|L|~><rsub|i,n>|)>|)>>>|<row|<cell|>|<cell|\<leq\><frac|ln K|\<eta\><rsub|n>>-<frac|1|\<eta\><rsub|n>>*ln <around*|(|exp <around*|(|-\<eta\><rsub|n>*<wide|L|~><rsub|k,n>|)>|)>>>|<row|<cell|>|<cell|=<frac|ln K|\<eta\><rsub|n>>+<big|sum><rsub|t=1><rsup|n><wide|\<ell\>|~><rsub|k,t>>>>>
    </align*>

    and thus we have

    <\equation*>
      <E>*<around*|[|<big|sum><rsub|t=1><rsup|n>g<rsub|k,t>-<big|sum><rsub|t=1><rsup|n>g<rsub|I<rsub|t>,t>|]>\<leq\><frac|K|2>*<big|sum><rsub|t=1><rsup|n>\<eta\><rsub|t>+<frac|ln K|\<eta\><rsub|n>>+<E>*<big|sum><rsub|t=1><rsup|n-1>\<Phi\><rsub|t><around|(|\<eta\><rsub|t+1>|)>-\<Phi\><rsub|t><around|(|\<eta\><rsub|t>|)><nbsp>.
    </equation*>

    To conclude the proof, we show that <math|\<Phi\><rsub|t><rprime|'><around|(|\<eta\>|)>\<geq\>0>. Since <math|\<eta\><rsub|t+1>\<leq\>\<eta\><rsub|t>>, we then obtain <math|\<Phi\><rsub|t><around|(|\<eta\><rsub|t+1>|)>-\<Phi\><rsub|t><around|(|\<eta\><rsub|t>|)>\<leq\>0>. Let

    <\equation*>
      p<rsub|i,t><rsup|\<eta\>>=<frac|exp <around*|(|-\<eta\>*<wide|L|~><rsub|i,t>|)>|<big|sum><rsub|k=1><rsup|K>exp <around*|(|-\<eta\>*<wide|L|~><rsub|k,t>|)>><nbsp>.
    </equation*>

    Then

    <\align*>
      <tformat|<table|<row|<cell|\<Phi\><rsub|t><rprime|'><around|(|\<eta\>|)>>|<cell|=-<frac|1|\<eta\><rsup|2>>*ln <around*|(|<frac|1|K>*<big|sum><rsub|i=1><rsup|K>exp <around*|(|-\<eta\>*<wide|L|~><rsub|i,t>|)>|)>-<frac|1|\<eta\>>*<frac|<big|sum><rsub|i=1><rsup|K><wide|L|~><rsub|i,t>*exp <around*|(|-\<eta\>*<wide|L|~><rsub|i,t>|)>|<big|sum><rsub|i=1><rsup|K>exp <around*|(|-\<eta\>*<wide|L|~><rsub|i,t>|)>>>>|<row|<cell|\<ast\>>|<cell|=<frac|1|\<eta\><rsup|2>>*<frac|1|<big|sum><rsub|i=1><rsup|K>exp <around*|(|-\<eta\>*<wide|L|~><rsub|i,t>|)>>*<big|sum><rsub|i=1><rsup|K>exp <around*|(|-\<eta\>*<wide|L|~><rsub|i,t>|)>>>|<row|<cell|\<ast\>>|<cell|<space|2em>\<times\><around*|(|-\<eta\>*<wide|L|~><rsub|i,t>-ln <around*|(|<frac|1|K>*<big|sum><rsub|i=1><rsup|K>exp <around*|(|-\<eta\>*<wide|L|~><rsub|i,t>|)>|)>|)><nbsp>.>>>>
    </align*>

    Simplifying, we get (since <math|p<rsub|1>> is the uniform distribution over <math|<around|{|1,\<ldots\>,K|}>>),

    <\equation*>
      \<Phi\><rsub|t><rprime|'><around|(|\<eta\>|)>=<frac|1|\<eta\><rsup|2>>*<big|sum><rsub|i=1><rsup|K>p<rsub|i,t><rsup|\<eta\>>*ln <around|(|K*p<rsub|i,t><rsup|\<eta\>>|)>=<frac|1|\<eta\><rsup|2>><K><around|(|p<rsub|t><rsup|\<eta\>>,p<rsub|1>|)>\<geq\>0<nbsp>.
    </equation*>
  </proof>

  <section|High probability and expected regret bounds><label|sec:regret>

  In this section we prove a high probability bound on the regret. Unfortunately, the Exp3 strategy defined in the previous section is not adequate for this task. Indeed, the variance of the estimate <math|<wide|\<ell\>|~><rsub|i,t>> is of order <math|1/p<rsub|i,t>>, which can be arbitrarily large. In order to ensure that the probabilities <math|p<rsub|i,t>> are bounded from below, the original version of Exp3 mixes the exponential weights with a uniform distribution over the arms. In order to avoid increasing the regret, the mixing coefficient <math|\<gamma\>> associated with the uniform distribution cannot be larger than <math|n<rsup|-1/2>>. Since this implies that the variance of the cumulative loss estimate <math|<wide|L|~><rsub|i,n>> can be of order <math|n<rsup|3/2>>, very little can be said about the concentration of the regret also for this variant of Exp3.

  This issue can be solved by combining the mixing idea with a different estimate for losses. In fact, the core idea is more transparent when expressed in terms of gains, and so we turn to the gain version of the problem. The trick is to introduce a bias in the gain estimate which allows to derive a high probability statement on this estimate.

  <\lemma>
    <label|lem:exp3P>For <math|\<beta\>\<le\>1>, let

    <\equation*>
      <wide|g|~><rsub|i,t>=<frac|g<rsub|i,t>*<with|font-series|bold|1><rsub|I<rsub|t>=i>+\<beta\>|p<rsub|i,t>><nbsp>.
    </equation*>

    Then, with probability at least <math|1-\<delta\>>,

    <\equation*>
      <big|sum><rsub|t=1><rsup|n>g<rsub|i,t>\<leq\><big|sum><rsub|t=1><rsup|n><wide|g|~><rsub|i,t>+<frac|ln <around|(|\<delta\><rsup|-1>|)>|\<beta\>><nbsp>.
    </equation*>
  </lemma>

  <\proof>
    Let <math|<E><rsub|t>> be the expectation conditioned on <math|I<rsub|1>,\<ldots\>,I<rsub|t-1>>. Since <math|exp <around|(|x|)>\<le\>1+x+x<rsup|2>> for <math|x\<leq\>1>, for <math|\<beta\>\<leq\>1> we have

    <\align*>
      <tformat|<table|<row|<cell|<E><rsub|t>*exp>|<cell|<around*|(|\<beta\>*g<rsub|i,t>-\<beta\>*<frac|g<rsub|i,t>*<with|font-series|bold|1><rsub|I<rsub|t>=i>+\<beta\>|p<rsub|i,t>>|)>>>|<row|<cell|>|<cell|\<leq\><around*|(|1+<E><rsub|t>*<around*|[|\<beta\>*g<rsub|i,t>-\<beta\>*<frac|g<rsub|i,t>*<with|font-series|bold|1><rsub|I<rsub|t>=i>|p<rsub|i,t>>|]>+<E><rsub|t>*<around*|[|\<beta\>*g<rsub|i,t>-\<beta\>*<frac|g<rsub|i,t>*<with|font-series|bold|1><rsub|I<rsub|t>=i>|p<rsub|i,t>>|]><rsup|2>|)>>>|<row|<cell|>|<cell|<space|1em>\<times\>exp <around*|(|<space|-0.17em>-<frac|\<beta\><rsup|2>|p<rsub|i,t>>|)>>>|<row|<cell|>|<cell|\<leq\><around*|(|1+\<beta\><rsup|2>*<frac|g<rsup|2><rsub|i,t>|p<rsub|i,t>>|)>*exp <around*|(|<space|-0.17em>-<frac|\<beta\><rsup|2>|p<rsub|i,t>>|)>>>|<row|<cell|>|<cell|\<leq\>1>>>>
    </align*>

    where the last inequality uses <math|1+u\<leq\>exp <around|(|u|)>>. As a consequence, we have

    <\align*>
      <tformat|<table|<row|<cell|<E>*exp <around*|(|\<beta\>*<big|sum><rsub|t=1><rsup|n>g<rsub|i,t>-\<beta\>*<big|sum><rsub|t=1><rsup|n><frac|g<rsub|i,t>*<with|font-series|bold|1><rsub|I<rsub|t>=i>+\<beta\>|p<rsub|i,t>>|)>\<leq\>1.>>>>
    </align*>

    Moreover, Markov's inequality implies <math|\<bbb-P\><around*|(|X\<gtr\>ln <around|(|\<delta\><rsup|-1>|)>|)>\<leq\>\<delta\>*<E>*e<rsup|X>> and thus, with probability at least <math|1-\<delta\>>,

    <\equation*>
      \<beta\>*<big|sum><rsub|t=1><rsup|n>g<rsub|i,t>-\<beta\>*<big|sum><rsub|t=1><rsup|n><frac|g<rsub|i,t>*<with|font-series|bold|1><rsub|I<rsub|t>=i>+\<beta\>|p<rsub|i,t>>\<leq\>ln <around|(|\<delta\><rsup|-1>|)><nbsp>.
    </equation*>
  </proof>

  <\big-figure>
    <\bookbox>
      <with|font-shape|italic|Exp3.P><next-line>Parameters: <math|\<eta\>\<in\><R><rsup|+>> and <math|\<gamma\>,\<beta\>\<in\><around|[|0,1|]>>.

      <vspace*|0.5fn><no-indent>Let <math|p<rsub|1>> be the uniform distribution over <math|<around|{|1,\<ldots\>,K|}>>.

      <vspace*|0.5fn><no-indent>For each round <math|t=1,2,\<ldots\>,n>

      <\itemize>
        <item*|(1)>Draw an arm <math|I<rsub|t>> from the probability distribution <math|p<rsub|t>>.

        <item*|(2)>Compute the estimated gain for each arm:

        <\equation*>
          <wide|g|~><rsub|i,t>=<frac|g<rsub|i,t>*<with|font-series|bold|1><rsub|I<rsub|t>=i>+\<beta\>|p<rsub|i,t>>
        </equation*>

        and update the estimated cumulative gain: <math|<wide|G|~><rsub|i,t>=<big|sum><rsub|s=1><rsup|t><wide|g|~><rsub|i,s>>.

        <item*|(3)>Compute the new probability distribution over the arms <math|p<rsub|t+1>=<around|(|p<rsub|1,t+1>,\<ldots\>,p<rsub|K,t+1>|)>> where:

        <\equation*>
          p<rsub|i,t+1>=<around|(|1-\<gamma\>|)>*<frac|exp <around*|(|\<eta\>*<wide|G|~><rsub|i,t>|)>|<big|sum><rsub|k=1><rsup|K>exp <around*|(|\<eta\>*<wide|G|~><rsub|k,t>|)>>+<frac|\<gamma\>|K>.
        </equation*>
      </itemize>
    </bookbox>

    <label|fig:exp3P>
  </big-figure|Exp3.P forecaster.>

  The strategy associated with these new estimates, called Exp3.P, is described in Figure <reference|fig:exp3P>. Note that, for the sake of simplicity, the strategy is described in the setting with known time horizon (<math|\<eta\>> is constant). Anytime results can easily be derived with the same techniques as in the proof of Theorem<nbsp><reference|th:Exp3>.

  In the next theorem we propose two different high probability bounds. In <eqref|eq:exp3Pbound1> the algorithm needs the confidence level <math|\<delta\>> as an input parameter. In<nbsp><eqref|eq:exp3Pbound2> the algorithm satisfies a high probability bound for any confidence level. This latter property is particularly important to derive good bounds on the expected regret.

  <\theorem>
    [High probability bound for Exp3.P]<label|th:exp3P>For any given <math|\<delta\>\<in\><around|(|0,1|)>>, if Exp3.P is run with

    <\equation*>
      \<beta\>=<sqrt|<frac|ln <around|(|K*\<delta\><rsup|-1>|)>|n*K>>,<space|1em>\<eta\>=0.95*<sqrt|<frac|ln <around|(|K|)>|n*K>>,<space|1em>\<gamma\>=1.05*<sqrt|<frac|K*ln <around|(|K|)>|n>>
    </equation*>

    then, with probability at least <math|1-\<delta\>>,

    <\equation>
      <label|eq:exp3Pbound1>R<rsub|n>\<leq\>5.15*<sqrt|n*K*ln <around|(|K*\<delta\><rsup|-1>|)>><nbsp>.
    </equation>

    Moreover, if Exp3.P is run with <math|\<beta\>=<sqrt|<tfrac|ln <around|(|K|)>|n*K>>> while <math|\<eta\>> and <math|\<gamma\>> are chosen as before, then, with probability at least <math|1-\<delta\>>,

    <\equation>
      <label|eq:exp3Pbound2>R<rsub|n>\<leq\><sqrt|<frac|n*K|ln <around|(|K|)>>>*ln <around|(|\<delta\><rsup|-1>|)>+5.15*<sqrt|n*K*ln <around|(|K|)>><nbsp>.
    </equation>
  </theorem>

  <\proof>
    We first prove (in three steps) that if <math|\<gamma\>\<leq\>1/2> and <math|<around|(|1+\<beta\>|)>*K*\<eta\>\<leq\>\<gamma\>>, then Exp3.P satisfies, with probability at least <math|1-\<delta\>>,

    <\equation>
      <label|eq:exp3Plem>R<rsub|n>\<leq\>\<beta\>*n*K+\<gamma\>*n+<around|(|1+\<beta\>|)>*\<eta\>*K*n+<frac|ln <around|(|K*\<delta\><rsup|-1>|)>|\<beta\>>+<frac|ln K|\<eta\>><nbsp>.
    </equation>

    <subsection*|First step: Notation and simple equalities.>

    One can immediately see that <math|<E><rsub|i\<sim\>p<rsub|t>>*<wide|g|~><rsub|i,t>=g<rsub|I<rsub|t>,t>+\<beta\>*K>, and thus

    <\equation>
      <label|eq:exp3P1><big|sum><rsub|t=1><rsup|n>g<rsub|k,t>-<big|sum><rsub|t=1><rsup|n>g<rsub|I<rsub|t>,t>=\<beta\>*n*K+<big|sum><rsub|t=1><rsup|n>g<rsub|k,t>-<big|sum><rsub|t=1><rsup|n><E><rsub|i\<sim\>p<rsub|t>>*<wide|g|~><rsub|i,t><nbsp>.
    </equation>

    The key step is, again, to consider the cumulant-generating function of <math|<wide|g|~><rsub|i,t>>. However, because of the mixing, we need to introduce a few more notations. Let <math|u=<around*|(|<tfrac|1|K>,\<ldots\>,<tfrac|1|K>|)>> be the uniform distribution over the arms, let and <math|w<rsub|t>=<tfrac|p<rsub|t>-u|1-\<gamma\>>> be the distribution induced by Exp3.P at time <math|t> without the mixing. Then we have:

    <\align>
      <tformat|<table|<row|<cell|-<E><rsub|i\<sim\>p<rsub|t>>*<wide|g|~><rsub|i,t>>|<cell|=-<around|(|1-\<gamma\>|)>*<E><rsub|i\<sim\>w<rsub|t>>*<wide|g|~><rsub|i,t>-\<gamma\>*<E><rsub|i\<sim\>u>*<wide|g|~><rsub|i,t><eq-number>>>|<row|<cell|>|<cell|=<around|(|1-\<gamma\>|)>*<around*|(|<frac|1|\<eta\>>*ln <E><rsub|i\<sim\>w<rsub|t>>*exp <around*|(|\<eta\>*<around|(|<wide|g|~><rsub|i,t>-<E><rsub|k\<sim\>w<rsub|t>>*<wide|g|~><rsub|k,t>|)>|)>|\<nobracket\>><eq-number>>>|<row|<cell|>|<cell|<around*|\<nobracket\>|<space|1em>-<frac|1|\<eta\>>*ln <E><rsub|i\<sim\>w<rsub|t>>*exp <around*|(|\<eta\>*<wide|g|~><rsub|i,t>|)>|)>-\<gamma\>*<E><rsub|i\<sim\>u>*<wide|g|~><rsub|i,t><nbsp>.<eq-number><label|eq:exp3P2>>>>>
    </align>

    <subsection*|Second step: Study of the first term in <eqref|eq:exp3P2>.>

    We use the inequalities <math|ln x\<leq\>x-1> and <math|exp <around|(|x|)>\<leq\>1+x+x<rsup|2>>, for all <math|x\<leq\>1>, as well as the fact that <math|\<eta\>*<wide|g|~><rsub|i,t>\<leq\>1> since <math|<around|(|1+\<beta\>|)>*\<eta\>*K\<leq\>\<gamma\>>:

    <\align>
      <tformat|<table|<row|<cell|ln <E><rsub|i\<sim\>w<rsub|t>>*exp <around*|(|\<eta\>*<around*|(|<wide|g|~><rsub|i,t>-<E><rsub|k\<sim\>p<rsub|t>>*<wide|g|~><rsub|k,t>|)>|)>>|<cell|=ln <E><rsub|i\<sim\>w<rsub|t>>*exp <around*|(|\<eta\>*<wide|g|~><rsub|i,t>|)>-\<eta\>*<space|0.17em><E><rsub|k\<sim\>p<rsub|t>>*<wide|g|~><rsub|k,t><eq-number>>>|<row|<cell|>|<cell|\<leq\><E><rsub|i\<sim\>w<rsub|t>>*<around*|[|exp <around*|(|\<eta\>*<wide|g|~><rsub|i,t>|)>-1-\<eta\>*<wide|g|~><rsub|i,t>|]><eq-number>>>|<row|<cell|>|<cell|\<leq\><E><rsub|i\<sim\>w<rsub|t>>*\<eta\><rsup|2>*<wide|g|~><rsub|i,t><rsup|2><eq-number>>>|<row|<cell|>|<cell|\<leq\><frac|1+\<beta\>|1-\<gamma\>>*\<eta\><rsup|2>*<big|sum><rsub|i=1><rsup|K><wide|g|~><rsub|i,t><eq-number><label|eq:exp3P3>>>>>
    </align>

    where we used <math|<frac|w<rsub|i,t>|p<rsub|i,t>>\<leq\><frac|1|1-\<gamma\>>> in the last step.

    <subsection*|Third step: Summing.>

    Set <math|<wide|G|~><rsub|i,0>=0>. Recall that <math|w<rsub|t>=<around*|(|w<rsub|1,t>,\<ldots\>,w<rsub|K,t>|)>> with

    <\equation>
      <label|eq:exp3P4>w<rsub|i,t>=<frac|exp <around*|(|-\<eta\>*<wide|G|~><rsub|i,t-1>|)>|<big|sum><rsub|k=1><rsup|K>exp <around*|(|-\<eta\>*<wide|G|~><rsub|k,t-1>|)>><nbsp>.
    </equation>

    Then substituting <eqref|eq:exp3P3> in <eqref|eq:exp3P2> and summing using <eqref|eq:exp3P4>, we obtain

    <\align*>
      <tformat|<table|<row|<cell|-<big|sum><rsub|t=1><rsup|n>>|<cell|<E><rsub|i\<sim\>p<rsub|t>>*<wide|g|~><rsub|i,t>>>|<row|<cell|>|<cell|\<leq\><around|(|1+\<beta\>|)>*\<eta\>*<big|sum><rsub|t=1><rsup|n><big|sum><rsub|i=1><rsup|K><wide|g|~><rsub|i,t>-<frac|1-\<gamma\>|\<eta\>>*<big|sum><rsub|t=1><rsup|n>ln <around*|(|<big|sum><rsub|i=1><rsup|K>w<rsub|i,t>*exp <around*|(|\<eta\>*<wide|g|~><rsub|i,t>|)>|)>>>|<row|<cell|>|<cell|=<around|(|1+\<beta\>|)>*\<eta\>*<big|sum><rsub|t=1><rsup|n><big|sum><rsub|i=1><rsup|K><wide|g|~><rsub|i,t>-<frac|1-\<gamma\>|\<eta\>>*ln <around*|(|<big|prod><rsub|t=1><rsup|n><frac|<big|sum><rsub|i=1><rsup|K>exp <around|(|\<eta\>*<wide|G|~><rsub|i,t>|)>|<big|sum><rsub|i=1><rsup|K>exp <around|(|\<eta\>*<wide|G|~><rsub|i,t-1>|)>>|)>>>|<row|<cell|>|<cell|\<leq\><around|(|1+\<beta\>|)>*\<eta\>*K*max<rsub|j> <wide|G|~><rsub|j,n>+<frac|ln K|\<eta\>>-<frac|1-\<gamma\>|\<eta\>>*ln <around*|(|<big|sum><rsub|t=1><rsup|n>exp <around|(|\<eta\>*<wide|G|~><rsub|i,n>|)>|)>>>|<row|<cell|>|<cell|\<leq\>-<around*|(|1-\<gamma\>-<around|(|1+\<beta\>|)>*\<eta\>*K|)>*max<rsub|j> <wide|G|~><rsub|j,n>+<frac|ln <around|(|K|)>|\<eta\>>>>|<row|<cell|>|<cell|\<leq\>-<around*|(|1-\<gamma\>-<around|(|1+\<beta\>|)>*\<eta\>*K|)>*max<rsub|j> <big|sum><rsub|t=1><rsup|n>g<rsub|j,t>+<frac|ln <around|(|K*\<delta\><rsup|-1>|)>|\<beta\>>+<frac|ln <around|(|K|)>|\<eta\>><nbsp>.>>>>
    </align*>

    The last inequality comes from Lemma <reference|lem:exp3P>, the union bound, and <math|\<gamma\>-<around|(|1+\<beta\>|)>*\<eta\>*K\<leq\>1> which is a consequence of <math|<around|(|1+\<beta\>|)>*\<eta\>*K\<leq\>\<gamma\>\<leq\>1/2>. Combining this last inequality with <eqref|eq:exp3P1> we obtain

    <\equation*>
      R<rsub|n>\<leq\>\<beta\>*n*K+\<gamma\>*n+<around|(|1+\<beta\>|)>*\<eta\>*K*n+<frac|ln <around*|(|K*\<delta\><rsup|-1>|)>|\<beta\>>+<frac|ln <around|(|K|)>|\<eta\>>
    </equation*>

    which is the desired result.

    Inequality<nbsp><eqref|eq:exp3Pbound1> is then proved as follows. First, it is trivial if <math|n\<geq\>5.15*<sqrt|n*K*ln <around|(|K*\<delta\><rsup|-1>|)>>> and thus we can assume that this is not the case. This implies that <math|\<gamma\>\<leq\>0.21> and <math|\<beta\>\<leq\>0.1>, and thus we have <math|<around|(|1+\<beta\>|)>*\<eta\>*K\<leq\>\<gamma\>\<leq\>1/2>. Using <eqref|eq:exp3Plem> directly yields the claimed bound. The same argument can be used to derive <eqref|eq:exp3Pbound2>.
  </proof>

  We now discuss expected regret bounds. As the cautious reader may already have observed, if the adversary is oblivious, namely when <math|<around*|(|\<ell\><rsub|1,t>,\<ldots\>,\<ell\><rsub|K,t>|)>> is independent of <math|I<rsub|1>,\<ldots\>,I<rsub|t-1>> for each <math|t>, a pseudo-regret bound implies the same bound on the expected regret. This follows from noting that the expected regret against an oblivious adversary is smaller than the maximal pseudo-regret against deterministic adversaries, see <cite-detail|AB10|Proposition 33> for a proof of this fact. In the general case of a non-oblivious adversary, the loss vector <math|<around*|(|\<ell\><rsub|1,t>,\<ldots\>,\<ell\><rsub|K,t>|)>> at time <math|t> depends on the past actions of the forecaster. This makes the analysis of the expected regret more intricate. One way around this difficulty is to first prove high probability bounds, and then integrate the resulting bound. Following this method, we derive a bound on the expected regret of Exp3.P using <eqref|eq:exp3Pbound2>.

  <\theorem>
    [Expected regret of Exp3.P] If Exp3.P is run with

    <\equation*>
      \<beta\>=<sqrt|<frac|ln K|n*K>>,<space|1em>\<eta\>=0.95*<sqrt|<frac|ln K|n*K>>,<space|1em>\<gamma\>=1.05*<sqrt|<frac|K*ln K|n>>
    </equation*>

    then

    <\equation>
      <label|eq:exp3Pbound3><E>*<space|0.17em>R<rsub|n>\<leq\>5.15*<sqrt|n*K*ln K>+<sqrt|<frac|n*K|ln K>><nbsp>.
    </equation>
  </theorem>

  <\proof>
    We integrate the deviations in <eqref|eq:exp3Pbound2> using the formula

    <\equation*>
      <E>*<space|0.17em>W\<leq\><big|int><rsub|0><rsup|1><frac|1|\<delta\>>\<bbb-P\><around*|(|W\<gtr\>ln <frac|1|\<delta\>>|)>*d*\<delta\>
    </equation*>

    for a real-valued random variable <math|W>. In particular, taking

    <\equation*>
      W=<sqrt|<frac|ln K|n*K>>*<around*|(|R<rsub|n>-5.15*<sqrt|n*K*ln K>|)>
    </equation*>

    yields <math|<E>*<space|0.17em>W\<leq\>1>, which is equivalent to <eqref|eq:exp3Pbound3>.
  </proof>

  <section|Lower Bound><label|sec:LB>

  The next theorem shows that the results of the previous sections are essentially unimprovable, up to logarithmic factors. The result is proven via the probabilistic method: we show that there exists a distribution of rewards for the arms such that the pseudo-regret of any forecaster must be high when averaged over this distribution. Owing to this probabilistic construction, the lower bound proof is based on the same Kullback-Leibler divergence as the one used in the proof of the lower bound for stochastic bandits —see Subsection<nbsp><reference|s:stoch-lower>. We are not aware of other techniques for proving bandit lower bounds.

  We find it more convenient to prove the results for rewards rather than losses. In order to emphasize that our rewards are stochastic (in particular, Bernoulli random variables), we use <math|Y<rsub|i,t>\<in\><around|{|0,1|}>> to denote the reward obtained by pulling arm <math|i> at time <math|t>.

  <\theorem>
    [Minimax lower bound]<label|th:LBminimax>Let <math|sup> be the supremum over all distribution of rewards such that, for <math|i=1,\<ldots\>,K>, the rewards <math|Y<rsub|i,1>,Y<rsub|i,2>,\<ldots\>\<in\><around|{|0,1|}>> are i.i.d., and let <math|inf> be the infimum over all forecasters. Then

    <\equation>
      <label|eq:LBminimax>inf sup <around*|(|max<rsub|i=1,\<ldots\>,K> <E>*<big|sum><rsub|t=1><rsup|n>Y<rsub|i,t>-<E>*<big|sum><rsub|t=1><rsup|n>Y<rsub|I<rsub|t>,t>|)>\<geq\><frac|1|20>*<sqrt|n*K>
    </equation>

    where expectations are with respect to both the random generation of rewards and the internal randomization of the forecaster.
  </theorem>

  Since <math|max<rsub|i=1,\<ldots\>,K> <E>*<big|sum><rsub|t=1><rsup|n>Y<rsub|i,t>-<E>*<big|sum><rsub|t=1><rsup|n>Y<rsub|I<rsub|t>,t>=<oR><rsub|n>\<le\><E>*<space|0.17em>R<rsub|n>>, Theorem<nbsp><reference|th:LBminimax> immediately entails a lower bound on the regret of any forecaster.

  The general idea of the proof goes as follows. Since at least one arm is pulled less than <math|n/K> times, for this arm one cannot differentiate between a Bernoulli of parameter <math|1/2> and and a Bernoulli of parameter <math|1/2+<sqrt|K/n>>. Thus, if all arms are Bernoulli of parameter <math|1/2> but one, whose parameter is <math|1/2+<sqrt|K/n>>, then the forecaster should incur a regret of order <math|n*<sqrt|K/n>=<sqrt|n*K>>. In order to formalize this idea, we use the Kullback-Leibler divergence, and in particular Pinsker's inequality, to compare the behavior of a given forecaster against: (1) the distribution where all arms are Bernoulli of parameter <math|1/2>; (2) the same distribution where the parameter of one arm is increased by <math|\<epsilon\>>.

  We start by proving a more general lemma, which could also be used to derive lower bounds in other contexts. The proof of Theorem <reference|th:LBminimax> then follows by a simple optimization over <math|\<epsilon\>>.

  <\lemma>
    <label|lem:LBminimax>Let <math|\<epsilon\>\<in\><around|[|0,1|)>>. For any <math|i\<in\><around|{|1,\<ldots\>,K|}>> let <math|<E><rsub|i>> be the expectation against the joint distribution of rewards where all arms are i.i.d. Bernoulli of parameter <math|<frac|1-\<epsilon\>|2>> but arm <math|i>, which is i.i.d. Bernoulli of parameter <math|<frac|1+\<epsilon\>|2>>. Then, for any forecaster,

    <\equation*>
      max<rsub|i=1,\<ldots\>,K> <E><rsub|i>*<big|sum><rsub|t=1><rsup|n><around*|(|Y<rsub|i,t>-Y<rsub|I<rsub|t>,t>|)>\<geq\>n*\<epsilon\>*<around*|(|1-<frac|1|K>-<sqrt|\<epsilon\>*ln <frac|1+\<epsilon\>|1-\<epsilon\>>>*<sqrt|<frac|n|2*K>>|)><nbsp>.
    </equation*>
  </lemma>

  <\proof>
    We provide a proof in five steps by lower bounding <math|<frac|1|K>*<big|sum><rsub|i=1><rsup|K><E><rsub|i>*<big|sum><rsub|t=1><rsup|n><around|(|Y<rsub|i,t>-Y<rsub|I<rsub|t>,t>|)>>. This implies the statement of the lemma because a max is larger than a mean.

    <subsection*|First step: Empirical distribution of plays.>

    We start by considering a deterministic forecaster. Let <math|q<rsub|n>=<around*|(|q<rsub|1,n>,\<ldots\>,q<rsub|K,n>|)>> be the empirical distribution of plays over the arms defined by <math|q<rsub|i,n>=<frac|T<rsub|i><around|(|n|)>|n>> —recall from Chapter<nbsp><reference|stochastic> that <math|T<rsub|i><around|(|n|)>> denotes the number of times arm <math|i> was selected in the first <math|n> rounds. Let <math|J<rsub|n>> be drawn according to <math|q<rsub|n>>. We denote by <math|\<bbb-P\><rsub|i>> the law of <math|J<rsub|n>> against the distribution where all arms are i.i.d. Bernoulli of parameter <math|<frac|1-\<epsilon\>|2>> but arm <math|i>, which is i.i.d. Bernoulli of parameter <math|<frac|1+\<epsilon\>|2>> (we call this the <math|i>-th stochastic adversary). Recall that <math|\<bbb-P\><rsub|i><around|(|J<rsub|n>=j|)>=<E><rsub|i><tfrac|T<rsub|j><around|(|n|)>|n>>, hence

    <\equation*>
      <E><rsub|i>*<big|sum><rsub|t=1><rsup|n><around*|(|Y<rsub|i,t>-Y<rsub|I<rsub|t>,t>|)>=\<epsilon\>*n*<big|sum><rsub|j\<neq\>i>\<bbb-P\><rsub|i><around|(|J<rsub|n>=j|)>=\<epsilon\>*n*<around*|(|1-\<bbb-P\><rsub|i><around|(|J<rsub|n>=i|)>|)>
    </equation*>

    which implies

    <\equation>
      <label|eq:firststepmm><frac|1|K>*<big|sum><rsub|i=1><rsup|K><E><rsub|i>*<big|sum><rsub|t=1><rsup|n><around*|(|Y<rsub|i,t>-Y<rsub|I<rsub|t>,t>|)>=\<epsilon\>*n*<around*|(|1-<frac|1|K>*<big|sum><rsub|i=1><rsup|K>\<bbb-P\><rsub|i><around|(|J<rsub|n>=i|)>|)><nbsp>.
    </equation>

    <subsection*|Second step: Pinsker's inequality.>

    Let <math|\<bbb-P\><rsub|0>> be the law of <math|J<rsub|n>> for the distribution where all arms are i.i.d. Bernoulli of parameter <math|<frac|1-\<epsilon\>|2>>. Then Pinsker's inequality immediately gives <math|\<bbb-P\><rsub|i><around|(|J<rsub|n>=i|)>\<le\>\<bbb-P\><rsub|0><around|(|J<rsub|n>=i|)>+<sqrt|<tfrac|1|2><K><around|(|\<bbb-P\><rsub|0>,\<bbb-P\><rsub|i>|)>>>, and so

    <\equation>
      <label|eq:secondstepmm><frac|1|K>*<big|sum><rsub|i=1><rsup|K>\<bbb-P\><rsub|i><around|(|J<rsub|n>=i|)>\<leq\><frac|1|K>+<frac|1|K>*<big|sum><rsub|i=1><rsup|K><sqrt|<frac|1|2><K><around|(|\<bbb-P\><rsub|0>,\<bbb-P\><rsub|i>|)>><nbsp>.
    </equation>

    <subsection*|Third step: Computation of <math|<K><around|(|\<bbb-P\><rsub|0>,\<bbb-P\><rsub|i>|)>>. >

    Since the forecaster is deterministic, the sequence of rewards <math|Y<rsup|n>=<around|(|Y<rsub|1>,\<ldots\>,Y<rsub|n>|)>\<in\><around|{|0,1|}><rsup|n>> received by the forecaster uniquely determines the empirical distribution of plays <math|q<rsub|n>>. In particular, the law of <math|J<rsub|n>> conditionally to <math|Y<rsup|n>> is the same for any <math|i>-th stochastic adversary. For each <math|i=0,\<ldots\>,K>, let <math|\<bbb-P\><rsub|i><rsup|n>> be the law of <math|Y<rsup|n>> against the <math|i>-th adversary. Then one can easily show that <math|<K><around|(|\<bbb-P\><rsub|0>,\<bbb-P\><rsub|i>|)>\<leq\><K><around|(|\<bbb-P\><rsub|0><rsup|n>,\<bbb-P\><rsub|i><rsup|n>|)>>. Now we use the chain rule for Kullback-Leibler divergence —see for example <cite-detail|CL06|Section A.2>— iteratively to introduce the laws <math|\<bbb-P\><rsup|t><rsub|i>> of <math|Y<rsup|t>=<around|(|Y<rsub|1>,\<ldots\>,Y<rsub|t>|)>>. More precisely, we have

    <\align>
      <tformat|<table|<row|<cell|<lefteqn|<K><around|(|<paragraphsign><rsub|0><rsup|n>,<paragraphsign><rsub|i><rsup|n>|)>>>|<cell|<eq-number>>>|<row|<cell|>|<cell|<around*|\<nobracket\>|=<K><around|(|\<bbb-P\><rsub|0><rsup|1>,\<bbb-P\><rsub|i><rsup|1>|)>+<big|sum><rsub|t=2><rsup|n><big|sum><rsub|y<rsup|t-1>>\<bbb-P\><rsub|0><rsup|t-1><around|(|y<rsup|t-1>|)><space|0.17em><K><around*|(|\<bbb-P\><rsub|0><rsup|t>|(>*\<cdummy\>\<mid\>y<rsup|t-1>),\<bbb-P\><rsub|i><rsup|t><around|(|\<cdummy\>\<mid\>y<rsup|t-1>|)>|)><eq-number>>>|<row|<cell|>|<cell|=<K><around|(|\<bbb-P\><rsub|0><rsup|1>,\<bbb-P\><rsub|i><rsup|1>|)>+<big|sum><rsub|t=2><rsup|n><around*|(|<big|sum><rsub|y<rsup|t-1><space|0.17em>:<space|0.17em>I<rsub|t>=i>\<bbb-P\><rsub|0><rsup|t-1><around|(|y<rsup|t-1>|)><space|0.17em><K><around*|(|<tfrac|1-\<epsilon\>|2>,<tfrac|1+\<epsilon\>|2>|)>|\<nobracket\>><eq-number>>>|<row|<cell|>|<cell|<space|2em><space|2em><space|2em><space|2em><space|2em>+<around*|\<nobracket\>|<big|sum><rsub|y<rsup|t-1><space|0.17em>:<space|0.17em>I<rsub|t>\<neq\>i>\<bbb-P\><rsub|0><rsup|t-1><around|(|y<rsup|t-1>|)><space|0.17em><K><around*|(|<tfrac|1+\<epsilon\>|2>,<tfrac|1+\<epsilon\>|2>|)>|)><eq-number>>>|<row|<cell|>|<cell|=<K><around*|(|<tfrac|1-\<epsilon\>|2>,<tfrac|1+\<epsilon\>|2>|)>*<E><rsub|0>*<space|0.17em>T<rsub|i><around|(|n|)><nbsp>.<eq-number><label|eq:thirdstep2mm>>>>>
    </align>

    <subsection*|Fourth step: conclusion for deterministic forecasters. >

    By using that the square root is concave, and combining <math|<K><around|(|\<bbb-P\><rsub|0>,\<bbb-P\><rsub|i>|)>\<leq\><K><around|(|\<bbb-P\><rsub|0><rsup|n>,\<bbb-P\><rsub|i><rsup|n>|)>> with <eqref|eq:thirdstep2mm>, we deduce that

    <\align>
      <tformat|<table|<row|<cell|<frac|1|K>*<big|sum><rsub|i=1><rsup|K><sqrt|<K><around|(|\<bbb-P\><rsub|0>,\<bbb-P\><rsub|i>|)>>>|<cell|\<leq\><sqrt|<frac|1|K>*<big|sum><rsub|i=1><rsup|K><K><around|(|\<bbb-P\><rsub|0>,\<bbb-P\><rsub|i>|)>><eq-number>>>|<row|<cell|>|<cell|\<leq\><sqrt|<frac|1|K>*<big|sum><rsub|i=1><rsup|K><K><around*|(|<tfrac|1-\<epsilon\>|2>,<tfrac|1+\<epsilon\>|2>|)>*<E><rsub|0>*<space|0.17em>T<rsub|i><around|(|n|)>><eq-number>>>|<row|<cell|>|<cell|=<sqrt|<frac|n|K><K><around*|(|<tfrac|1-\<epsilon\>|2>,<tfrac|1+\<epsilon\>|2>|)>><nbsp>.<eq-number><label|eq:fourthstepmm>>>>>
    </align>

    We conclude the proof for deterministic forecasters by applying <eqref|eq:secondstepmm> and <eqref|eq:fourthstepmm> to <eqref|eq:firststepmm>, and observing that <math|<K><around*|(|<tfrac|1-\<epsilon\>|2>,<tfrac|1+\<epsilon\>|2>|)>=\<epsilon\>*ln <tfrac|1+\<epsilon\>|1-\<epsilon\>>>.

    <subsection*|Fifth step: randomized forecasters via Fubini's Theorem.>

    Extending previous results to randomized forecasters is easy. Denote by <math|<E><rsub|r>> the expectation with respect to the forecaster's internal randomization. Then Fubini's Theorem implies

    <\equation*>
      <frac|1|K>*<big|sum><rsub|i=1><rsup|K><E><rsub|i>*<big|sum><rsub|t=1><rsup|n><E><rsub|r>*<around*|(|Y<rsub|i,t>-Y<rsub|I<rsub|t>,t>|)>=<E><rsub|r>*<frac|1|K>*<big|sum><rsub|i=1><rsup|K><E><rsub|i>*<big|sum><rsub|t=1><rsup|n><around*|(|Y<rsub|i,t>-Y<rsub|I<rsub|t>,t>|)><nbsp>.
    </equation*>

    Now the proof is concluded by applying the lower bound on <math|<tfrac|1|K><big|sum><rsub|i=1><rsup|K><E><rsub|i>*<big|sum><rsub|t=1><rsup|n><around*|(|Y<rsub|i,t>-Y<rsub|I<rsub|t>,t>|)>>, which we proved in previous steps, to each realization of the forecaster's random bits.
  </proof>

  <section|Refinements and bibliographic remarks>

  The adversarial framework studied in this chapter was originally investigated in a <with|font-shape|italic|full information> setting, where at the end of each round the forecaster observes the complete loss vector <math|<around|(|\<ell\><rsub|1,t>,\<ldots\>,\<ell\><rsub|K,t>|)>>. We refer the reader to <cite|CL06> for the history of this problem. The Exp3 and Exp3.P strategies were introduced<footnote|In its original formulation the Exp3 strategy was defined as a mixture of exponential weights with the uniform distribution on the set of arms. It was noted in <cite|Sto05> that this mixing is not necessary, see footnote 2 on p26 in <cite|Bub10> for more details on this.> and analyzed by <cite|ACFS03>, where the lower bound of Theorem <reference|th:LBminimax> is also proven. The proofs presented in this chapter are taken from <cite|Bub10>. We now give an overview of some of the many improvements and refinements that have been proposed since these initial analyses.

  <subsection|Log-free upper bounds><label|sec:logfree>

  One can see that there is a logarithmic gap between the pseudo-regret of Exp3, presented in Theorem <reference|th:Exp3>, and the minimax lower bound of Theorem <reference|th:LBminimax>. This gap was closed by <cite|AB09>, who constructed a new class of strategies and showed that some of them have a pseudo-regret of order <math|<sqrt|n*K>>. This new class of strategies, called INF (Implicitily Normalized Forecaster), is based on the following idea. First, note that one can generalize the exponential weighting scheme of Exp3 as follows: given a potential function <math|\<psi\>>, assign the probability

  <\equation*>
    p<rsub|i,t+1>=<frac|\<psi\><around|(|<wide|L|~><rsub|i,t>|)>|<big|sum><rsub|j=1><rsup|K>\<psi\><around|(|<wide|L|~><rsub|j,t>|)>><nbsp>.
  </equation*>

  This type of strategy is called a weighted average forecaster, see <cite-detail|CL06|Chapter 2>. In INF the normalization is done implicitily, by a translation of the losses. More precisely, INF with potential <math|\<psi\>> assigns the probability <math|p<rsub|i,t+1>=\<psi\>*<around*|(|C<rsub|t>-<wide|L|~><rsub|i,t>|)>>, where <math|C<rsub|t>> is the constant such that <math|p<rsub|t+1>> sum to <math|1>. The key to obtain a minimax optimal pseudo-regret is to take <math|\<psi\>> of the form <math|\<psi\><around|(|x|)>=<around|(|-\<eta\>*x|)><rsup|-q>> with <math|q\<gtr\>1>, while Exp3 corresponds to <math|\<psi\><around|(|x|)>=exp <around|(|\<eta\>*x|)>>. <cite|ABL11> realized that the INF strategy can be formulated as a Mirror Descent algorithm. This point of view significantly simplifies the proofs. We refer the reader to Chapter<nbsp><reference|linear> (and in particular Theorem<nbsp><reference|th:osmdzero>) for more details.

  While it is possible to get log-free pseudo-regret bounds, the situation becomes significantly more complicated when one considers high probability regret and expected regret. <cite|AB10> proved that one can get a log-free expected regret if the adversary is oblivious, i.e., the sequence of loss vectors is independent of the forecaster's actions. Moreover, it is also possible to get a log-free high probability regret if the adversary is fully oblivious (i.e., the loss vectors are independently drawn, but not identically distributed —this includes the oblivious adversary). It is conjectured (in <cite|AB10>) that it is not possible to obtain a log-free expected regret bound against a general non-oblivious adversary.

  <subsection|Adaptive bounds>

  One of the strengths of the bounds proposed in this chapter is also one of its weaknesses: the bounds hold against any adversary. It is clear that in some cases it is possible to obtain a much smaller regret than the worst case regret. For example, when the sequence of losses is an i.i.d. sequence, we proved in Chapter <reference|stochastic> that it is is possible to obtain a logarithmic pseudo-regret (provided that the gap <math|\<Delta\>> is considered as a constant). Thus it is natural to ask if it possible to have strategies with minimax optimal regret, but also with much smaller regret when the loss sequence is not worst case.

  The first bound in this direction was proved by <cite|ACFS03>, who showed that, for the gain version of the problem and against an oblivious adversary, Exp3 has a pseudo-regret of order <math|<sqrt|K*G<rsub|n><rsup|\<ast\>>>> (omitting log factors), where <math|G<rsub|n><rsup|\<ast\>>\<leq\>n> is the maximal cumulative reward of the optimal arm after <math|n> rounds. This result was improved by <cite|AB10>, who showed that using the gain estimate

  <\equation*>
    <wide|g|~><rsub|i,t>=-<frac|<with|font-series|bold|1><rsub|I<rsub|t>=i>|\<beta\>>*ln <around*|(|1-<frac|\<beta\>*g<rsub|i,t>|p<rsub|i,t>>|)>
  </equation*>

  one can bound the regret with high probability by essentially the same quantity as before, and against any adversary.

  Another direction was explored by <cite|HK09> building on previous works in the full information setting —see <cite|CMS07>. In this work the authors proved that one can attain a regret of order <math|<sqrt|<big|sum><rsub|i=1><rsup|K>V<rsub|i,n>>> excluding log factors, where

  <\equation*>
    V<rsub|i,n>=<big|sum><rsub|t=1><rsup|n><around*|(|\<ell\><rsub|i,t>-<frac|1|n>*<big|sum><rsub|s=1><rsup|n>\<ell\><rsub|i,s>|)><rsup|2>
  </equation*>

  is the total variation of the loss for arm <math|i>. In fact their result is more general, as it applies to the linear bandit framework —see Chapter<nbsp><reference|linear>. The main new ingredient in their analysis is a “reservoir sampling” procedure. We refer the reader to <cite|HK09> for details. See also the works of <cite|slivkins2008adapting|slivkins2009contextual> for related results on slowly changing bandits.

  In Section <reference|sec:best-of-both> below we describe another type of adaptive bound, where one combines minimax optimal regret for the adversarial model with logarithmic pseudo-regret for the stochastic model.

  <subsection|Competing with the best switching strategy><label|sec:exp3S>

  While competing against the policy consistently playing the best fixed arm is a natural way of defining regret, in some applications it might be interesting to consider regret with respect to a bigger class of policies. Though this problem is the focus of Chapter<nbsp><reference|contextual>, there is a class of natural policies that can be directly dealt with by the methods of this chapter. Namely, consider the problem of competing against any policy constrained to make at most <math|S\<leq\>n> switches (a switch is when the arm played at time <math|t> is different from the arm played at time <math|t+1>). This problem was studied by <cite|Aue02>, where it was first shown that a simple variant of Exp3 attains a low switching regret against oblivious adversaries. Later, <cite|AB10> proved that Exp3.P attains an expected regret (and a high probability regret) of order <math|<sqrt|n*K*S*ln <around|(|n*K/S|)>>> for this problem.

  <subsection|Stochastic versus adversarial bandits><label|sec:best-of-both>

  From a practical viewpoint, Exp3 should be a safe choice when we have reasons to believe that the sequence of rewards is not well matched by any i.i.d. process. Indeed, it is easy to prove that UCB can have linear regret, i.e. <math|<oR><rsub|n>=\<Omega\><around|(|n|)>>, on certain deterministic sequences. In <cite|BS12> a new strategy was described, called SAO (Stochastic and Adversarial Optimal), which enjoys (up to logarithmic factors) both the guarantee of Exp3 for the adversarial model and the guarantee of UCB for the stochastic model. More precisely SAO satisfies <math|<oR><rsub|n>=\<cal-O\>*<around*|(|<frac|K|\<Delta\>>*log<rsup|2><around|(|n|)>*log <around|(|K|)>|)>> in the stochastic model and <math|<oR><rsub|n>=\<cal-O\>*<around*|(|<sqrt|n*K>*log<rsup|3/2><around|(|n|)>*log <around|(|K|)>|)>> in the adversarial model. Note that while this result is a step towards more flexible strategies, the very notion of regret <math|<oR><rsub|n>> can become vacuous with nonstationarities in the reward sequence, since the total reward of the best fixed action might be very small. In that case the notion of switching regret —see Subsection <reference|sec:exp3S>— is more relevant, and it would be interesting to derive a strategy with logarithmic regret in the stochastic model, and a switching regret of order <math|<sqrt|n*K*S>> in the adversarial model.

  <subsection|Alternative feedback structures><label|sec:feedback>

  As mentioned at the beginning of this section, the adversarial multi-armed bandit is a variation of the full information setting, with a weaker feedback signal (only the incurred loss versus the full vector of losses is observed). Many other feedback structures can be considered, and we conclude the chapter by describing a few of them.

  In the <with|font-shape|italic|label efficient> setting, originally proposed by <cite|HP97>, at the end of each round the forecaster has to decide whether to ask for the losses of the current round, knowing that this can be done for at most <math|m\<leq\>n> times. In this setting, <cite|CLS05> proved that the minimax pseudo-regret is of order <math|n*<sqrt|<frac|ln K|m>>>. A bandit label efficient version was proposed by <cite|AAGO06>. <cite|AB10> proved that the minimax pseudo-regret for the bandit label efficient version is of order <math|n*<sqrt|<frac|K|m>>>. These results do not require any fundamentally new algorithmic idea, besides the fact the forecaster has to randomize to select the rounds in which the losses are revealed. Roughly speaking, a simple coin toss with parameter <math|\<epsilon\>=m/n> is sufficient to obtain an optimal regret.

  <cite|MS11> study a model that interpolates between the full information and the bandit setting. The basic idea is that there is an undirected graph <math|G> with <math|K> vertices (one vertex for each arm) that encodes the feedback structure. When one pulls arm <math|i> the losses of all neighboring arms <math|j\<in\>N<around|(|i|)>> in the graph are observed. Thus, a graph with no edges is equivalent to the bandit problem, while the complete graph is equivalent to the full information setting. Given the feedback structure <math|G>, it is natural to consider the following unbiased loss estimate

  <\equation*>
    <wide|\<ell\>|~><rsub|i,t>=<frac|\<ell\><rsub|i,t>*<with|font-series|bold|1><rsub|i\<in\>N<around|(|I<rsub|t>|)>>|<big|sum><rsub|j\<in\>N<around|(|i|)>>p<rsub|j,t>><nbsp>.
  </equation*>

  Using Exp3 with this loss estimate, the authors show that the minimax pseudo-regret (up to logarithmic factors) is of order of <math|<sqrt|\<alpha\><around|(|G|)>*n>>, where <math|\<alpha\><around|(|G|)>> is the independence number of graph <math|G>. Note that this interpolated setting naturally arises in applications like ad placement on websites. Indeed, if a user clicks on an advertisement, it is plausible to assume that the same user would have clicked on similar advertisements, had they been displayed.

  The above problems are all specific examples of the more general partial monitoring setting. In this model, at the end of each round the player does not observe the incurred loss <math|\<ell\><rsub|I<rsub|t>,t>> but rather a stochastic “signal” <math|S<rsub|I<rsub|t>,t>>. A prototypical example of this scenario is the following: a website is repeatedly selling the same item to a sequence of customers. The selling price is dynamically adjusted, and each customer buys the item only if the current price is smaller or equal than his own hidden value for the item. The pricing algorithm (i.e., the player in our terminology) does not see each user's value, but only whether the user bought the item or not.

  The relationship between the signals and the incurred losses defines the instance of a partial monitoring problem. We refer the interested reader to <cite|CL06> for more details, including an historical account. Recent progress on this problem has been made by <cite|BPS10> and<nbsp><cite|FR11>.

  <chapter|Contextual bandits><label|contextual>

  A natural extension of the multi-armed armed problem is obtained by associating side information with each arm. Based on this side information, or context, a notion of “contextual regret” is introduced where optimality is defined with respect to the best policy (i.e., mapping from contexts to arms) rather than the best arm. The space of policies, within which the optimum is sought, is typically chosen in order to have some desired structure. A different viewpoint is obtained when contexts are privately accessed by the policies (which are then appropriately called “experts”). In this case the contextual information is hidden from the forecaster, and arms must be chosen based only on the past estimated performance of the experts.

  Contextual bandits naturally arise in many applications. For example, in personalized news article recommendation the task is to select, from a pool of candidates, a news article to display whenever a new user visits a website. The articles correspond to arms, and a reward is obtained whenever the user clicks on the selected article. Side information, in the form of features, can be extracted from both user and articles. For the user this may include historical activities, demographic information, and geolocation; for the articles, we may have content information and categories. See <cite|li2010contextual> for more details on this application of contextual bandits.

  In general, the presence of contexts creates a wide spectrum of possible variations obtained by combining assumptions on the rewards with assumptions on the nature of contexts and policies. In this chapter we describe just a few of the results available in the literature, and use the bibliographic remarks to mention all those that we are aware of.

  <section|Bandits with side information><label|s:context-intro>

  The most basic example of contextual bandits is obtained when game rounds <math|t=1,2,\<ldots\>> are marked by contexts <math|s<rsub|1>,s<rsub|2>,\<ldots\>> from a given context set <math|<cS>>. The forecaster must learn the best mapping <math|g:<cS>\<to\><around|{|1,\<ldots\>,K|}>> of contexts to arms. We analyze this simple side information setting in the case of adversarial rewards, and we further assume that the sequence of contexts <math|s<rsub|t>> is arbitrary but fixed. The approach we take is the simplest: run a separate instance of Exp3 on each distinct context.

  We introduce the following notion of pseudoregret

  <\equation*>
    <oRS><rsub|n>=max<rsub|g<space|0.17em>:<space|0.17em><cS>\<to\><around|{|1,\<ldots\>,K|}>> <E>*<around*|[|<big|sum><rsub|t=1><rsup|n>\<ell\><rsub|I<rsub|t>,t>-<big|sum><rsub|t=1><rsup|n>\<ell\><rsub|g<around|(|s<rsub|t>|)>,t>|]><nbsp>.
  </equation*>

  Here <math|s<rsub|t>\<in\><cS>> denotes the context marking the <math|t>-th game round. A bound on this pseudoregret is almost immediately obtained using the adversarial bandit results from Section<nbsp><reference|adversarial>.

  <\theorem>
    <label|th:context-simple>There exists a randomized forecaster for bandits with side information (the <math|<cS>>-Exp3 forecaster, defined in the proof) that satisfies

    <\equation*>
      <oRS><rsub|n>\<le\><sqrt|2*n<around|\||<cS>|\|>*K*ln K>
    </equation*>

    for any set <math|<cS>> of contexts.
  </theorem>

  <\proof>
    Let <math|S=<around|\||<cS>|\|>>. The <math|<cS>>-Exp3 forecaster runs an instance of Exp3 on each context <math|s\<in\><cS>>. Let <math|n<rsub|s>> the number of times when <math|s<rsub|t>=s> within the first <math|n> time steps. Using the bound<nbsp>(<reference|eq:exp3bound>) established in Theorem<nbsp><reference|th:Exp3> we get

    <\align*>
      <tformat|<table|<row|<cell|max<rsub|g<space|0.17em>:<space|0.17em><cS>\<to\><around|{|1,\<ldots\>,K|}>> <E><around*|[|<big|sum><rsub|t=1><rsup|n><around*|(|\<ell\><rsub|I<rsub|t>,t>-\<ell\><rsub|g<around|(|s<rsub|t>|)>,t>|)>|]>>|<cell|=<big|sum><rsub|s\<in\><cS>>max<rsub|k=1,\<ldots\>,K> <E><around*|[|<big|sum><rsub|t<space|0.17em>:<space|0.17em>s<rsub|t>=s><around*|(|\<ell\><rsub|I<rsub|t>,t>-\<ell\><rsub|k,t>|)>|]>>>|<row|<cell|>|<cell|\<le\><big|sum><rsub|s\<in\><cS>><sqrt|2*n<rsub|s>*K*ln K>>>|<row|<cell|>|<cell|\<le\><sqrt|2*n*S*K*ln K>>>>>
    </align*>

    where in the last step we used Jensen's inequality and the identity <math|<big|sum><rsub|s>n<rsub|s>=n>.
  </proof>

  In subsection<nbsp><reference|ss:best-context>, we extend this construction by considering several context sets simultaneously.

  A lower bound <math|\<Omega\><around*|(|<sqrt|n*S*K><around*|)||\<nobracket\>>|\<nobracket\>>> is an immediate consequence of the adversarial bandit lower bound (Theorem<nbsp><reference|th:LBminimax>) under the assumption that a constant fraction of the contexts in <math|<cS>> marks at least constant fraction of the <math|n> game rounds.

  <section|The expert case><label|s:context-adv>

  We now consider the contextual variant of the basic adversarial bandit model of Chapter<nbsp><reference|adversarial>. In this variant there is a finite set of <math|N> randomized policies. Following the setting of prediction with expert advice, no assumptions are made on the way policies compute their randomized predictions, and the forecaster experiences the contexts only through the advice provided by the policies. For this reason, in what follows we use the word expert to denote a policy. Calling this a model of contextual bandits may sound a little strange, as the structure of contexts does not seem to play a role here. However, we have decided to include this setting in this chapter because bandit with experts have been used in practical contextual bandit problems -see, e.g., the news recommendation experiment in <cite|beygelzimer2010contextual>.

  Formally, at each step <math|t=1,2,\<ldots\>> the forecaster obtains the expert advice <math|<around*|(|\<xi\><rsub|t><rsup|1>,\<ldots\>,\<xi\><rsub|t><rsup|N><around*|)||\<nobracket\>>|\<nobracket\>>>, where each <math|\<xi\><rsub|t><rsup|j>> is a probability distribution over arms representing the randomized play of expert <math|j> at time <math|t>. If <math|\<ell\><rsub|t>=<around*|(|\<ell\><rsub|1,t>,\<ldots\>,\<ell\><rsub|K,t>|)>\<in\><around|[|0,1|]><rsup|K>> is the vector of losses incurred by the <math|K> arms at time <math|t>, then <math|<E><rsub|i\<sim\>\<xi\><rsub|t><rsup|j>>*\<ell\><rsub|i,t>> denotes the expected loss of expert <math|j> at time <math|t>. We allow the expert advice to depend on the realization of the forecaster's past random plays. This fact is explicitely used in the proof of Theorem<nbsp><reference|th:theta-regret>.

  Similarly to the pseudo-regret<nbsp><eqref|eq:pseudoregretadv> for adversarial bandits, we now introduce the pseudo-regret <math|<oRx><rsub|n>> for the adversarial contextual bandit problem,

  <\equation*>
    <oRx><rsub|n>=max<rsub|i=1,\<ldots\>,N> <E>*<around*|[|<big|sum><rsub|t=1><rsup|n>\<ell\><rsub|I<rsub|t>,t>-<big|sum><rsub|t=1><rsup|n><E><rsub|k\<sim\>\<xi\><rsub|t><rsup|i>>*\<ell\><rsub|k,t>|]><nbsp>.
  </equation*>

  <\big-figure>
    <\bookbox>
      <with|font-shape|italic|Exp4 (Exponential weights algorithm for Exploration and Exploitation with Experts) without mixing:>

      <vspace*|1fn><no-indent>Parameter: a non-increasing sequence of real numbers <math|<around|(|\<eta\><rsub|t>|)><rsub|t\<in\><N>>>.

      <vspace*|1fn><no-indent>Let <math|q<rsub|1>> be the uniform distribution over <math|<around|{|1,\<ldots\>,N|}>>.

      <vspace*|1fn><no-indent>For each round <math|t=1,2,\<ldots\>,n>

      <\itemize>
        <item*|(1)>Get expert advice <math|\<xi\><rsub|t><rsup|1>,\<ldots\>,\<xi\><rsub|t><rsup|N>>, where each <math|\<xi\><rsub|t><rsup|j>> is a probability distribution over arms.

        <item*|(2)>Draw an arm <math|I<rsub|t>> from the probability distribution <math|p<rsub|t>=<around*|(|p<rsub|1,t>,\<ldots\>,p<rsub|K,t>|)>>, where <math|p<rsub|i,t>=<E><rsub|j\<sim\>q<rsub|t>>*\<xi\><rsub|i,t><rsup|j>>.

        <item*|(3)>Compute the estimated loss for each arm

        <\equation*>
          <wide|\<ell\>|~><rsub|i,t>=<frac|\<ell\><rsub|i,t>|p<rsub|i,t>>*<with|font-series|bold|1><rsub|I<rsub|t>=i>*<space|2em>i=1,\<ldots\>,K<nbsp>.
        </equation*>

        <item*|(4)>Compute the estimated loss for each expert

        <\equation*>
          <wide|y|~><rsub|j,t>=<E><rsub|i\<sim\>\<xi\><rsub|t><rsup|j>>*<wide|\<ell\>|~><rsub|i,t>*<space|2em>j=1,\<ldots\>,N<nbsp>.
        </equation*>

        <item*|(5)>Update the estimated cumulative loss for each expert <math|<wide|Y|~><rsub|j,t>=<big|sum><rsub|s=1><rsup|t><wide|y|~><rsub|j,s>> for <math|j=1,\<ldots\>,N>.

        <item*|(6)>Compute the new probability distribution over the experts <math|q<rsub|t+1>=<around*|(|q<rsub|1,t+1>,\<ldots\>,q<rsub|N,t+1>|)>>, where

        <\equation*>
          q<rsub|j,t+1>=<frac|exp <around*|(|-\<eta\><rsub|t>*<wide|Y|~><rsub|j,t>|)>|<big|sum><rsub|k=1><rsup|N>exp <around*|(|-\<eta\><rsub|t>*<wide|Y|~><rsub|k,t>|)>><nbsp>.
        </equation*>
      </itemize>
    </bookbox>

    <label|fig:exp4>
  </big-figure|Exp4 forecaster.>

  In order to bound the contextual pseudo-regret <math|<oRx><rsub|n>>, one could naively use the Exp3 strategy of Chapter<nbsp><reference|adversarial> on the set of experts. This would give a bound of order <math|<sqrt|n*N*log N>>. In Figure<nbsp><reference|fig:exp4> we introduce the contextual forecaster Exp4 for which we show a bound of order <math|<sqrt|n*K*ln N>>. Thus, in this framework we can be competitive even with an exponentially large (with respect to <math|n>) number of experts.

  Exp4 is a simple adaptation of Exp3 to the contextual setting. Exp4 runs Exp3 over the <math|N> experts using estimates of the experts' losses <math|<E><rsub|i\<sim\>\<xi\><rsub|t><rsup|j>>*\<ell\><rsub|i,t>>. In order to draw arms, Exp4 mixes the expert advice with the probability distribution over experts maintained by Exp3. The resulting bound on the pseudo-regret is of order <math|<sqrt|n*K*ln N>>, where the term <math|<sqrt|ln N>> comes from running Exp3 over the <math|N> experts, while <math|<sqrt|K>> is a bound on the second moment of the estimated expert losses under the distribution <math|q<rsub|t>> computed by Exp3. Inequality<nbsp><eqref|eq:exp4-ineq3> shows that <math|<E><rsub|j\<sim\>q<rsub|t>>*<wide|y|~><rsup|2><rsub|j,t>\<le\><E><rsub|i\<sim\>p<rsub|t>>*<wide|\<ell\>|~><rsub|i,t><rsup|2>>. That is, this second moment is at most that of the estimated arm losses under the distribution <math|p<rsub|t>> computed by Exp4, which in turn is bounded by <math|<sqrt|K>> using techniques from Chapter<nbsp><reference|adversarial>.

  <\theorem>
    [Pseudo-regret of Exp4]<label|th:Exp4>Exp4 without mixing and with <math|\<eta\><rsub|t>=\<eta\>=<sqrt|<frac|2*ln N|n*K>>> satisfies

    <\equation>
      <label|eq:exp4bound><oRx><rsub|n>\<leq\><sqrt|2*n*N*ln K><nbsp>.
    </equation>

    On the other hand, with <math|\<eta\><rsub|t>=<sqrt|<frac|ln N|t*K>>> it satisfies

    <\equation>
      <label|eq:exp4boundanytime><oRx><rsub|n>\<leq\>2*<sqrt|n*N*ln K><nbsp>.
    </equation>
  </theorem>

  <\proof>
    We apply the analysis of Exp3 (Theorem<nbsp><reference|th:Exp3>) to a forecaster using distributions <math|q<rsub|t>> over <math|N> experts, whose pseudo-losses are <math|<wide|y|~><rsub|j,t>> for <math|j=1,\<ldots\>,N>. This immediately gives the inequality

    <\equation>
      <label|eq:exp4-exp3><big|sum><rsub|t=1><rsup|n><E><rsub|j\<sim\>q<rsub|t>>*<wide|y|~><rsub|j,t>\<le\><wide|Y|~><rsub|k,n>+<frac|log N|\<eta\><rsub|n>>+<frac|1|2>*<big|sum><rsub|t=1><rsup|n>\<eta\><rsub|t>*<space|0.17em><E><rsub|j\<sim\>q<rsub|t>>*<space|0.17em><wide|y|~><rsub|j,t><rsup|2><nbsp>.
    </equation>

    Now, similarly to <eqref|eq:equalities> in the proof of Theorem<nbsp><reference|th:Exp3>, we establish the following inequalities

    <\align>
      <tformat|<table|<row|<cell|>|<cell|<E><rsub|I<rsub|t>\<sim\>p<rsub|t>>*<wide|y|~><rsub|k,t>=<E><rsub|I<rsub|t>\<sim\>p<rsub|t>>*<E><rsub|i\<sim\>\<xi\><rsub|t><rsup|k>>*<wide|\<ell\>|~><rsub|i,t>=<E><rsub|i\<sim\>\<xi\><rsub|t><rsup|k>>*\<ell\><rsub|i,t>=y<rsub|k,t><eq-number><label|eq:exp4-ineq1>>>|<row|<cell|>|<cell|<E><rsub|j\<sim\>q<rsub|t>>*<wide|y|~><rsub|j,t>=<E><rsub|j\<sim\>q<rsub|t>>*<E><rsub|i\<sim\>\<xi\><rsub|t><rsup|j>>*<wide|\<ell\>|~><rsub|i,t>=<E><rsub|i\<sim\>p<rsub|t>>*<wide|\<ell\>|~><rsub|i,t>=\<ell\><rsub|I<rsub|t>,t><eq-number><label|eq:exp4-ineq2>>>|<row|<cell|>|<cell|<E><rsub|j\<sim\>q<rsub|t>>*<wide|y|~><rsup|2><rsub|j,t>=<E><rsub|j\<sim\>q<rsub|t>>*<around*|(|<E><rsub|i\<sim\>\<xi\><rsub|t><rsup|j>>*<wide|\<ell\>|~><rsub|i,t>|)><rsup|2>\<le\><E><rsub|j\<sim\>q<rsub|t>>*<E><rsub|i\<sim\>\<xi\><rsub|t><rsup|j>>*<wide|\<ell\>|~><rsub|i,t><rsup|2>=<E><rsub|i\<sim\>p<rsub|t>>*<wide|\<ell\>|~><rsub|i,t><rsup|2>=<frac|\<ell\><rsub|I<rsub|t>,t><rsup|2>|p<rsub|I<rsub|t>,t>><eq-number><label|eq:exp4-ineq3>>>>>
    </align>

    where we used Jensen's inequality to prove<nbsp><eqref|eq:exp4-ineq3>. By applying<nbsp><eqref|eq:exp4-ineq2> and<nbsp><eqref|eq:exp4-ineq3> to<nbsp><eqref|eq:exp4-exp3> we get

    <\equation*>
      <big|sum><rsub|t=1><rsup|n>\<ell\><rsub|I<rsub|t>,t>=<big|sum><rsub|t=1><rsup|n><E><rsub|j\<sim\>q<rsub|t>>*<wide|y|~><rsub|j,t>\<le\><wide|Y|~><rsub|k,n>+<frac|log N|\<eta\><rsub|n>>+<frac|1|2>*<big|sum><rsub|t=1><rsup|n>\<eta\><rsub|t>*<space|0.17em><frac|\<ell\><rsub|I<rsub|t>,t><rsup|2>|p<rsub|I<rsub|t>,t>><nbsp>.
    </equation*>

    Now note that, if we take expectation over the draw of <math|I<rsub|1>,\<ldots\>,I<rsub|n>>, using<nbsp><eqref|eq:exp4-ineq1> we obtain

    <\equation*>
      <E>*<space|0.17em><wide|Y|~><rsub|k,n>=<E><around*|[|<big|sum><rsub|t=1><rsup|n><E><around*|[|<wide|y|~><rsub|j,n><space|0.17em><mid|\|><space|0.17em>I<rsub|1>,\<ldots\>,I<rsub|t-1>|]>|]>=<E><around*|[|<big|sum><rsub|t=1><rsup|n><E><rsub|i\<sim\>\<xi\><rsub|t><rsup|k>>*\<ell\><rsub|i,t>|]>=<E>*<space|0.17em>Y<rsub|k,n><nbsp>.
    </equation*>

    Hence,

    <\equation*>
      <oRx><rsub|n>=max<rsub|k=1,\<ldots\>,N> <E>*<around*|[|<big|sum><rsub|t=1><rsup|n>\<ell\><rsub|I<rsub|t>,t>-Y<rsub|k,n>|]>\<le\><frac|log N|\<eta\><rsub|n>>+<frac|K|2>*<big|sum><rsub|t=1><rsup|n>\<eta\><rsub|t><nbsp>.
    </equation*>

    Choosing <math|\<eta\><rsub|t>> as in the statement of the Theorem, and using the inequality <math|<big|sum><rsub|t=1><rsup|n>t<rsup|-1/2>\<le\>2*<sqrt|n>>, concludes the proof.
  </proof>

  Besides pseudo-regret, the contextual regret

  <\equation*>
    <Rx><rsub|n>=max<rsub|k=1,\<ldots\>,N><around*|(|<big|sum><rsub|t=1><rsup|n>\<ell\><rsub|I<rsub|t>,t>-<big|sum><rsub|t=1><rsup|n><E><rsub|i\<sim\>\<xi\><rsub|t><rsup|J>>*\<ell\><rsub|i,t>|)>
  </equation*>

  can be also bounded, at least with high probability. Indeed, similarly to the variant Exp3.P of Exp3 (see Section<nbsp><reference|sec:regret>), an analogous modification of Exp4, called Exp4.P, satisfies

  <\equation*>
    <Rx><rsub|n>\<le\>c<sqrt|n*K*ln <around|(|N*\<delta\><rsup|-1>|)>>
  </equation*>

  for some constant <math|c\<gtr\>0> and with probability at least <math|1-\<delta\>>, where <math|\<delta\>\<in\><around|(|0,1|)>> is a parameter of the algorithm.

  <subsection|Competing against the best context set><label|ss:best-context>

  We revisit the basic contextual scenario introduced in Section<nbsp><reference|s:context-intro>, where the goal is to compete against the best mapping from contexts to arms. Consider now a class <math|<theset|<cS><rsub|\<theta\>>|\<theta\>\<in\>\<Theta\>>> of context sets. In this new game, each time step <math|t=1,2,\<ldots\>> is marked by the vector <math|<around*|(|s<rsub|\<theta\>,t>|)><rsub|\<theta\>\<in\>\<Theta\>>> of contexts, one for each set in <math|\<Theta\>>. Introduce the pseudoregret

  <\equation*>
    <oR><rsup|\<Theta\>><rsub|n>=max<rsub|\<theta\>\<in\>\<Theta\>> max<rsub|g<space|0.17em>:<space|0.17em><cS><rsub|\<theta\>>\<to\><around|{|1,\<ldots\>,K|}>> <E>*<around*|[|<big|sum><rsub|t=1><rsup|n>\<ell\><rsub|I<rsub|t>,t>-<big|sum><rsub|t=1><rsup|n>\<ell\><rsub|g<around|(|s<rsub|\<theta\>,t>|)>,t>|]><nbsp>.
  </equation*>

  When <math|<around|\||\<Theta\>|\|>=1> we recover the contextual pseudoregret <math|<oRS><rsub|n>>. In general, when <math|\<Theta\>> contains more than one set, the forecaster must learn both the best set <math|<cS><rsub|\<theta\>>> and the best function <math|g:<cS><rsub|\<theta\>>\<to\><around|{|1,\<ldots\>,K|}>> from that set to the set of arms.

  We find this variant of contextual bandits interesting because its solution involves a nontrivial combination of two of the main algorithms examined in this chapter: Exp4 and <math|<cS>>-Exp3. In particular, we consider a scenario in which Exp4 uses instances of <math|<cS>>-Exp3 as experts. The interesting aspect is that these experts are learning themselves, and thus the analysis of the combined algorithm requires taking into account the learning process at both levels.

  Note that in order to solve this problem we could simply lump all contexts in a big set and use the proof of Theorem<nbsp><reference|th:context-simple>. However, this would give a regret bound that depends exponentially in <math|<around|\||\<Theta\>|\|>>. On the other hand, by using Exp4 directly on the set of all policies <math|g> (which is of cardinality exponential in <math|<around|\||\<Theta\>|\|>\<times\><around|\||S|\|>>), we could improve this to a bound that scales with <math|<sqrt|<around|\||\<Theta\>|\|>>>. The idea we explore here is to use Exp4 over the class <math|\<Theta\>> of “experts”, and combine this with the <math|<cS>>-Exp3 algorithm of Theorem<nbsp><reference|th:context-simple>. This gets us down to a logarithmic dependency on <math|<around|\||\<Theta\>|\|>>, albeit at the price of a worse dependency on <math|n>.

  Intuitively, Exp4 provides competitiveness against the best context set <math|<cS><rsub|\<theta\>>>, while the instances of the <math|<cS>>-Exp3 algorithm, acting as experts for Exp4, ensure that we are competitive against the best function <math|g:<cS><rsub|\<theta\>>\<to\><around|{|1,\<ldots\>,K|}>> for each <math|\<theta\>\<in\>\<Theta\>>. However, by doing so we immediately run into a problem: the <math|p<rsub|t>> used by Exp4 is not the same as the <math|p<rsub|t>>'s used by each expert. In order to address this issue, we now show that the analysis of Exp3 holds even when the sequence of plays <math|I<rsub|1>,I<rsub|2>,\<ldots\>> is drawn from a sequence of distributions <math|q<rsub|1>,q<rsub|2>,\<ldots\>> possibly different from the one chosen by the forecaster. The only requirement we need is that each probability in <math|q<rsub|t>> be bounded away from zero.

  <\theorem>
    <label|th:exp3-rebel>Consider a <math|K>-armed bandit game in which at each step <math|t=1,2,\<ldots\>> the played arm <math|I<rsub|t>> is drawn from an arbitrary distribution <math|q<rsub|t>> over arms. Each <math|q<rsub|t>> may depend in an arbitrary way on the pairs <math|<around|(|I<rsub|1>,\<ell\><rsub|I<rsub|1>,1>|)>,\<ldots\>,<around|(|I<rsub|t-1>,\<ell\><rsub|I<rsub|t-1>,t-1>|)>>. Moreover, <math|q<rsub|t,i>\<ge\><ve>\<gtr\>0> for all <math|i=1,\<ldots\>,K> and <math|t\<ge\>1>.

    If Exp3 without mixing is run with <math|<wide|\<ell\>|~><rsub|i,t>=<frac|\<ell\><rsub|i,t>|q<rsub|i,t>>*<with|font-series|bold|1><rsub|I<rsub|t>=i>> and <math|\<eta\><rsub|t>=\<eta\>=<sqrt|<frac|2*ln K|n*K>>> then

    <\equation>
      max<rsub|k=1,\<ldots\>,K> <E><rsub|I<rsup|n>\<sim\>q<rsup|n>>*<around*|[|<big|sum><rsub|t=1><rsup|n><E><rsub|i\<sim\>p<rsub|t>>*\<ell\><rsub|i,t>-<big|sum><rsub|t=1><rsup|n>\<ell\><rsub|k,t>|]>\<le\><sqrt|<frac|2*n|<ve>>*ln K>
    </equation>

    where <math|I<rsup|n>\<sim\>q<rsup|n>> means that each <math|I<rsub|t>> is drawn from <math|q<rsub|t>> for <math|t=1,\<ldots\>,n>, and <math|p<rsub|t>> is the distribution used by Exp3 at time <math|t>.
  </theorem>

  <\proof>
    The proof is an easy adaptation of Exp3 analysis (Theorem<nbsp><reference|th:Exp3> in Section<nbsp><reference|adversarial>) and we just highlight the differences. The key step is the analysis of the log-moment of <math|<wide|\<ell\>|~><rsub|i,t>>:

    <\align*>
      <tformat|<table|<row|<cell|<E><rsub|i\<sim\>p<rsub|t>>*<wide|\<ell\>|~><rsub|i,t>=>|<cell|<space|0.17em><frac|1|\<eta\>>*log <E><rsub|i\<sim\>p<rsub|t>>*exp <around*|(|-\<eta\>*<around|(|<wide|\<ell\>|~><rsub|i,t>-<E><rsub|k\<sim\>p<rsub|t>>*<wide|\<ell\>|~><rsub|k,t>|)>|)>>>|<row|<cell|>|<cell|-<frac|1|\<eta\>>*log <E><rsub|i\<sim\>p<rsub|t>>*exp <around*|(|-\<eta\>*<wide|\<ell\>|~><rsub|i,t>|)><nbsp>.>>>>
    </align*>

    The first term is bounded in a manner slightly different from the proof of Theorem<nbsp><reference|th:Exp3>,

    <\equation*>
      log <E><rsub|i\<sim\>p<rsub|t>>*exp <around*|(|-\<eta\>*<around|(|<wide|\<ell\>|~><rsub|i,t>-<E><rsub|k\<sim\>p<rsub|t>>*<wide|\<ell\>|~><rsub|k,t>|)>|)>\<le\><frac|\<eta\><rsup|2>|2>*<space|0.17em><E><rsub|i\<sim\>p<rsub|t>>*<space|0.17em><wide|\<ell\>|~><rsub|i,t><rsup|2>\<le\><frac|\<eta\><rsup|2>|2>*<space|0.17em><frac|p<rsub|I<rsub|t>,t>|q<rsub|I<rsub|t>,t><rsup|2>><nbsp>.
    </equation*>

    The analysis of the second term is unchanged: Let <math|<wide|L|~><rsub|i,0>=0>, <math|\<Phi\><rsub|0><around|(|\<eta\>|)>=0> and <math|\<Phi\><rsub|t><around|(|\<eta\>|)>=<frac|1|\<eta\>>*log <frac|1|K>*<big|sum><rsub|i=1><rsup|K>exp <around*|(|-\<eta\>*<wide|L|~><rsub|i,t>|)>>. Then by definition of <math|p<rsub|t>> we have:

    <\equation*>
      -<frac|1|\<eta\>>*log <E><rsub|i\<sim\>p<rsub|t>>*exp <around*|(|-\<eta\>*<wide|\<ell\>|~><rsub|i,t>|)>=\<Phi\><rsub|t-1><around|(|\<eta\>|)>-\<Phi\><rsub|t><around|(|\<eta\>|)><nbsp>.
    </equation*>

    Proceeding again as in the proof of Theorem<nbsp><reference|th:Exp3> we obtain

    <\align*>
      <tformat|<table|<row|<cell|<E><rsub|I<rsup|n>\<sim\>q<rsup|n>><around*|[|<big|sum><rsub|t=1><rsup|n><E><rsub|i\<sim\>p<rsub|t>>*<wide|\<ell\>|~><rsub|i,t>|]>\<le\><E><rsub|I<rsup|n>\<sim\>q<rsup|n>>*<around*|[|<big|sum><rsub|t=1><rsup|n><wide|\<ell\>|~><rsub|k,t>+<frac|\<eta\>|2>*<space|0.17em><frac|p<rsub|I<rsub|t>,t>|q<rsub|I<rsub|t>,t><rsup|2>>|]>+<frac|ln K|\<eta\>><nbsp>.>>>>
    </align*>

    Now observe that

    <\align*>
      <tformat|<table|<row|<cell|<E><rsub|I<rsub|t>\<sim\>q<rsub|t>>*<wide|\<ell\>|~><rsub|k,t>=\<ell\><rsub|k,t>*<space|2em><text|and><space|2em><E><rsub|I<rsub|t>\<sim\>q<rsub|t>>*<frac|p<rsub|I<rsub|t>,t>|q<rsub|I<rsub|t>,t><rsup|2>>=<big|sum><rsub|i=1><rsup|K><frac|p<rsub|i,t>|q<rsub|i,t>>\<le\><frac|1|<ve>><nbsp>.>>>>
    </align*>

    Therefore

    <\align*>
      <tformat|<table|<row|<cell|<E><rsub|I<rsup|n>\<sim\>q<rsup|n>><around*|[|<big|sum><rsub|t=1><rsup|n><around*|(|<E><rsub|i\<sim\>p<rsub|t>>*\<ell\><rsub|i,t>-\<ell\><rsub|k,t>|)>|]>>|<cell|=<E><rsub|I<rsup|n>\<sim\>q<rsup|n>><around*|[|<big|sum><rsub|t=1><rsup|n><around*|(|<E><rsub|i\<sim\>p<rsub|t>>*<wide|\<ell\>|~><rsub|i,t>-<wide|\<ell\>|~><rsub|k,t>|)>|]>>>|<row|<cell|>|<cell|\<le\><frac|\<eta\>*n|2*<ve>>+<frac|ln K|\<eta\>><nbsp>.>>>>
    </align*>

    Choosing <math|\<eta\>> as in the statement of the theorem concludes the proof.
  </proof>

  It is left to the reader to verify that the analysis of <math|<cS>>-Exp in Theorem<nbsp><reference|th:context-simple> can be combined with the above analysis to give the bound

  <\equation>
    <label|eq:exp3-rebel-cont>max<rsub|g<space|0.17em>:<space|0.17em><cS>\<to\><around|{|1,\<ldots\>,K|}>> <E><rsub|I<rsup|n>\<sim\>q<rsup|n>>*<around*|[|<big|sum><rsub|t=1><rsup|n><E><rsub|i\<sim\>p<rsub|t>>*\<ell\><rsub|i,t>-<big|sum><rsub|t=1><rsup|n>\<ell\><rsub|g<around|(|s<rsub|t>|)>,t>|]>\<le\><sqrt|<frac|2*n|<ve>><around|\||<cS>|\|>*ln K><nbsp>.
  </equation>

  Next, we state a bound on the contextual pseudoregret of a variant of Exp4 whose probabilities <math|p<rsub|i,t>> satisfy the property <math|p<rsub|i,t>\<ge\><tfrac|\<gamma\>|K>> for all <math|i=1,\<ldots\>,K> and <math|t\<ge\>1>, where <math|\<gamma\>\<gtr\>0> is a parameter. This is obtained by replacing in Exp4 the assignment <math|p<rsub|i,t>=<E><rsub|j\<sim\>q<rsub|t>>*\<xi\><rsub|i,t><rsup|j>> (line 2 in Figure<nbsp><reference|fig:exp4>) with the assignment

  <\equation*>
    p<rsub|i,t>=<around|(|1-\<gamma\>|)>*<E><rsub|j\<sim\>q<rsub|t>>*\<xi\><rsub|i,t><rsup|j>+<frac|\<gamma\>|K>
  </equation*>

  where <math|\<gamma\>\<gtr\>0> is the mixing coefficient. This mixing clearly achieves the desired property for each <math|p<rsub|i,t>>.

  <\theorem>
    [Pseudo-regret of Exp4 with mixing]<label|th:exp4-mixing>Exp4 with mixing coefficient <math|\<gamma\>> and with <math|\<eta\><rsub|t>=\<eta\>=\<gamma\>/K> satisfies

    <\equation>
      <label|eq:exp4bound-mix><oRx><rsub|n>\<le\><frac|\<gamma\>*<space|0.17em>n|2>+<frac|K*ln N|\<gamma\>><nbsp>.
    </equation>
  </theorem>

  <\proof>
    The proof goes along the same lines of Exp4 original proof<nbsp><cite-detail|ACFS03|Theorem<nbsp>7.1> with the following modifications: since the weights are negative exponentials, we can use the bound <math|exp <around|(|-x|)>\<le\>1-x+<tfrac|x<rsup|2>|2>> for all <math|x\<ge\>0> rather than <math|exp <around|(|x|)>\<le\>1+x+<around|(|e-2|)>*x<rsup|2>> for all <math|0\<le\>x\<le\>1>; the term <math|<around|(|1-\<gamma\>|)>*<big|sum><rsub|t>\<ell\><rsub|k,t>> is upper bounded directly by <math|<big|sum><rsub|t>\<ell\><rsub|k,t>>; the term <math|<tfrac|\<gamma\>|K><big|sum><rsub|t><big|sum><rsub|i>\<ell\><rsub|i,t>> is upper bounded by <math|\<gamma\>*<space|0.17em>n> without requiring the assumption that the expert set contains the “uniform expert”. Finally, the fact that experts' distributions <math|\<xi\><rsub|t><rsup|j>> depend on the realization of past forecaster's random arms is dealt with in the same way as in the proof of Theorem<nbsp><reference|th:Exp4>.
  </proof>

  <\theorem>
    <label|th:theta-regret>There exists a randomized forecaster achieving

    <\equation*>
      <oR><rsup|\<Theta\>><rsub|n>=\<cal-O\>*<around*|(|n<rsup|2/3>*<around*|(|max<rsub|\<theta\>\<in\>\<Theta\>><around|\||<cS><rsub|\<theta\>>|\|>*K*ln K|)><rsup|1/3><sqrt|ln <around|\||\<Theta\>|\|>>|)>
    </equation*>

    for any class <math|<theset|<cS><rsub|\<theta\>>|\<theta\>\<in\>\<Theta\>>> of context sets.
  </theorem>

  <\proof>
    We run the Exp4 forecaster with mixing coefficient <math|\<gamma\>> using instances of the <math|<cS>>-Exp3 algorithm (defined in the proof of Theorem<nbsp><reference|th:context-simple>) as experts. Each <math|<cS>>-Exp3 instance is run on a different context set <math|<cS><rsub|\<theta\>>> for <math|\<theta\>\<in\>\<Theta\>>. Let <math|\<xi\><rsub|t><rsup|\<theta\>>> be the distribution used at time <math|t> by the <math|<cS>>-Exp3 instance running on context set <math|<cS><rsub|\<theta\>>> and let <math|p<rsup|n>> be the joint distribution of <math|I<rsup|n>=<around|(|I<rsub|1>,\<ldots\>,I<rsub|n>|)>> used by Exp4. Since <math|p<rsub|i,t>\<ge\><tfrac|\<gamma\>|K>> for all <math|i=1,\<ldots\>,K> and <math|t\<ge\>1>, we can use<nbsp>(<reference|eq:exp3-rebel-cont>) with <math|<ve>=\<gamma\>/K>. Thus, Theorem<nbsp><reference|th:exp4-mixing> implies

    <\align*>
      <tformat|<table|<row|<cell|<E><rsub|I<rsup|n>\<sim\>p<rsup|n>><around*|[|<big|sum><rsub|t=1><rsup|n>\<ell\><rsub|I<rsub|t>,t>|]>\<le\>>|<cell|<space|0.17em>min<rsub|\<theta\>\<in\>\<Theta\>> <E><rsub|I<rsup|n>\<sim\>p<rsup|n>><around*|[|<big|sum><rsub|t=1><rsup|n><E><rsub|k\<sim\>\<xi\><rsub|t><rsup|\<theta\>>>*\<ell\><rsub|k,t>|]>+<frac|\<gamma\>*<space|0.17em>n|2>+<frac|K*ln <around|\||\<Theta\>|\|>|\<gamma\>>>>|<row|<cell|\<le\>>|<cell|<space|0.17em>min<rsub|\<theta\>\<in\>\<Theta\>> min<rsub|g<space|0.17em>:<space|0.17em><cS><rsub|\<theta\>>\<to\><around|{|1,\<ldots\>,K|}>> <E><around*|[|<big|sum><rsub|t=1><rsup|n>\<ell\><rsub|g<around|(|s<rsub|t>|)>,t>|]>>>|<row|<cell|>|<cell|+<sqrt|<frac|2*n|<ve>>*max<rsub|\<theta\>\<in\>\<Theta\>><around|\||<cS><rsub|\<theta\>>|\|>*ln K>+<frac|\<gamma\>*<space|0.17em>n|2>+<frac|K*ln <around|\||\<Theta\>|\|>|\<gamma\>><nbsp>.>>>>
    </align*>

    Substituting <math|<ve>=\<gamma\>/K> in the above expression and choosing <math|\<gamma\>> of the order of <math|n<rsup|-1/3>*<around*|(|max<rsub|\<theta\>\<in\>\<Theta\>><around|\||<cS><rsub|\<theta\>>|\|>*K*ln K|)><rsup|1/3><sqrt|ln <around|\||\<Theta\>|\|>>> gives the desired result.
  </proof>

  Note that in Theorem<nbsp><reference|th:theta-regret> the rate is <math|n<rsup|2/3>>, in contrast to the more usual <math|n<rsup|1/2>> bandit rate. This worsening is inherent in the Exp4-over-Exp3 construction. It is not known whether the rate could be improved while keeping the same logarithmic dependence on <math|<around|\||\<Theta\>|\|>> guaranteed by this construction.

  <section|Stochastic contextual bandits><label|s:context-stochastic>

  We now move on to consider the case in which policies have a known structure. More specifically, each policy is a function <math|f> mapping the context space to the arm space <math|<around|{|1,\<ldots\>,K|}>> and the set <math|<cF>> of policies is given as an input parameter to the forecaster.

  Under this assumption on the policies, the problem can be viewed as a bandit variant of supervised learning. For this reason, here and in the next section we follow the standard notation of supervised learning and use <math|x> rather than <math|s> to denote contexts.

  In supervised learning, we observe data of the form <math|<around|(|x<rsub|t>,\<ell\><rsub|t>|)>>. In the contextual bandit setting, the observed data are <math|<around|(|x<rsub|t>,\<ell\><rsub|I<rsub|t>,t>|)>> where <math|I<rsub|t>> is the arm chosen by the forecaster at time <math|t> given context <math|x<rsub|t>\<in\><cX>>. This connection to supervised learning has steered the focus of research towards stochastic data generation models, which are widespread in the analysis of supervised learning. In the stochastic variant of contextual bandits, contexts <math|x<rsub|t>> and arm losses <math|\<ell\><rsub|t>=<around|(|\<ell\><rsub|1,t>,\<ldots\>,\<ell\><rsub|K,t>|)>> are realizations of i.i.d. draws from a fixed and unknown distribution <math|D> over <math|<cX>\<times\><around|[|0,1|]><rsup|K>>. In tight analogy with statistical learning theory, a policy <math|f> is evaluated in terms of its statistical risk <math|\<ell\><rsub|D><around|(|f|)>=<E><rsub|<around|(|x,\<ell\>|)>\<sim\>D>*\<ell\><rsub|f<around|(|x|)>>>. Let

  <\equation*>
    f<rsup|\<ast\>>=<arginf><rsub|f\<in\><cF>>\<ell\><rsub|D><around|(|f|)>
  </equation*>

  the risk-minimizing policy in the class. The regret with respect to the class <math|<cF>> of a forecaster choosing arms <math|I<rsub|1>,I<rsub|2>,\<ldots\>> is then defined by

  <\equation*>
    <big|sum><rsub|t=1><rsup|n>\<ell\><rsub|I<rsub|t>,t>-n*<space|0.17em>\<ell\><rsub|D><around|(|f<rsup|\<ast\>>|)><nbsp>.
  </equation*>

  This can be viewed as the stochastic counterpart of the adversarial contextual regret <math|<oRx><rsub|n>> introduced in Section<nbsp><reference|s:context-adv>. The main question is now to characterize the “price of bandit information” using the sample complexity of supervised learning as yardstick.

  In the rest of this section we focus on the case of <math|K=2> arms and parametrize classes <math|<cF>> of policies <math|f:<cX>\<to\><around|{|1,2|}>> by their VC-dimension <math|d> —see<nbsp><cite|BBL05> for a modern introduction to VC theory. For this setting, we consider the following forecaster.

  <\padded-center>
    <\bookbox>
      <with|font-shape|italic|VE (VC dimension by Exponentiation):>

      <vspace*|1fn><no-indent>Parameters: number <math|n> of rounds, <math|n<rprime|'>> satisfying <math|1\<le\>n<rprime|'>\<le\>n>.

      <\itemize>
        <item*|(1)>For the first <math|n<rprime|'>> rounds, choose arms uniformly at random.

        <item*|(2)>Build <math|<cF><rprime|'>\<subseteq\><cF>> such that for any <math|f\<in\><cF>> there is exactly one <math|f<rprime|'>\<in\><cF><rprime|'>> satisfying <math|f<around|(|x<rsub|t>|)>=f<rprime|'><around|(|x<rsub|t>|)>> for all <math|t=1,\<ldots\>,n<rprime|'>>.

        <item*|(3)>For <math|t=n<rprime|'>+1,\<ldots\>,n> play by simulating Exp4.P using the policies of <math|<cF><rprime|'>> as experts.
      </itemize>
    </bookbox>
  </padded-center>

  We now show that the per round regret of VE is of order <math|<sqrt|d/n>>, excluding logarithmic factors. This rate is equal to the optimal rate for supervised learning of VC-classes, showing that —in this case— the price of bandit information is essentially zero.

  <\theorem>
    For any class <math|<cF>> of binary policies <math|f:<cX>\<to\><around|{|0,1|}>> of VC-dimension <math|d> and for all <math|n\<gtr\>d>, the forecaster VE run with <math|n<rprime|'>=<sqrt|n*<around*|(|2*d*ln <frac|e*n|d>+ln <frac|3|\<delta\>>|)>>> satisfies

    <\equation>
      <label|eq:vebound><big|sum><rsub|t=1><rsup|n>\<ell\><rsub|I<rsub|t>,t>-n*inf<rsub|f\<in\><cF>> \<ell\><rsub|D><around|(|f|)>\<leq\>c<sqrt|n*<around*|(|d*ln <frac|e*n|d>+ln <frac|3|\<delta\>>|)>>
    </equation>

    for some constant <math|c\<gtr\>0> and with probability at least <math|1-\<delta\>> with respect to both the random data generation and VE's internal randomization.
  </theorem>

  <\proof>
    Given a sample realization <math|<around|(|x<rsub|1>,\<ell\><rsub|1>|)>,\<ldots\>,<around|(|x<rsub|n>,\<ell\><rsub|n>|)>>, let <math|f<rprime|'>> the unique element of <math|<cF><rprime|'>> such that <math|f<rprime|'><around|(|x<rsub|t>|)>=f<rsup|\<ast\>><around|(|x<rsub|t>|)>> for all <math|t=1,\<ldots\>,n<rprime|'>>, where <math|f<rsup|\<ast\>>> is the risk-minimizing function in <math|<cF>>. Given a sample, we may assume without loss of generality that <math|<cF>> contains functions restricted on the finite domain <math|<around|{|x<rsub|1>,\<ldots\>,x<rsub|n>|}>>. Recall Sauer-Shelah lemma —see, e.g.<nbsp><cite|BBL05>, stating that any class <math|<cF>> of binary functions defined on a finite domain of size <math|n> satisfies <math|<around|\||<cF>|\|>\<le\><around*|(|<frac|e*n|d>|)><rsup|d>>, where <math|d> is the VC-dimension of <math|<cF>>. Then, with probability at least <math|1-<tfrac|\<delta\>|3>> with respect to VE's internal randomization,

    <\align*>
      <tformat|<table|<row|<cell|<big|sum><rsub|t=1><rsup|n>>|<cell|\<ell\><rsub|I<rsub|t>,t>\<le\>n<rprime|'>+<big|sum><rsub|t=n<rprime|'>+1><rsup|n>\<ell\><rsub|f<rprime|'><around|(|x<rsub|t>|)>,t>+c<sqrt|2*<around|(|n-n<rprime|'>|)>*ln <frac|3<around|\||<cF><rprime|'>|\|>|\<delta\>>>>>|<row|<cell|>|<cell|\<le\>n<rprime|'>+<big|sum><rsub|t=n<rprime|'>+1><rsup|n><around*|(|\<ell\><rsub|f<rsup|\<ast\>><around|(|x<rsub|t>|)>,t>+\<ell\><rsub|f<rprime|'><around|(|x<rsub|t>|)>,t>-\<ell\><rsub|f<rsup|\<ast\>><around|(|x<rsub|t>|)>,t>|)>+c<sqrt|2*<around|(|n-n<rprime|'>|)>*ln <frac|3<around|\||<cF><rprime|'>|\|>|\<delta\>>>>>|<row|<cell|>|<cell|\<le\>n<rprime|'>+<big|sum><rsub|t=n<rprime|'>+1><rsup|n><around*|(|\<ell\><rsub|f<rsup|\<ast\>><around|(|x<rsub|t>|)>,t>+<with|font-series|bold|1><rsub|f<rprime|'><around|(|x<rsub|t>|)>\<neq\>f<rsup|\<ast\>><around|(|x<rsub|t>|)>>|)>+c<sqrt|2*<around|(|n-n<rprime|'>|)>*ln <frac|3<around|\||<cF><rprime|'>|\|>|\<delta\>>>>>|<row|<cell|>|<cell|\<le\>n<rprime|'>+<big|sum><rsub|t=n<rprime|'>+1><rsup|n><around*|(|\<ell\><rsub|f<rsup|\<ast\>><around|(|x<rsub|t>|)>,t>+<with|font-series|bold|1><rsub|f<rprime|'><around|(|x<rsub|t>|)>\<neq\>f<rsup|\<ast\>><around|(|x<rsub|t>|)>>|)>+c<sqrt|2*n*<around*|(|d*ln <frac|e*n|d>+ln <frac|3|\<delta\>>|)>>>>>>
    </align*>

    where we used <math|\<ell\><rsub|i,t>\<in\><around|[|0,1|]>> in the penultimate step and the Sauer-Shelah lemma in the last step. Now, the term <math|<big|sum><rsub|t>\<ell\><rsub|f<rsup|\<ast\>><around|(|x<rsub|t>|)>,t>> is controlled in probability w.r.t. the random draw of the sample via Chernoff bounds,

    <\equation*>
      \<bbb-P\><around*|(|<big|sum><rsub|t=n<rprime|'>+1><rsup|n>\<ell\><rsub|f<rsup|\<ast\>><around|(|x<rsub|t>|)>,t>\<gtr\><around|(|n-n<rprime|'>|)>*<space|0.17em>\<ell\><rsub|D><around|(|f<rsup|\<ast\>>|)>+<sqrt|<frac|n-n<rprime|'>|2>*ln <frac|3|\<delta\>>>|)>\<le\>\<delta\><nbsp>.
    </equation*>

    Hence,

    <\align*>
      <tformat|<table|<row|<cell|<big|sum><rsub|t=1><rsup|n>\<ell\><rsub|I<rsub|t>,t>>|<cell|\<le\>n<rprime|'>+n*<space|0.17em>\<ell\><rsub|D><around|(|f<rsup|\<ast\>>|)>>>|<row|<cell|>|<cell|+<big|sum><rsub|t=n<rprime|'>+1><rsup|n><with|font-series|bold|1><rsub|f<rprime|'><around|(|x<rsub|t>|)>\<neq\>f<rsup|\<ast\>><around|(|x<rsub|t>|)>>+c<sqrt|2*n*<around*|(|d*ln <frac|e*n|d>+ln <frac|3|\<delta\>>|)>>>>>>
    </align*>

    with probability at least <math|<tfrac|2*\<delta\>|3>> with respect to both the random sample draw and VE's internal randomization.

    The term <math|<big|sum><rsub|t><with|font-series|bold|1><rsub|f<rprime|'><around|(|x<rsub|t>|)>\<neq\>f<rsup|\<ast\>><around|(|x<rsub|t>|)>>> quantifies the fact that the unique function <math|f<rprime|'>\<in\><cF><rprime|'>> that agrees with <math|f<rsup|\<ast\>>> on the first <math|n<rprime|'>> data points is generally different from <math|f<rsup|\<ast\>>> on the remaining <math|n-n<rprime|'>> points. Since each data point <math|<around|(|x<rsub|t>,\<ell\><rsub|t>|)>> is drawn i.i.d., the distribution of a sequence of <math|n> pairs remains the same if we randomly permute their positions after drawing them. Hence we can bound <math|<big|sum><rsub|t><with|font-series|bold|1><rsub|f<rprime|'><around|(|x<rsub|t>|)>\<neq\>f<rsup|\<ast\>><around|(|x<rsub|t>|)>>> in probability w.r.t. a random permutation <math|\<sigma\>> of <math|<around|{|1,\<ldots\>,n|}>>. Let <math|<norm|f-g>=<big|sum><rsub|t=1><rsup|n><with|font-series|bold|1><rsub|f<rprime|'><around|(|x<rsub|t>|)>\<neq\>f<rsup|\<ast\>><around|(|x<rsub|t>|)>>>. Then

    <\align*>
      <tformat|<table|<row|<cell|\<bbb-P\><rsub|\<sigma\>>>|<cell|<around*|(|<big|sum><rsub|t=n<rprime|'>+1><rsup|n><with|font-series|bold|1><rsub|f<rprime|'><around|(|x<rsub|\<sigma\><around|(|t|)>>|)>\<neq\>f<rsup|\<ast\>><around|(|x<rsub|\<sigma\><around|(|t|)>>|)>>\<gtr\>k|)>>>|<row|<cell|>|<cell|\<le\>\<bbb-P\><rsub|\<sigma\>><around*|(|\<exists\>f,g\<in\><cF>,<space|0.17em><norm|f-g>\<gtr\>k<space|0.17em>:<space|0.17em>f<around|(|x<rsub|\<sigma\><around|(|t|)>>|)>=g<around|(|x<rsub|\<sigma\><around|(|t|)>>|)>,<space|0.17em>t=1,\<ldots\>,n<rprime|'>|)>>>|<row|<cell|>|<cell|\<le\><around|\||<cF>|\|><rsup|2>*<around*|(|1-<frac|k|n>|)><rsup|n<rprime|'>>>>|<row|<cell|>|<cell|\<le\><around*|(|<frac|e*n|d>|)><rsup|2*d>*exp <around*|(|-<frac|k*n<rprime|'>|n>|)>>>|<row|<cell|>|<cell|\<le\><frac|\<delta\>|3>>>>>
    </align*>

    for

    <\equation*>
      k\<ge\><frac|n|n<rprime|'>>*<around*|(|2*d*ln <frac|e*n|d>+ln <frac|3|\<delta\>>|)><nbsp>.
    </equation*>

    Now, since we just proved that

    <\equation*>
      <big|sum><rsub|t=n<rprime|'>+1><rsup|n><with|font-series|bold|1><rsub|f<rprime|'><around|(|x<rsub|\<sigma\><around|(|t|)>>|)>\<neq\>f<rsup|\<ast\>><around|(|x<rsub|\<sigma\><around|(|t|)>>|)>>\<le\><frac|n|n<rprime|'>>*<around*|(|2*d*ln <frac|e*n|d>+ln <frac|3|\<delta\>>|)>
    </equation*>

    holds with probability at least <math|<tfrac|\<delta\>|3>> for any sample realization, it holds with the same probability for a random sample. Hence, by choosing <math|n<rprime|'>> as in the statement of the theorem and overapproximating, we get the desired result.
  </proof>

  <section|The multiclass case><label|s:multiclass>

  A different viewpoint on contextual bandits is provided by the so-called bandit multiclass problem. This is a bandit variant of the online protocol for multiclass classification, where the goal is to sequentially learn a mapping from the context space <math|<R><rsup|d>> to the label space <math|<around|{|1,\<ldots\>,K|}>>, with <math|K\<ge\>2>. In this protocol the learner keeps a classifier parameterized by a <math|K\<times\>d> matrix <math|W>. At each time step <math|t=1,2,\<ldots\>> the side information <math|x<rsub|t>\<in\><R><rsup|d>> is observed (following standard notations in online classification, here we use <math|x> instead of <math|s> to denote contexts), and the learner predicts the label <math|<yhat><rsub|t>> maximizing <math|<around*|(|W*x<rsub|t>|)><rsub|i>> over all labels <math|i=1,\<ldots\>,K>. In the standard online protocol, the learner observes the true label <math|y<rsub|t>> associated with <math|x<rsub|t>> after each prediction, and uses this information to adjust <math|W>. In the bandit version, the learner only observes <math|<with|font-series|bold|1><rsub|<yhat><rsub|t>\<neq\>y<rsub|t>>>; that is, whether the prediction at time <math|t> was correct or not.

  A simple but effective learning strategy for (non-bandit) online classification is the multiclass Perceptron algorithm. This algorithm updates <math|W> at time <math|t> using the rule <math|W\<leftarrow\>W+X<rsub|t>>, where <math|X<rsub|t>> is a <math|K\<times\>d> matrix with components <math|<around*|(|X<rsub|t>|)><rsub|i,j>=x<rsub|t,j>*<around*|(|<with|font-series|bold|1><rsub|y<rsub|t>=i>-<with|font-series|bold|1><rsub|<yhat><rsub|t>=i>|)>>. Therefore, the update rule can be rewritten as

  <\align*>
    <tformat|<table|<row|<cell|w<rsub|y<rsub|t>>>|<cell|\<leftarrow\>w<rsub|y<rsub|t>>+x<rsub|t>>>|<row|<cell|w<rsub|<yhat><rsub|t>>>|<cell|\<leftarrow\>w<rsub|<yhat><rsub|t>>-x<rsub|t>>>|<row|<cell|w<rsub|i>>|<cell|\<leftarrow\>w<rsub|i>*<space|2em><space|2em><text|for all <math|i\<neq\>y<rsub|t>> and >i\<neq\><yhat><rsub|t>>>>>
  </align*>

  where <math|w<rsub|i>> denotes the <math|i>-th row of matrix <math|W>. Note, in particular, that no update takes place (i.e., <math|X<rsub|t>> is the all zero matrix) when <math|<yhat><rsub|t>=y<rsub|t>>, which means that <math|y<rsub|t>> is predicted correctly.

  A straightforward generalization of the Perceptron analysis gives that, on any sequence of <math|<around|(|x<rsub|1>,y<rsub|1>|)>,<around|(|x<rsub|2>,y<rsub|2>|)>,\<ldots\>\<in\><R><rsup|d>\<times\><around|{|1,\<ldots\>,K|}>> such that <math|<norm|x<rsub|t>>=1>, the number of classification mistakes satisfies the following notion of regret,

  <\equation*>
    <big|sum><rsub|t=1><rsup|n><with|font-series|bold|1><rsub|<yhat><rsub|t>\<neq\>y<rsub|t>>\<le\>inf<rsub|U><around*|(|L<rsub|n><around|(|U|)>+2<norm|U><rsup|2>+<norm|U><sqrt|2*n*<wide|L|\<bar\>><rsub|n><around|(|U|)>>|)>
  </equation*>

  uniformly over <math|n\<ge\>1>, where the infimum is over all <math|K\<times\>d> matrices <math|U> and <math|<norm|<space|0.17em>\<cdot\><space|0.17em>>> denotes the Frobenius norm. Here <math|L<rsub|n><around|(|U|)>> denotes the cumulative <with|font-shape|slanted|hinge loss> of policy <math|U>,

  <\equation*>
    L<rsub|n><around|(|U|)>=<big|sum><rsub|t=1><rsup|n>\<ell\><rsub|t><around|(|U|)>=<big|sum><rsub|t=1><rsup|n><around*|[|1-<around*|(|U*x<rsub|t>|)><rsub|y<rsub|t>>+max<rsub|i\<neq\>y<rsub|t>><around*|(|U*x<rsub|t>|)><rsub|i>|]><rsub|+>
  </equation*>

  where <math|<around|[|<space|0.17em>\<cdummy\><space|0.17em>|]><rsub|+>=max <around|{|0,<space|0.17em>\<cdot\><space|0.17em>|}>> is the <with|font-shape|slanted|hinge> function. Finally, <math|<wide|L|\<bar\>><rsub|n><around|(|U|)>=<tfrac|1|n>L<rsub|n><around|(|U|)>> is the average hinge loss of <math|U>.

  Note that <math|\<ell\><rsub|t><around|(|U|)>=0> if and only if <math|<around*|(|U*x<rsub|t>|)><rsub|y<rsub|t>>\<ge\>1+max<rsub|i\<neq\>y<rsub|t>><around*|(|U*x<rsub|t>|)><rsub|i>>, which can only happen when <math|y<rsub|t>=<yhat><rsub|t>=<argmax><rsub|i><around*|(|U*x<rsub|t>|)><rsub|i>>. Moreover, <math|\<ell\><rsub|t><around|(|U|)>\<ge\>1> if and only if <math|<yhat><rsub|t>\<neq\>y<rsub|t>>. This means that <math|\<ell\><rsub|t>> is a convex upper bound on the mistake indicator function <math|<with|font-series|bold|1><rsub|<yhat><rsub|t>\<neq\>y<rsub|t>>> for the multiclass classifier represented by <math|U>.

  We now introduce a bandit variant of the multiclass Perceptron called Banditron.

  <\padded-center>
    <\bookbox>
      <with|font-shape|italic|Banditron>

      <vspace*|1fn><no-indent>Parameter: number <math|\<gamma\>\<in\><around*|(|0,<tfrac|1|2>|)>>.<next-line>Initialize: Set <math|W<rsub|1>> to the zero <math|K\<times\>d> matrix.

      <vspace*|0.5fn><no-indent>For each round <math|t=1,2,\<ldots\>,n>

      <\itemize>
        <item*|(1)>Observe <math|x<rsub|t>\<in\><R><rsup|d>>.

        <item*|(2)>Set <math|<dt><yhat><rsub|t>=<argmax><rsub|i=1,\<ldots\>,K><around*|(|W<rsub|t>*<space|0.17em>x<rsub|t>|)><rsub|i>>.

        <item*|(3)>Predict <math|Y<rsub|t>\<in\><around|{|1,\<ldots\>,K|}>> drawn from distribution <math|p<rsub|t>=<around*|(|p<rsub|1,t>,\<ldots\>,p<rsub|K,t>|)>> such that <math|p<rsub|i,t>=<around|(|1-\<gamma\>|)>*<with|font-series|bold|1><rsub|<yhat><rsub|t>=i>+<tfrac|\<gamma\>|K>>.

        <item*|(4)>Observe <math|<with|font-series|bold|1><rsub|Y<rsub|t>=y<rsub|t>>>.

        <item*|(5)>Update <math|W<rsub|t+1>=W<rsub|t>+<tX><rsub|t>> where

        <\equation*>
          <around|(|<tX><rsub|t>|)><rsub|i,j>=x<rsub|t,j>*<around*|(|<frac|<with|font-series|bold|1><rsub|Y<rsub|t>=y<rsub|t>>*<with|font-series|bold|1><rsub|Y<rsub|t>=i>|p<rsub|i,t>>-<with|font-series|bold|1><rsub|<yhat><rsub|t>=i>|)><nbsp>.
        </equation*>
      </itemize>
    </bookbox>
  </padded-center>

  The Banditron operates in the bandit variant of the online protocol for multiclass classification. As <math|X<rsub|t>> depends on the true label <math|y<rsub|t>>, which is only available when the classification is correct, the Banditron computes an estimate <math|<tX><rsub|t>> of <math|X<rsub|t>> via a randomized technique inspired by the nonstochastic multiarmed bandit problem. The label <math|<yhat><rsub|t>=<argmax><rsub|i><around*|(|W*<space|0.17em>x<rsub|t>|)><rsub|i>> is used to make the prediction at time <math|t> only with probability <math|1-\<gamma\>>, whereas with probability <math|\<gamma\>> a random label is predicted at each time <math|t>.

  We now analyze the expected number of prediction mistakes made by the Banditron algorithm on any sequence of examples <math|<around|(|x<rsub|t>,y<rsub|t>|)>>. Unlike the non-bandit case, where the number of mistakes <math|M<rsub|n>> after <math|n> steps of the multiclass Perceptron provides a “multiclass regret” bound <math|M<rsub|n>-L<rsub|n><around|(|U|)>=\<cal-O\><around*|(|<sqrt|n>|)>>, in the bandit case the regret achieved by the variant of the Perceptron is only bounded by <math|\<cal-O\><around*|(|n<rsup|2/3>|)>>.

  <\theorem>
    If the Banditron algorithm is run with parameter <math|\<gamma\>=<around|(|K/n|)><rsup|1/3>> on any sequence <math|<around|(|x<rsub|1>,y<rsub|1>|)>,\<ldots\>,<around|(|x<rsub|n>,y<rsub|n>|)>\<in\><R><rsup|d>\<times\><around|{|-1,+1|}>> of examples such that <math|n\<ge\>8*K> and <math|<norm|x<rsub|t>>=1>, then the number <math|M<rsub|n>> of prediction mistakes satisfies

    <\align*>
      <tformat|<table|<row|<cell|<E>*<space|0.17em>M<rsub|n>\<le\>inf<rsub|U>>|<cell|<around*|(|L<rsub|n><around|(|U|)>+<around*|(|1+<norm|U><sqrt|2*<wide|L|\<bar\>><rsub|n><around|(|U|)>>|)>*K<rsup|1/3>*n<rsup|2/3>|\<nobracket\>>>>|<row|<cell|>|<cell|<around*|\<nobracket\>|+2<norm|U><rsup|2>K<rsup|2/3>*n<rsup|1/3>+<sqrt|2><norm|U>K<rsup|1/6>*n<rsup|1/3>|)>>>>>
    </align*>

    where the infimum is over all <math|K\<times\>d> matrices <math|U> and <math|<wide|L|\<bar\>><rsub|n><around|(|U|)>=<tfrac|1|n>L<rsub|n><around|(|U|)>> is the average hinge loss of <math|U>.
  </theorem>

  <\proof>
    We need to bound <math|M=<big|sum><rsub|t><with|font-series|bold|1><rsub|Y<rsub|t>\<neq\>y<rsub|t>>>. Let <math|<E><rsub|t>> be the expectation conditioned on the first <math|t-1> predictions. We start by bounding the first and second moments of <math|<tX><rsub|t>>,

    <\align*>
      <tformat|<table|<row|<cell|<E><rsub|t><around*|[|<around|(|<tX><rsub|t>|)><rsub|i,j>|]>>|<cell|=x<rsub|t,j>*<big|sum><rsub|k=1><rsup|K>p<rsub|k,t>*<around*|(|<frac|<with|font-series|bold|1><rsub|k=y<rsub|t>>*<with|font-series|bold|1><rsub|k=i>|p<rsub|k,t>>-<with|font-series|bold|1><rsub|<yhat><rsub|t>=i>|)>>>|<row|<cell|>|<cell|=x<rsub|t,j>*<around*|(|<with|font-series|bold|1><rsub|y<rsub|t>=i>-<with|font-series|bold|1><rsub|<yhat><rsub|t>=i>|)>=<around|(|X<rsub|t>|)><rsub|i,j><nbsp>.>>>>
    </align*>

    For the second moment, note that

    <\align*>
      <tformat|<table|<row|<cell|<around*|\||<tX><rsub|t>|\|><rsup|2>>|<cell|=<big|sum><rsub|i=1><rsup|K><big|sum><rsub|j=1><rsup|d>x<rsub|t,j><rsup|2>*<around*|(|<frac|<with|font-series|bold|1><rsub|Y<rsub|t>=y<rsub|t>>*<with|font-series|bold|1><rsub|Y<rsub|t>=i>|p<rsub|i,t>>-<with|font-series|bold|1><rsub|<yhat><rsub|t>=i>|)><rsup|2>>>|<row|<cell|>|<cell|=<big|sum><rsub|i=1><rsup|K><around*|(|<frac|<with|font-series|bold|1><rsub|Y<rsub|t>=y<rsub|t>>*<with|font-series|bold|1><rsub|Y<rsub|t>=i>|p<rsub|i,t>>-<with|font-series|bold|1><rsub|<yhat><rsub|t>=i>|)><rsup|2>>>>>
    </align*>

    where

    <\equation*>
      <big|sum><rsub|i=1><rsup|K><around*|(|<frac|<with|font-series|bold|1><rsub|Y<rsub|t>=y<rsub|t>>*<with|font-series|bold|1><rsub|Y<rsub|t>=i>|p<rsub|i,t>>-<with|font-series|bold|1><rsub|<yhat><rsub|t>=i>|)><rsup|2>=<around*|{|<tabular*|<tformat|<cwith|1|-1|1|1|cell-halign|c>|<cwith|1|-1|1|1|cell-lborder|0ln>|<cwith|1|-1|2|2|cell-halign|l>|<cwith|1|-1|2|2|cell-rborder|0ln>|<cwith|1|1|1|-1|cell-valign|top>|<cwith|1|1|1|-1|cell-vmode|exact>|<cwith|1|1|1|-1|cell-height|<plus|1fn|2mm>>|<cwith|2|2|1|-1|cell-valign|top>|<cwith|2|2|1|-1|cell-vmode|exact>|<cwith|2|2|1|-1|cell-height|<plus|1fn|2mm>>|<table|<row|<cell|<dt>*<around*|(|<frac|1|p<rsub|y<rsub|t>,t><rsup|2>>+1|)>>|<cell|<text|if >Y<rsub|t>=y<rsub|t>\<neq\><yhat><rsub|t>>>|<row|<cell|<dt>*<around*|(|<frac|1|p<rsub|y<rsub|t>,t>>-1|)><rsup|2>>|<cell|<text|if >Y<rsub|t>=y<rsub|t>=<yhat><rsub|t>>>|<row|<cell|1>|<cell|<text|otherwise.>>>>>>|\<nobracket\>>
    </equation*>

    Therefore, if <math|y<rsub|t>\<neq\><yhat><rsub|t>>,

    <\align*>
      <tformat|<table|<row|<cell|<E><rsub|t><around*|\||<tX><rsub|t>|\|><rsup|2>>|<cell|=p<rsub|y<rsub|t>,t>*<around*|(|<frac|1|p<rsub|y<rsub|t>,t><rsup|2>>+1|)>+<around*|(|1-p<rsub|y<rsub|t>,t>|)>>>|<row|<cell|>|<cell|=1+<frac|1|p<rsub|y,t>>=1+<frac|K|\<gamma\>>\<le\><frac|2*K|\<gamma\>>>>>>
    </align*>

    because <math|p<rsub|i,t>=\<gamma\>> when <math|y<rsub|t>\<neq\><yhat><rsub|t>>. Otherwise, if <math|y<rsub|t>=<yhat><rsub|t>>

    <\align*>
      <tformat|<table|<row|<cell|<E><rsub|t><around*|\||<tX><rsub|t>|\|><rsup|2>>|<cell|=p<rsub|y<rsub|t>,t>*<around*|(|<frac|1|p<rsub|y<rsub|t>,t>>-1|)><rsup|2>+<around*|(|1-p<rsub|y<rsub|t>,t>|)>>>|<row|<cell|>|<cell|=<frac|1|p<rsub|y<rsub|t>,t>>-1=<frac|1|1-\<gamma\>>-1\<le\>2*\<gamma\>>>>>
    </align*>

    because <math|p<rsub|i,t>=1-\<gamma\>> when <math|y<rsub|t>=<yhat><rsub|t>> and <math|\<gamma\>\<le\><tfrac|1|2>>. Hence,

    <\equation*>
      <E><rsub|t><around*|\||<tX><rsub|t>|\|><rsup|2>\<le\>2*<around*|(|<frac|K|\<gamma\>>*<with|font-series|bold|1><rsub|y<rsub|t>\<neq\><yhat><rsub|t>>+\<gamma\>*<with|font-series|bold|1><rsub|y<rsub|t>=<yhat><rsub|t>>|)><nbsp>.
    </equation*>

    We are now ready to prove a bound on the expected number of mistakes. Following the standard analysis for the Perceptron algorithm, we derive upper and lower bounds on the expectation of the quantity <math|<inner|U|W<rsub|n+1>>=<math-up|tr><around*|(|U*<space|0.17em>W<rsub|n+1><rsup|\<top\>>|)>>, for an arbitrary <math|K\<times\>d> matrix <math|U>. First, using Cauchy-Schwartz and Jensen inequalities we obtain

    <\align*>
      <tformat|<table|<row|<cell|<E><inner|U|W<rsub|n+1>>\<le\><sqrt|<norm|U><rsup|2><E><norm|W<rsub|n+1>><rsup|2>><nbsp>.>>>>
    </align*>

    Now

    <\align*>
      <tformat|<table|<row|<cell|<E><rsub|n><around*|[|<norm|W<rsub|n+1>><rsup|2>|]>>|<cell|=<E><rsub|n>*<around*|[|<norm|W<rsub|n>><rsup|2>+2<inner|W<rsub|n>|<tX><rsub|n>>+<around*|\||<tX><rsub|n>|\|><rsup|2>|]>>>|<row|<cell|>|<cell|\<le\><norm|W<rsub|n>><rsup|2>+<E><rsub|n><around*|\||<tX><rsub|n>|\|><rsup|2><nbsp>.>>>>
    </align*>

    In order to see why the inequality holds, note that

    <\align*>
      <tformat|<table|<row|<cell|<E><rsub|n><inner|W<rsub|n>|<tX><rsub|n>>=<inner|W<rsub|n>|X<rsub|n>>>|<cell|=<big|sum><rsub|i=1><rsup|K><around*|(|W<rsub|n>*<space|0.17em>x<rsub|t>|)><rsub|i>*<around*|(|<with|font-series|bold|1><rsub|y<rsub|n>=i>-<with|font-series|bold|1><rsub|<yhat><rsub|n>=i>|)>>>|<row|<cell|>|<cell|=<around*|(|W<rsub|n>*<space|0.17em>x<rsub|n>|)><rsub|y<rsub|n>>-<around*|(|W<rsub|n>*<space|0.17em>x<rsub|n>|)><rsub|<yhat><rsub|n>>\<le\>0>>>>
    </align*>

    because <math|<yhat><rsub|n>=<argmax><rsub|i=1,\<ldots\>,K><around*|(|W<rsub|n>*<space|0.17em>x<rsub|n>|)><rsub|i>> by definition. Therefore, since <math|W<rsub|1>> is the zero matrix,

    <\align*>
      <tformat|<table|<row|<cell|<E><norm|W<rsub|n+1>><rsup|2>>|<cell|\<le\><big|sum><rsub|t=1><rsup|n><E><around*|\||<tX><rsub|n>|\|><rsup|2>>>|<row|<cell|>|<cell|\<le\>2*<big|sum><rsub|t=1><rsup|n><around*|(|<frac|K|\<gamma\>>\<bbb-P\><around*|(|y<rsub|t>\<neq\><yhat><rsub|t>|)>+\<gamma\><space|0.17em>\<bbb-P\><around*|(|y<rsub|t>=<yhat><rsub|t>|)>|)>>>|<row|<cell|>|<cell|\<le\><frac|2*K|\<gamma\>>*<big|sum><rsub|t=1><rsup|n>\<bbb-P\><around*|(|y<rsub|t>\<neq\><yhat><rsub|t>|)>+2*\<gamma\>*<space|0.17em>n<nbsp>.>>>>
    </align*>

    Thus we have

    <\equation*>
      <E><inner|U|W<rsub|n+1>>\<le\><norm|U><sqrt|<frac|2*K|\<gamma\>>*<big|sum><rsub|t=1><rsup|n>\<bbb-P\><around*|(|y<rsub|t>\<neq\><yhat><rsub|t>|)>+2*\<gamma\>*<space|0.17em>n><nbsp>.
    </equation*>

    Now we lower bound <math|<inner|U|W<rsub|n+1>>> as follows,

    <\align*>
      <tformat|<table|<row|<cell|<E><rsub|n><inner|U|W<rsub|n+1>>>|<cell|=<E><rsub|n><inner|U|W<rsub|n>+<tX><rsub|n>>>>|<row|<cell|>|<cell|=<inner|U|W<rsub|n>>+<inner|U|X<rsub|n>>>>|<row|<cell|>|<cell|\<ge\><inner|U|W<rsub|n>>+<with|font-series|bold|1><rsub|y<rsub|t>\<neq\><yhat><rsub|t>>-\<ell\><rsub|t><around|(|U|)>>>>>
    </align*>

    because, by definition of <math|\<ell\><rsub|t>>,

    <\align*>
      <tformat|<table|<row|<cell|\<ell\><rsub|t><around|(|U|)>>|<cell|=<around*|[|1-<around*|(|U*x<rsub|t>|)><rsub|y<rsub|t>>+max<rsub|i\<neq\>y<rsub|t>><around*|(|U*x<rsub|t>|)><rsub|i>|]><rsub|+>>>|<row|<cell|>|<cell|\<ge\>1-<around*|(|U*x<rsub|t>|)><rsub|y<rsub|t>>+<around*|(|U*x<rsub|t>|)><rsub|<yhat><rsub|t>>>>|<row|<cell|>|<cell|\<ge\><with|font-series|bold|1><rsub|y<rsub|t>\<neq\><yhat><rsub|t>>-<around*|(|U*x<rsub|t>|)><rsub|y<rsub|t>>+<around*|(|U*x<rsub|t>|)><rsub|<yhat><rsub|t>>>>|<row|<cell|>|<cell|=<with|font-series|bold|1><rsub|y<rsub|t>\<neq\><yhat><rsub|t>>-<inner|U|X<rsub|t>><nbsp>.>>>>
    </align*>

    Therefore, using again the fact that <math|W<rsub|1>> is the zero matrix,

    <\equation*>
      <E><inner|U|W<rsub|n+1>>\<ge\><big|sum><rsub|t=1><rsup|n>\<bbb-P\><around*|(|y<rsub|t>\<neq\><yhat><rsub|t>|)>-<big|sum><rsub|t=1><rsup|n>\<ell\><rsub|t><around|(|U|)><nbsp>.
    </equation*>

    Combining the upper and lower bounds on <math|<inner|U|W<rsub|n+1>>> we get

    <\equation*>
      <big|sum><rsub|t=1><rsup|n>\<bbb-P\><around*|(|y<rsub|t>\<neq\><yhat><rsub|t>|)>-L<rsub|n><around|(|U|)>\<le\><norm|U><sqrt|<frac|2*K|\<gamma\>>*<big|sum><rsub|t=1><rsup|n>\<bbb-P\><around*|(|y<rsub|t>\<neq\><yhat><rsub|t>|)>+2*\<gamma\>*<space|0.17em>n><nbsp>.
    </equation*>

    Solving for <math|<big|sum><rsub|t>\<bbb-P\><around*|(|y<rsub|t>\<neq\><yhat><rsub|t>|)>> and overapproximating yields

    <\align*>
      <tformat|<table|<row|<cell|<big|sum><rsub|t=1><rsup|n>\<bbb-P\><around*|(|y<rsub|t>\<neq\><yhat><rsub|t>|)>>|<cell|\<le\>L<rsub|n><around|(|U|)>+<frac|2*K|\<gamma\>><norm|U><rsup|2>+<norm|U><sqrt|<frac|2*K|\<gamma\>>*L<rsub|n><around|(|U|)>+2*\<gamma\>*<space|0.17em>n>>>|<row|<cell|>|<cell|=L<rsub|n><around|(|U|)>+<frac|2*K|\<gamma\>><norm|U><rsup|2>+<norm|U><sqrt|<around*|(|<frac|2*K|\<gamma\>>*<space|0.17em><wide|L|\<bar\>><rsub|n><around|(|U|)>+2*\<gamma\>|)>*n><nbsp>.>>>>
    </align*>

    Now, since <math|\<bbb-P\><around*|(|y<rsub|t>\<neq\>Y<rsub|t>|)>=<around|(|1-\<gamma\>|)>\<bbb-P\><around*|(|y<rsub|t>\<neq\><yhat><rsub|t>|)>+\<gamma\>>,

    <\equation*>
      <big|sum><rsub|t=1><rsup|n>\<bbb-P\><around*|(|y<rsub|t>\<neq\>Y<rsub|t>|)>\<le\>L<rsub|n><around|(|U|)>+\<gamma\>*<space|0.17em>n+<frac|2*K|\<gamma\>><norm|U><rsup|2>+<norm|U><sqrt|<around*|(|<frac|2*K|\<gamma\>>*<space|0.17em><wide|L|\<bar\>><rsub|n><around|(|U|)>+2*\<gamma\>|)>*n><nbsp>.
    </equation*>

    Choosing <math|\<gamma\>> as in the statement of the theorem yields the desired result. Note that <math|\<gamma\>\<le\><tfrac|1|2>> because we assume <math|n\<ge\>8*K>.
  </proof>

  <section|Bibliographic remarks><label|sec:contextual>

  A model of contextual stochastic bandits close to those studied here is introduced by<nbsp><cite|wang2005bandit>. The context is provided by a i.i.d. sequence of random variables and the rewards for each arm depend on the context through an unknown parametric model beloging to a known class. This result has been generalized to the non i.i.d. case by<nbsp><cite|wang2005arbitrary>, to the multivariate linear case by<nbsp><cite|RT10>, and to the multivariate and nonparametric case by<nbsp><cite|PR11>. In<nbsp><cite|slivkins2009contextual>, contexts and rewards belong to arbitrary metric spaces, and the unknown function mapping contexts to rewards satisfies a Lipschitz assumption (remarkably, the same algorithm also applies to slowly changing expected rewards and sleeping bandit settings). The case of deterministic covariates (fixed design), finitely many arms, and a linear stochastic dependence between covariates and rewards has been studied in<nbsp><cite|Aue02|chu2011contextual> —see also<nbsp><cite|abe1999associative>. The work of<nbsp><cite|filippi2010parametric> extends the analysis of fixed design by assuming a generalized linear model to capture the dependence of rewards on covariates.

  The simple contextual model analyzed in Section<nbsp><reference|s:context-intro>, as well as its extension described in Subsection<nbsp><reference|ss:best-context>, are due to<nbsp><cite|maillard2011adaptive>. The Exp4 algorithm for the adversarial case was introduced in<nbsp><cite|ACFS03>. Subsequent improvements were proposed in the two papers<nbsp><cite|beygelzimer2011contextual> (Exp4.P with high-probability bounds) and<nbsp><cite|mcmahan2009tighter> (exploitation of correlations in expert advice). The VE algorithm and its analysis in Section<nbsp><reference|s:context-stochastic> are also taken from<nbsp><cite|beygelzimer2011contextual>.

  A stochastic model for contextual bandits with finitely many arms and finitely many states has been investigated by<nbsp><cite|NIPS2011_0948> using new sophisticated tools of PAC-Bayesian analysis.

  The general stochastic model of Section<nbsp><reference|s:context-stochastic> for contextual bandits with finitely many arms is due to<nbsp><cite|langford2007epoch>. An efficient algorithm for this model has been recently proposed in<nbsp><cite|dudik2011efficient>.

  The bandit multiclass model of Section<nbsp><reference|s:multiclass> is due to<nbsp><cite|langford2007epoch>. The Banditron algorithm and its analysis are from<nbsp><cite|kakade2008efficient>. See also<nbsp><cite|crammer2011multiclass> and<nbsp><cite|hazan2011newtron> for recent variants and improvements.

  <chapter|Linear bandits><label|linear>

  We now consider the important generalization of adversarial bandits where the set of arms <math|<around|{|1,\<ldots\>,K|}>> is replaced by a compact set <math|<cK>\<subset\><R><rsup|d>>. In this case, the loss at each step is some function defined on <math|<cK>>, and the task is to pick an arm as close as possible to the minimum of the loss function at hand. In order to allow sublinear regret bounds, even in the presence of infinitely many arms, we must assume some structure for the loss function. In particular, in this chapter we assume that the loss at each time step is a linear function of arms. Linearity is a standard assumption (think, for instance, of linear regression) and naturally occurs in many bandit applications. The source routing problem mentioned in the introduction is a good example, since the cost of choosing a routing path is linear in the cost of the edges that make up the path. This defines the so-called online linear optimization setting: at each time step <math|t=1,2,\<ldots\>> the forecaster chooses <math|x<rsub|t>\<in\><cK>> while, simultaneously, the adversary chooses <math|\<ell\><rsub|t>> from some fixed and known subset <math|<cL>> of <math|<R><rsup|d>>. The loss incurred by the forecaster is the inner product <math|x<rsub|t><rsup|\<top\>>*\<ell\><rsub|t>>. In this chapter we focus on the analysis of the pseudo-regret

  <\equation*>
    <oR><rsub|n>=<E>*<big|sum><rsub|t=1><rsup|n>x<rsub|t><rsup|\<top\>>*\<ell\><rsub|t>-min<rsub|x\<in\><cK>> <E>*<big|sum><rsub|t=1><rsup|n>x<rsup|\<top\>>*\<ell\><rsub|t>
  </equation*>

  where the expectation is with respect to the forecaster's internal randomization. The adversarial bandit setting of Chapter<nbsp><reference|adversarial> is obtained by choosing <math|<cK>=<around|{|e<rsub|1>,\<ldots\>,e<rsub|d>|}>>, where <math|e<rsub|1>,\<ldots\>,e<rsub|d>> is the canonical basis of <math|<R><rsup|d>>, and <math|<cL>=<around|[|0,1|]><rsup|d>>. Similarly to Chapter <reference|adversarial>, we focus on the bandit feedback where the forecaster only observes the incurred loss <math|x<rsub|t><rsup|\<top\>>*\<ell\><rsub|t>> at the end round <math|t>. However, we also discuss the full information setting, where the complete loss vector <math|\<ell\><rsub|t>> is revealed at the end of each round <math|t>, as well as other feedback models.

  It is important to note that, without any loss of generality (as far as regret bounds are concerned), one can always assume that <math|<cK>> has size <math|<scO><around|(|n<rsup|d>|)>>. Indeed, since <math|<cK>> is a compact set and the loss is linear (and therefore Lipschitz), one can cover <math|<cK>> with <math|<scO><around|(|n<rsup|d>|)>> points such that one incurs a vanishing extra cumulative regret by playing on the discretization rather than on the original set. Of course, the downside of this approach is that a strategy resulting from such a cover is often not computationally efficient. On the other hand, this assumption allows us to apply ideas from Chapter<nbsp><reference|adversarial> to this more general setting. We analyze the pseudo-regret for finite classes in Section <reference|sec:Exp2>. Without loss of generality, it is also possible to assume that <math|<cK>> is a convex set. Indeed, the pseudo-regret is the same if one plays <math|x<rsub|t>>, or if one plays a point at random in <math|<cK>> such that the expectation of the played point is <math|x<rsub|t>>. This remark is critical, and allows us to develop a powerful technology known as the Mirror Descent algorithm. We describe this approach in Section <reference|sec:OMD>, and explore it further in subsequent sections.

  <section|Exp2 (Expanded Exp) with John's exploration><label|sec:Exp2>

  In this section we work under the <with|font-shape|italic|bounded scalar loss> assumption. That is, we assume that <math|<cK>> and <math|<cL>> are such that <math|<around|\||x<rsup|\<top\>>*\<ell\>|\|>\<leq\>1> for any <math|<around|(|x,\<ell\>|)>\<in\><cK>\<times\><cL>>. Moreover, we restrict our attention to finite sets <math|<cK>>, with <math|<around|\||<cK>|\|>=N>. Without loss of generality we assume that <math|<cK>> spans <math|<R><rsup|d>>. If it is not the case, then one can rewrite the elements of <math|<cK>> in some lower dimensional vector space, and work there. Note that a trivial application of Exp3 to the set <math|<cK>> of arms gives a bound that scales as <math|<sqrt|n*N*ln N>>. If <math|<cK>> is a discretized set (in the sense described earlier), then <math|N> is exponential in <math|d>. We show here that, by appropriately modifying Exp3, one can obtain a polynomial regret of order <math|<sqrt|n*d*ln N>>.

  To describe the strategy, we first need a useful result from convex geometry: John's theorem. This result concerns the ellipsoid <math|<cE>> of minimal volume enclosing a given convex set <math|<cK>> (which we call the John's ellipsoid of <math|<cK>>). Basically, the theorem states that <math|<cE>> has many contact points with <math|<cK>>, and these contact points are “nicely” distributed, in the sense that they almost form an orthonormal basis —see <cite|Bal97> for a proof.

  <\theorem>
    [John's theorem]<label|th:john>Let <math|<cK>\<subset\><R><rsup|d>> be a convex set. If the ellipsoid <math|<cE>> of minimal volume enclosing <math|<cK>> is the unit ball in some norm derived from a scalar product <math|<around|\<langle\>|\<cdummy\>,\<cdummy\>|\<rangle\>>>, then there exist <math|M\<leq\><tfrac|1|2>d*<around|(|d+1|)>+1> contact points <math|u<rsub|1>,\<ldots\>,u<rsub|M>> between <math|<cE>> and <math|<cK>>, and a probability distribution <math|<around|(|\<mu\><rsub|1>,\<ldots\>,\<mu\><rsub|M>|)>> over these contact points, such that

    <\equation*>
      x=d*<big|sum><rsub|i=1><rsup|M>\<mu\><rsub|i>*<around|\<langle\>|x,u<rsub|i>|\<rangle\>>*u<rsub|i><space|2em>\<forall\>x\<in\><R><rsup|d>.
    </equation*>
  </theorem>

  In fact John's theorem is a <with|font-shape|italic|if and only if>, but here we only need the direction stated in the theorem. We are now in position to describe the strategy. Let <math|<conv><around|(|S|)>> be the convex hull of a set <math|S\<in\><R><rsup|d>>. First, we perform a preprocessing step in which the set <math|<cK>> is rewritten so that John's ellipsoid of <math|<conv><around|(|<cK>|)>> is the unit ball for some inner product <math|<around|\<langle\>|\<cdummy\>,\<cdummy\>|\<rangle\>>>. The loss of playing <math|x\<in\><cK>> against <math|\<ell\>\<in\><cL>> is then given by <math|<around|\<langle\>|x,\<ell\>|\<rangle\>>>. See <cite|BCK12> for the details of this transformation. Let <math|u<rsub|1>,\<ldots\>,u<rsub|M>\<in\><cK>> and <math|<around|(|\<mu\><rsub|1>,\<ldots\>,\<mu\><rsub|M>|)>> satisfy Theorem <reference|th:john> for the convex set <math|<conv><around|(|<cK>|)>>.

  Recall from Chapter <reference|adversarial> that the key idea to play against an adversary is to select <math|x<rsub|t>> at random from some probability distribution <math|p<rsub|t>> over <math|<cK>>. We first describe how to build an unbiased estimate of <math|\<ell\><rsub|t>>, given such a point <math|x<rsub|t>> played at random from <math|p<rsub|t>> (such that <math|p<rsub|t><around|(|x|)>\<gtr\>0> for any <math|x\<in\><cK>>). Recall that the outer product <math|x\<otimes\>x> is defined as the linear mapping from <math|<R><rsup|d>> to <math|<R><rsup|d>> such that <math|x\<otimes\>x<space|0.17em><around|(|y|)>=<around|\<langle\>|x,y|\<rangle\>>*<space|0.17em>x>. Note that one can also view <math|x\<otimes\>x> as a <math|d\<times\>d> matrix, so that the evaluation of <math|x\<otimes\>x> is equivalent to a multiplication by the corresponding matrix. Now let

  <\equation*>
    P<rsub|t>=<big|sum><rsub|x\<in\><cK>>p<rsub|t><around|(|x|)>*<space|0.17em>x\<otimes\>x<nbsp>.
  </equation*>

  Note that this matrix is invertible, since <math|<cK>> is full rank and <math|p<rsub|t><around|(|x|)>\<gtr\>0> for all <math|x\<in\><cK>>. The estimate for <math|\<ell\><rsub|t>> is given by <math|<wide|\<ell\>|~><rsub|t>=P<rsub|t><rsup|-1>*<around*|(|x<rsub|t>\<otimes\>x<rsub|t>|)>*\<ell\><rsub|t>>. Note that this is a valid estimate since <math|<around*|(|x<rsub|t>\<otimes\>x<rsub|t>|)>*\<ell\><rsub|t>=<around|\<langle\>|x<rsub|t>,\<ell\><rsub|t>|\<rangle\>>*x<rsub|t>> and <math|P<rsub|t><rsup|-1>> are observed quantities. Also, it is clearly an unbiased estimate.

  Now the Exp2 algorithm with John's exploration corresponds to playing according to the following probability distribution

  <\equation>
    <label|eq:exp2def>p<rsub|t><around|(|x|)>=<around|(|1-\<gamma\>|)>*<frac|exp <around*|(|-\<eta\>*<big|sum><rsub|s=1><rsup|t-1><around|\<langle\>|x,<wide|\<ell\>|~><rsub|t>|\<rangle\>>|)>|<big|sum><rsub|y\<in\><cK>>exp <around*|(|-\<eta\>*<big|sum><rsub|s=1><rsup|t-1><around|\<langle\>|y,<wide|\<ell\>|~><rsub|t>|\<rangle\>>|)>>+\<gamma\>*<big|sum><rsub|i=1><rsup|M>\<mu\><rsub|i>*<space|0.17em><with|font-series|bold|1><rsub|x=u<rsub|i>>
  </equation>

  where <math|\<eta\>,\<gamma\>\<gtr\>0> are input parameters. Note that this corresponds to a variant of Exp3 using <math|<around|\<langle\>|x,<wide|\<ell\>|~><rsub|t>|\<rangle\>>> as loss estimate for <math|x\<in\><cK>>, and an exploration distribution supported by the contact points.

  <\theorem>
    [Pseudo-regret of Exp2 with John's exploration]<label|th:exp2john>For any <math|\<eta\>,\<gamma\>\<gtr\>0> such that <math|\<eta\>*d\<le\>\<gamma\>>, Exp2 with John's exploration satisfies

    <\equation*>
      <oR><rsub|n>\<leq\>2*\<gamma\>*n+<frac|ln N|\<eta\>>+\<eta\>*n*d<nbsp>.
    </equation*>

    In particular, with <math|\<eta\>=<sqrt|<frac|ln N|3*n*d>>> and <math|\<gamma\>=\<eta\>*d>,

    <\equation*>
      <oR><rsub|n>\<leq\>2*<sqrt|3*n*d*ln N><nbsp>.
    </equation*>
  </theorem>

  <\proof>
    Since <math|<cK>> is finite, we can easily adapt the analysis of Exp3 in Theorem<nbsp><reference|th:Exp3> to take into account the exploration term. This gives

    <\equation*>
      <oR><rsub|n>\<leq\>2*\<gamma\>*n+<frac|ln N|\<eta\>>+\<eta\>*<space|0.17em><E>*<big|sum><rsub|t=1><rsup|n><big|sum><rsub|x\<in\><cK>>p<rsub|t><around|(|x|)><around|\<langle\>|x,<wide|\<ell\>|~><rsub|t>|\<rangle\>><rsup|2>
    </equation*>

    whenever <math|\<eta\>*<space|0.17em><around|\<langle\>|x,<wide|\<ell\>|~><rsub|t>|\<rangle\>>\<leq\>1> for all <math|x\<in\><cK>>. We now bound the last term in the right-hand side of the above inequality. Using the definition of the estimated loss <math|<wide|\<ell\>|~><rsub|t>=P<rsub|t><rsup|-1>*<around*|(|x<rsub|t>\<otimes\>x<rsub|t>|)>*\<ell\><rsub|t>>, we can write

    <\align*>
      <tformat|<table|<row|<cell|<big|sum><rsub|x\<in\><cK>>p<rsub|t><around|(|x|)><around|\<langle\>|x,<wide|\<ell\>|~><rsub|t>|\<rangle\>><rsup|2>>|<cell|=<big|sum><rsub|x\<in\><cK>>p<rsub|t><around|(|x|)><around|\<langle\>|<wide|\<ell\>|~><rsub|t>,<around|(|x\<otimes\>x|)>*<space|0.17em><wide|\<ell\>|~><rsub|t>|\<rangle\>>>>|<row|<cell|>|<cell|=<around|\<langle\>|<wide|\<ell\>|~><rsub|t>,P<rsub|t>*<space|0.17em><wide|\<ell\>|~><rsub|t>|\<rangle\>>>>|<row|<cell|>|<cell|=<around|\<langle\>|x<rsub|t>,\<ell\><rsub|t>|\<rangle\>><rsup|2><around|\<langle\>|P<rsub|t><rsup|-1>*x<rsub|t>,P<rsub|t>*<space|0.17em>P<rsub|t><rsup|-1>*x<rsub|t>|\<rangle\>>>>|<row|<cell|>|<cell|\<le\><around|\<langle\>|P<rsub|t><rsup|-1>*x<rsub|t>,x<rsub|t>|\<rangle\>><nbsp>.>>>>
    </align*>

    Now we use a spectral decomposition of <math|P<rsub|t>> in an orthonormal basis for <math|<around|\<langle\>|\<cdummy\>,\<cdummy\>|\<rangle\>>> and write <math|P<rsub|t>=<big|sum><rsub|i=1><rsup|d>\<lambda\><rsub|i>*v<rsub|i>\<otimes\>v<rsub|i>>. In particular, we have <math|P<rsub|t><rsup|-1>=<big|sum><rsub|i=1><rsup|d><frac|1|\<lambda\><rsub|i>>*v<rsub|i>\<otimes\>v<rsub|i>> and thus

    <\align*>
      <tformat|<table|<row|<cell|<E><around|\<langle\>|P<rsub|t><rsup|-1>*x<rsub|t>,x<rsub|t>|\<rangle\>>>|<cell|=<big|sum><rsub|i=1><rsup|d><frac|1|\<lambda\><rsub|i>>*<E><around|\<langle\>|<around|(|v<rsub|i>\<otimes\>v<rsub|i>|)>*<space|0.17em>x<rsub|t>,x<rsub|t>|\<rangle\>>>>|<row|<cell|>|<cell|=<big|sum><rsub|i=1><rsup|d><frac|1|\<lambda\><rsub|i>>*<E><around|\<langle\>|<around|(|x<rsub|t>\<otimes\>x<rsub|t>|)>*<space|0.17em>v<rsub|i>,v<rsub|i>|\<rangle\>>>>|<row|<cell|>|<cell|=<big|sum><rsub|i=1><rsup|d><frac|1|\<lambda\><rsub|i>>*<around|\<langle\>|P<rsub|t>*<space|0.17em>v<rsub|i>,v<rsub|i>|\<rangle\>>>>|<row|<cell|>|<cell|=<big|sum><rsub|i=1><rsup|d><frac|1|\<lambda\><rsub|i>>*<around|\<langle\>|\<lambda\><rsub|i>*v<rsub|i>,v<rsub|i>|\<rangle\>>=d.>>>>
    </align*>

    Finally, to show <math|\<eta\>*<space|0.17em><around|\<langle\>|x,<wide|\<ell\>|~><rsub|t>|\<rangle\>>\<le\>1> observe that

    <\equation*>
      <around|\<langle\>|x,<wide|\<ell\>|~><rsub|t>|\<rangle\>>=<around|\<langle\>|x<rsub|t>,\<ell\><rsub|t>|\<rangle\>><around|\<langle\>|x,P<rsub|t><rsup|-1>*x<rsub|t>|\<rangle\>>\<leq\><around|\<langle\>|x,P<rsub|t><rsup|-1>*x<rsub|t>|\<rangle\>>\<leq\><frac|1|min<rsub|1\<leq\>i\<leq\>d> \<lambda\><rsub|i>>,
    </equation*>

    where the last inequality follows from the fact that <math|<around|\<langle\>|x,x|\<rangle\>>\<leq\>1> for any <math|x\<in\><cK>>, since <math|<cK>> is included in the unit ball. To conclude the proof, we need to lower bound the smallest eigenvalue of <math|P<rsub|t>>. Using Theorem<nbsp><reference|th:john>, one can see that <math|P<rsub|t>\<succeq\><frac|\<gamma\>|d>*I<rsub|d>>, and thus <math|\<lambda\><rsub|i>\<geq\><frac|\<gamma\>|d>>. Since <math|\<eta\>*d\<le\>\<gamma\>>, the proof is concluded.
  </proof>

  <section|Online Mirror Descent (OMD)><label|sec:OMD>

  We now introduce the Online Mirror Descent (OMD) algorithm, a powerful generalization of gradient descent for sequential decision problems. We start by describing OMD for convex losses in the full information setting. That is, <math|<cL>> is a set of convex functions, and at the end of round <math|t> the forecaster observes <math|\<ell\><rsub|t>\<in\><cL>> rather than only <math|\<ell\><rsub|t><around|(|x<rsub|t>|)>>.

  The rest of this chapter is organized as follows. Next, we briefly recall a few key concepts from convex analysis. Then we describe the OMD strategy and prove a general regret bound. In Section <reference|sec:OSMD> we introduce Online Stochastic Mirror Descent (OMSD), which is a variant of OMD based on a stochastic estimate of the gradient. We apply this strategy to linear losses in two different bandit settings. Finally, in Section<nbsp><reference|sec:ball> we show how OMSD obtains improved bounds in certain special cases. The case of convex losses with bandit feedback is treated in Chapter <reference|nonlinear>.

  We introduce the following definitions.

  <\definition>
    Let <math|<cX>\<subseteq\><R><rsup|d>>. A function <math|f:<cX>\<to\><R>> is subdifferentiable if for all <math|x\<in\><cX>> there exists <math|g\<in\><R><rsup|d>> such that

    <\equation*>
      f<around|(|x|)>-f<around|(|y|)>\<leq\>g<rsup|\<top\>>*<around|(|x-y|)><space|2em>\<forall\>y\<in\><cX><nbsp>.
    </equation*>

    Such a <math|g> is called a subgradient of <math|f> at <math|x>.
  </definition>

  Abusing notation, we use <math|\<nabla\>*f<around|(|x|)>> to denote both the gradient of <math|f> at <math|x> when <math|f> is differentiable, and any subgradient of <math|f> at <math|x> when <math|f> is subdifferentiable (a sufficient condition for subdifferentiability of <math|f> is that <math|f> is convex and <math|<cX>> is open).

  <\definition>
    Let <math|f:<cX>\<rightarrow\><R>> be a convex function defined on a convex set <math|<cX>\<subseteq\><R><rsup|d>>. The Legendre-Fenchel transform of <math|f> is defined by:

    <\equation*>
      f<rsup|\<ast\>><around|(|u|)>=sup<rsub|x\<in\><cX>><around*|(|x<rsup|\<top\>>*u-f<around|(|x|)>|)><nbsp>.
    </equation*>
  </definition>

  This definition directly implies the Fenchel-Young inequality for convex functions, <math|u<rsup|\<top\>>*x\<leq\>f<around|(|x|)>+f<rsup|\<ast\>><around|(|u|)>>.

  Let <math|<cD>\<subset\><R><rsup|d>> be an open convex set, and let <math|<oD>> be the closure of <math|<cD>>.

  <\definition>
    A continuous function <math|F:<oD>\<to\><R>> is Legendre if

    <\itemize>
      <item*|(i)><math|F> is strictly convex and admits continuous first partial derivatives on <math|<cD>>;

      <item*|(ii)><math|<with|math-display|true|lim<rsub|x\<to\><oD>\<setminus\><cD>><norm|\<nabla\>*F<around|(|x|)>>=+\<infty\>.>><footnote|By the equivalence of norms in <math|<R><rsup|d>>, this definition does not depend on the choice of the norm.>
    </itemize>
  </definition>

  The Bregman divergence <math|D<rsub|F>:<oD>\<times\><cD>\<to\><R>> associated with a Legendre function <math|F> is defined by <math|D<rsub|F><around|(|x,y|)>=F<around|(|x|)>-F<around|(|y|)>-<around|(|x-y|)><rsup|\<top\>>*\<nabla\>*F<around|(|y|)>>. Moreover, we say that <math|<cD><rsup|\<ast\>>=\<nabla\>*F<around|(|<cD>|)>> is the dual space of <math|<cD>> under <math|F>. Note that, by definition, <math|D<rsub|F><around|(|x,y|)>\<gtr\>0> if <math|x\<neq\>y>, and <math|D<rsub|F><around|(|x,x|)>=0>. The following lemma is the key to understand how a Legendre function act on the space. See<nbsp><cite-detail|CL06|Proposition<nbsp>11.1> for a proof.

  <\lemma>
    Let <math|F> be a Legendre function. Then <math|F<rsup|\<ast\>\<ast\>>=F>, and <math|\<nabla\>*F<rsup|\<ast\>>=<around|(|\<nabla\>*F|)><rsup|-1>> restricted on the set <math|<cD><rsup|\<ast\>>>. Moreover, for all <math|x,y\<in\><cD>>,

    <\equation>
      <label|eq:transrelation>D<rsub|F><around|(|x,y|)>=D<rsub|F<rsup|\<ast\>>><around*|(|\<nabla\>*F<around|(|y|)>,\<nabla\>*F<around|(|x|)>|)><nbsp>.
    </equation>
  </lemma>

  The gradient <math|\<nabla\>*F> maps <math|<cD>> to the dual space <math|<cD><rsup|\<ast\>>>, and <math|\<nabla\>*F<rsup|\<ast\>>> is the inverse mapping from the dual space to the original (primal) space. Note also that<nbsp><eqref|eq:transrelation> shows that the Bregman divergence in the primal exactly corresponds to the Bregman divergence of the Legendre-transform in the dual.

  The next lemma shows that the geometry induced by a Bregman divergence resembles to the geometry of the squared Euclidean distance. See<nbsp><cite-detail|CL06|Lemma<nbsp>11.3> for a proof.

  <\lemma>
    [Generalized Pythagorean inequality]<label|lem:proj>Let <math|<cK>\<subseteq\><oD>> be a closed convex set such that <math|<cK>\<cap\><cD>\<neq\>\<emptyset\>>. Then, for all <math|x\<in\><cD>>, the Bregman projection

    <\equation*>
      z=<argmin><rsub|y\<in\><cK>>D<rsub|F><around|(|y,x|)>
    </equation*>

    exists and is unique. Moreover, for all <math|z\<in\><cK>\<cap\><cD>> and <math|y\<in\><cK>>,

    <\equation*>
      D<rsub|F><around|(|y,x|)>\<geq\>D<rsub|F><around|(|y,z|)>+D<rsub|F><around|(|z,x|)><nbsp>.
    </equation*>
  </lemma>

  The idea of OMD is very simple: first, select a Legendre function <math|F> on <math|<oD>\<supset\><cK>> (such that <math|<cK>\<cap\><cD>\<neq\>\<emptyset\>>); second, perform a gradient descent step, where the update with the gradient is performed in the dual space <math|<cD><rsup|\<ast\>>> rather than in the primal <math|<cD>>; third, project back to <math|<cK>> according to the Bregman divergence defined by <math|F>.

  <\algorithm>
    <with|font-shape|italic|OMD (Online Mirror Descent):>

    <vspace*|1fn><no-indent><with|font-series|bold|Parameters>: compact and convex set <math|<cK>\<subseteq\><R><rsup|d>>, learning rate <math|\<eta\>\<gtr\>0>, Legendre function <math|F> on <math|<oD>\<supset\><cK>>.<next-line><with|font-series|bold|Initialize>: <math|<with|math-display|true|x<rsub|1>\<in\><argmin><rsub|x\<in\><cK>>F<around|(|x|)>>> (note that <math|x<rsub|1>\<in\><cK>\<cap\><cD>>).

    <vspace*|0.5fn><no-indent>For each round <math|t=1,2,\<ldots\>,n>

    <\itemize>
      <item*|(1)>Play <math|x<rsub|t>> and observe loss vector <math|\<ell\><rsub|t>>.

      <item*|(2)><math|w<rsub|t+1>=\<nabla\>*F<rsup|\<ast\>>*<around*|(|\<nabla\>*F<around|(|x<rsub|t>|)>-\<eta\>*\<nabla\>*\<ell\><rsub|t><around|(|x<rsub|t>|)>|)>>.

      <item*|(3)><math|<with|math-display|true|x<rsub|t+1>=<argmin><rsub|y\<in\><cK>>D<rsub|F><around|(|y,w<rsub|t+1>|)>>>.
    </itemize>
  </algorithm>

  \;

  \;

  \;

  Note that step<nbsp>(2) is well defined if the following consistency condition is satisfied:

  <\equation>
    <label|eq:consistency>\<nabla\>*F<around|(|x|)>-\<eta\>*\<nabla\>*\<ell\><around|(|x|)>\<in\><cD><rsup|\<ast\>><space|2em>\<forall\><around|(|x,\<ell\>|)>\<in\><around*|(|<cK>\<cap\><cD>|)>\<times\><cL><nbsp>.
  </equation>

  Note also that step<nbsp>(2) can be rewritten as

  <\equation>
    <label|eq:MGD3>\<nabla\>*F<around|(|w<rsub|t+1>|)>=\<nabla\>*F<around|(|x<rsub|t>|)>-\<eta\>*\<nabla\>*\<ell\><rsub|t><around|(|x<rsub|t>|)><nbsp>.
  </equation>

  Finally, note that the Bregman projection in step<nbsp>(3) is a convex program, in the sense that <math|x\<mapsto\>D<rsub|F><around|(|x,y|)>> is always a convex function. This does not necessarily imply that step<nbsp>(3) can be performed efficiently, since in some cases the feasible set <math|<cK>> might only be described with an exponential number of constraints (we encounter examples like this in Section<nbsp><reference|sec:semibandit>).

  In the description above we emphasized that <math|F> has to be a Legendre function. In fact, as we see in Theorem<nbsp><reference|th:Fnotlegendre>, if <math|F> has effective domain <math|<cK>> (that is, <math|F> takes value <math|+\<infty\>> outside of <math|<cK>>), then it suffices that the Legendre-Fenchel dual <math|F<rsup|\<ast\>>> is differentiable on <math|<R><rsup|d>> to obtain a good regret bound. See the end of this section for more details on this.

  When <math|<cK>> is the simplex and <math|F<around|(|x|)>=<big|sum><rsub|i=1><rsup|d>x<rsub|i>*ln x<rsub|i>-<big|sum><rsub|i=1><rsup|d>x<rsub|i>>, OMD reduces to an exponentially weighted average forecaster, similar to those studied in Chapter<nbsp><reference|adversarial>. The well-known online gradient descent strategy corresponds to taking <math|F<around|(|x|)>=<frac|1|2><norm|x><rsup|2><rsub|2>>. In the following we shall see other possibilities for the Legendre function <math|F>.

  We prove now a very general and powerful theorem concerning the regret of OMD.

  <\theorem>
    [Regret of OMD with a Legendre function]<label|th:MGD>Let <math|<cK>> be a compact and convex set of arms, <math|<cL>> be a set of subdifferentiable functions, and <math|F> a Legendre function defined on <math|<oD>\<supset\><cK>>, such that <eqref|eq:consistency> is satisfied. Then OMD satisfies for any <math|x\<in\><cK>>,

    <\align*>
      <tformat|<table|<row|<cell|<big|sum><rsub|t=1><rsup|n>\<ell\><rsub|t><around|(|x<rsub|t>|)>-<big|sum><rsub|t=1><rsup|n>\<ell\><rsub|t><around|(|x|)>>|<cell|\<leq\><frac|F<around|(|x|)>-F<around|(|x<rsub|1>|)>|\<eta\>>>>|<row|<cell|>|<cell|<space|1em>+<frac|1|\<eta\>>*<big|sum><rsub|t=1><rsup|n>D<rsub|F<rsup|\<ast\>>><around*|(|\<nabla\>*F<around|(|x<rsub|t>|)>-\<eta\>*\<nabla\>*\<ell\><rsub|t><around|(|x<rsub|t>|)>,\<nabla\>*F<around|(|x<rsub|t>|)>|)><nbsp>.>>>>
    </align*>
  </theorem>

  <\proof>
    Let <math|x\<in\><cK>>. Since <math|<cL>> is a set of subdifferentiable functions, we have:

    <\equation*>
      <big|sum><rsub|t=1><rsup|n><around*|(|\<ell\><rsub|t><around|(|x<rsub|t>|)>-\<ell\><rsub|t><around|(|x|)>|)>\<leq\><big|sum><rsub|t=1><rsup|n>\<nabla\>*\<ell\><rsub|t><around|(|x<rsub|t>|)><rsup|\<top\>>*<around|(|x<rsub|t>-x|)><nbsp>.
    </equation*>

    Using <eqref|eq:MGD3>, and applying the definition of <math|D<rsub|F>>, one obtains

    <\align*>
      <tformat|<table|<row|<cell|\<eta\>*\<nabla\>*\<ell\><rsub|t><around|(|x<rsub|t>|)><rsup|\<top\>>*<around|(|x<rsub|t>-x|)>>|<cell|=<around|(|x-x<rsub|t>|)><rsup|\<top\>>*<around*|(|\<nabla\>*F<around|(|w<rsub|t+1>|)>-\<nabla\>*F<around|(|x<rsub|t>|)>|)>>>|<row|<cell|>|<cell|=D<rsub|F><around|(|x,x<rsub|t>|)>+D<rsub|F><around|(|x<rsub|t>,w<rsub|t+1>|)>-D<rsub|F><around|(|x,w<rsub|t+1>|)><nbsp>.>>>>
    </align*>

    By Lemma <reference|lem:proj>, one gets <math|D<rsub|F><around|(|x,w<rsub|t+1>|)>\<ge\>D<rsub|F><around|(|x,x<rsub|t+1>|)>+D<rsub|F><around|(|x<rsub|t+1>,w<rsub|t+1>|)>>, hence

    <\align*>
      <tformat|<table|<row|<cell|\<eta\>*\<nabla\>*\<ell\><rsub|t><around|(|x<rsub|t>|)><rsup|\<top\>>*<around|(|x<rsub|t>-x|)>>|<cell|\<le\>D<rsub|F><around|(|x,x<rsub|t>|)>+D<rsub|F><around|(|x<rsub|t>,w<rsub|t+1>|)>>>|<row|<cell|>|<cell|<space|1em>-D<rsub|F><around|(|x,x<rsub|t+1>|)>-D<rsub|F><around|(|x<rsub|t+1>,w<rsub|t+1>|)><nbsp>.>>>>
    </align*>

    Summing over <math|t> then gives

    <\align*>
      <tformat|<table|<row|<cell|<big|sum><rsub|t=1><rsup|n>\<eta\>*\<nabla\>*\<ell\><rsub|t><around|(|x<rsub|t>|)><rsup|\<top\>>*<around|(|x<rsub|t>-x|)>>|<cell|\<le\>D<rsub|F><around|(|x,x<rsub|1>|)>-D<rsub|F><around|(|x,x<rsub|n+1>|)>>>|<row|<cell|>|<cell|<space|1em>+<big|sum><rsub|t=1><rsup|n><around*|(|D<rsub|F><around|(|x<rsub|t>,w<rsub|t+1>|)>-D<rsub|F><around|(|x<rsub|t+1>,w<rsub|t+1>|)>|)><nbsp>.>>>>
    </align*>

    By the nonnegativity of the Bregman divergences, we get

    <\equation*>
      <big|sum><rsub|t=1><rsup|n>\<eta\>*\<nabla\>*\<ell\><rsub|t><around|(|x<rsub|t>|)><rsup|\<top\>>*<around|(|x<rsub|t>-x|)>\<le\>D<rsub|F><around|(|x,x<rsub|1>|)>+<big|sum><rsub|t=1><rsup|n>D<rsub|F><around|(|x<rsub|t>,w<rsub|t+1>|)><nbsp>.
    </equation*>

    From <eqref|eq:transrelation>, one has <math|D<rsub|F><around|(|x<rsub|t>,w<rsub|t+1>|)>=D<rsub|F<rsup|\<ast\>>><around*|(|\<nabla\>*F<around|(|x<rsub|t>|)>-\<eta\>*\<nabla\>*\<ell\><rsub|t><around|(|x<rsub|t>|)>,\<nabla\>*F<around|(|a<rsub|t>|)>|)>> and, moreover, by first-order optimality, one has <math|D<rsub|F><around|(|x,x<rsub|1>|)>\<leq\>F<around|(|x|)>-F<around|(|x<rsub|1>|)>>, which concludes the proof.
  </proof>

  We show now how to prove a regret bound if <math|F> has effective domain <math|<cK>> and <math|F<rsup|\<ast\>>> is differentiable on <math|<R><rsup|d>>, but not necessarily Legendre. In this case, it is easy to see that step<nbsp>(1) and step<nbsp>(2) in OMD reduce to

  <\equation*>
    x<rsub|t+1>=\<nabla\>*F<rsup|\<ast\>>*<around*|(|-\<eta\>*<big|sum><rsub|s=1><rsup|t-1>\<nabla\>*\<ell\><rsub|s><around|(|x<rsub|s>|)>|)><nbsp>.
  </equation*>

  <\theorem>
    [Regret of OMD with non-Legendre function]<label|th:Fnotlegendre>Let <math|<cK>> be a compact set of actions, <math|<cL>> be a set of subdifferentiable functions, and <math|F> a function with effective domain <math|<cK>> such that <math|F<rsup|\<ast\>>> is differentiable on <math|<R><rsup|d>>. Then for any <math|x\<in\><cK>> OMD satisfies

    <\align*>
      <tformat|<table|<row|<cell|<big|sum><rsub|t=1><rsup|n>\<ell\><rsub|t><around|(|x<rsub|t>|)>-<big|sum><rsub|t=1><rsup|n>\<ell\><rsub|t><around|(|x|)>>|<cell|\<leq\><frac|F<around|(|x|)>-F<around|(|x<rsub|1>|)>|\<eta\>>>>|<row|<cell|>|<cell|+<frac|1|\<eta\>>*<big|sum><rsub|t=1><rsup|n>D<rsub|F<rsup|\<ast\>>><around*|(|-\<eta\>*<big|sum><rsub|s=1><rsup|t>\<nabla\>*\<ell\><rsub|s><around|(|x<rsub|s>|)>,-\<eta\>*<big|sum><rsub|s=1><rsup|t-1>\<nabla\>*\<ell\><rsub|s><around|(|x<rsub|s>|)>|)>.>>>>
    </align*>
  </theorem>

  <\proof>
    Let <math|x\<in\><cK>>. Since <math|<cL>> is a set of subdifferentiable functions, we have

    <\equation*>
      <big|sum><rsub|t=1><rsup|n><around*|(|\<ell\><rsub|t><around|(|x<rsub|t>|)>-\<ell\><rsub|t><around|(|x|)>|)>\<leq\><big|sum><rsub|t=1><rsup|n>\<nabla\>*\<ell\><rsub|t><around|(|x<rsub|t>|)><rsup|\<top\>>*<around|(|x<rsub|t>-x|)><nbsp>.
    </equation*>

    Using the Fenchel-Young inequality, one obtains

    <\align*>
      <tformat|<table|<row|<cell|-\<eta\>*<big|sum><rsub|t=1><rsup|n>>|<cell|\<nabla\>*\<ell\><rsub|t><around|(|x<rsub|t>|)><rsup|\<top\>>*x\<leq\>F<around|(|x|)>+F<rsup|\<ast\>>*<around*|(|-\<eta\>*<big|sum><rsub|t=1><rsup|n>\<nabla\>*\<ell\><rsub|t><around|(|x<rsub|t>|)>|)>>>|<row|<cell|>|<cell|=F<around|(|a|)>+F<rsup|\<ast\>><around|(|0|)>>>|<row|<cell|>|<cell|<space|1em>+<big|sum><rsub|t=1><rsup|n><around*|(|F<rsup|\<ast\>>*<around*|(|-\<eta\>*<big|sum><rsub|s=1><rsup|t>\<nabla\>*\<ell\><rsub|s><around|(|x<rsub|s>|)>|)>-F<rsup|\<ast\>>*<around*|(|-\<eta\>*<big|sum><rsub|s=1><rsup|t-1>\<nabla\>*\<ell\><rsub|s><around|(|x<rsub|s>|)>|)>|)><nbsp>.>>>>
    </align*>

    Observe that <math|F<rsup|\<ast\>><around|(|0|)>=-F<around|(|x<rsub|1>|)>> and, for each term in the above sum,

    <\align*>
      <tformat|<table|<row|<cell|\<nabla\>*F<rsup|\<ast\>>>|<cell|<around*|(|-\<eta\>*<big|sum><rsub|s=1><rsup|t-1>\<nabla\>*\<ell\><rsub|s><around|(|x<rsub|s>|)>|)><rsup|\<top\>>*<around*|(|-\<eta\>*\<nabla\>*\<ell\><rsub|t><around|(|x<rsub|t>|)>|)>>>|<row|<cell|>|<cell|<space|1em>+D<rsub|F<rsup|\<ast\>>><around*|(|-\<eta\>*<big|sum><rsub|s=1><rsup|t>\<nabla\>*\<ell\><rsub|s><around|(|x<rsub|s>|)>,-\<eta\>*<big|sum><rsub|s=1><rsup|t-1>\<nabla\>*\<ell\><rsub|s><around|(|x<rsub|s>|)>|)>>>|<row|<cell|>|<cell|=-\<eta\>*x<rsub|t><rsup|\<top\>>*\<nabla\>*\<ell\><rsub|t><around|(|x<rsub|t>|)>+D<rsub|F<rsup|\<ast\>>><around*|(|-\<eta\>*<big|sum><rsub|s=1><rsup|t>\<nabla\>*\<ell\><rsub|s><around|(|x<rsub|s>|)>,-\<eta\>*<big|sum><rsub|s=1><rsup|t-1>\<nabla\>*\<ell\><rsub|s><around|(|x<rsub|s>|)>|)><nbsp>.>>>>
    </align*>
  </proof>

  <section|Online Stochastic Mirror Descent (OSMD)><label|sec:OSMD>

  We now turn to the analysis of the bandit setting, where the gradient information <math|\<nabla\>*\<ell\><rsub|t><around|(|x<rsub|t>|)>> is not available, and thus one cannot run OMD. This scenario has been extensively in gradient-free optimization, and the basic idea is to play a perturbed version <math|<wide|x|~><rsub|t>> of the current point <math|x<rsub|t>>. This should be done in such a way that, upon observing <math|\<ell\><rsub|t><around|(|<wide|x|~><rsub|t>|)>>, one can build an unbiased estimate <math|<wide|g|~><rsub|t>> of <math|\<nabla\>*\<ell\><rsub|t><around|(|x<rsub|t>|)>>. Whereas such estimators are presented in Chapter<nbsp><reference|nonlinear>, here we restrict our attention to linear losses. For this simpler case we consider specialized estimators with optimal performances. Given a perturbation scheme, one can run OMD with the gradient estimates instead of the true gradients. We call Online Stochastic Mirror Descent (OSMD) the resulting algorithm.

  <\bookbox>
    <with|font-shape|italic|OSMD (Online Stochastic Mirror Descent):>

    <vspace*|0.5fn><no-indent>Parameters: compact and convex set <math|<cK>\<subseteq\><R><rsup|d>>, learning rate <math|\<eta\>\<gtr\>0>, Legendre function <math|F> on <math|<oD>\<supset\><cK>>.<next-line>Initialize: <math|<with|math-display|true|x<rsub|1>\<in\><argmin><rsub|x\<in\><cK>>F<around|(|x|)>>> (note that <math|x<rsub|1>\<in\><cK>\<cap\><cD>>).

    <vspace*|0.5fn><no-indent>For each round <math|t=1,2,\<ldots\>,n>

    <\itemize>
      <vspace|-2mm>

      <item*|(1)>Play a random perturbation <math|<wide|x|~><rsub|t>> of <math|x<rsub|t>> and observe <math|\<ell\><rsub|t><around*|(|<wide|x|~><rsub|t>|)>>

      <item*|(2)>Compute random estimate <math|<wide|g|~><rsub|t>> of <math|\<nabla\>*\<ell\><rsub|t><around|(|x<rsub|t>|)>>

      <item*|(3)><math|w<rsub|t+1>=\<nabla\>*F<rsup|\<ast\>>*<around*|(|\<nabla\>*F<around|(|x<rsub|t>|)>-\<eta\>*<wide|g|~><rsub|t>|)>>

      <item*|(4)><math|<with|math-display|true|x<rsub|t+1>=<argmin><rsub|y\<in\><cK>>D<rsub|F><around|(|y,w<rsub|t+1>|)>>>
    </itemize>
  </bookbox>

  In order to relate this linear bandit strategy to the Exp2 forecaster<nbsp>(<reference|eq:exp2def>), it is important to observe that running the Exp2 forecaster over a finite set <math|<cK>> of arms, with exploration distribution <math|\<mu\>> and mixing coefficient <math|\<gamma\>\<gtr\>0>, is equivalent to running OSMD over the <math|<around|\||<cK>|\|>>-dimensional simplex with <math|F<around|(|x|)>=<tfrac|1|\<eta\>><big|sum><rsub|x\<in\><cK>>x*ln x> (the negative entropy), <math|<wide|x|~><rsub|t>> drawn from <math|<around|(|1-\<gamma\>|)>*x<rsub|t>+\<gamma\>*<space|0.17em>\<mu\>>, and estimated linear loss <math|<wide|g|~><rsub|t>=<around*|(|<around|\<langle\>|x,<wide|\<ell\>|~><rsub|t>|\<rangle\>>|)><rsub|x\<in\><cK>>>. Indeed, the projection step (4), when <math|F> is the negative entropy, corresponds to the standard normalization of a probability distribution.

  The following theorem establishes a general regret bound for OSMD. Note that here the pseudo-regret is defined as

  <\equation*>
    <oR><rsub|n>=<E>*<big|sum><rsub|t=1><rsup|n>\<ell\><rsub|t><around|(|<wide|x|~><rsub|t>|)>-min<rsub|x\<in\><cK>> <E>*<big|sum><rsub|t=1><rsup|n>\<ell\><rsub|t><around|(|x|)><nbsp>.
  </equation*>

  Note also that we state the theorem for a Legendre function <math|F>, but a similar result can be obtained under the same assumptions as those of Theorem<nbsp><reference|th:Fnotlegendre>.

  <\theorem>
    [Pseudo-regret of OSMD]<label|th:OSMD2>Let <math|<cK>> be a compact and convex set, <math|<cL>> a set of subdifferentiable functions, and <math|F> a Legendre function defined on <math|<oD>\<supset\><cK>>. If OSMD is run with a loss estimate <math|<wide|g|~><rsub|t>> such that<nbsp><eqref|eq:consistency> is satisfied (with <math|\<nabla\>*\<ell\><around|(|x|)>> replaced by <math|<wide|g|~><rsub|t>>), and with <math|<E><around*|[|<wide|g|~><rsub|t>\<mid\>x<rsub|t>|]>=\<nabla\>*\<ell\><rsub|t><around|(|x<rsub|t>|)>>, then

    <\align*>
      <tformat|<table|<row|<cell|<oR><rsub|n>>|<cell|\<leq\><frac|sup<rsub|x\<in\><cK>> F<around|(|x|)>-F<around|(|x<rsub|1>|)>|\<eta\>>+<frac|1|\<eta\>>*<big|sum><rsub|t=1><rsup|n><E>*<space|0.17em>D<rsub|F<rsup|\<ast\>>><around*|(|\<nabla\>*F<around|(|x<rsub|t>|)>-\<eta\>*<wide|g|~><rsub|t>,\<nabla\>*F<around|(|x<rsub|t>|)>|)>>>|<row|<cell|>|<cell|<space|1em>+<big|sum><rsub|t=1><rsup|n><E><around*|[|<norm|x<rsub|t>-<wide|x|~><rsub|t>><norm|<wide|g|~><rsub|t>><rsub|\<ast\>>|]>>>>>
    </align*>

    for any norm <math|<norm|<space|0.17em>\<cdot\><space|0.17em>>>. Moreover if the loss is linear, that is <math|\<ell\><around|(|x|)>=\<ell\><rsup|\<top\>>*x>, then

    <\align*>
      <tformat|<table|<row|<cell|<oR><rsub|n>>|<cell|\<leq\><frac|sup<rsub|x\<in\><cK>> F<around|(|x|)>-F<around|(|x<rsub|1>|)>|\<eta\>>+<frac|1|\<eta\>>*<big|sum><rsub|t=1><rsup|n><E>*<space|0.17em>D<rsub|F<rsup|\<ast\>>><around*|(|\<nabla\>*F<around|(|x<rsub|t>|)>-\<eta\>*<wide|g|~><rsub|t>,\<nabla\>*F<around|(|x<rsub|t>|)>|)>>>|<row|<cell|>|<cell|<space|1em>+<big|sum><rsub|t=1><rsup|n><E><around*|[|<norm|x<rsub|t>-<E><around*|[|<wide|x|~><rsub|t>\<mid\>x<rsub|t>|]>><norm|<wide|g|~><rsub|t>><rsub|\<ast\>>|]><nbsp>.>>>>
    </align*>
  </theorem>

  <\proof>
    Using Theorem <reference|th:MGD> one directly obtains:

    <\equation*>
      <big|sum><rsub|t=1><rsup|n><wide|g|~><rsub|t><rsup|\<top\>>*<around|(|x<rsub|t>-x|)>\<leq\><frac|F<around|(|x|)>-F<around|(|x<rsub|1>|)>|\<eta\>>+<frac|1|\<eta\>>*<big|sum><rsub|t=1><rsup|n><E>*<space|0.17em>D<rsub|F<rsup|\<ast\>>><around*|(|\<nabla\>*F<around|(|x<rsub|t>|)>-\<eta\>*<wide|g|~><rsub|t>,\<nabla\>*F<around|(|x<rsub|t>|)>|)><nbsp>.
    </equation*>

    Moreover since <math|<E><around*|[|<wide|g|~><rsub|t>\<mid\>x<rsub|t>|]>=\<nabla\>*\<ell\><rsub|t><around|(|x<rsub|t>|)>>, one has:

    <\align*>
      <tformat|<table|<row|<cell|<E>*<big|sum><rsub|t=1><rsup|n><around*|(|\<ell\><rsub|t><around|(|<wide|x|~><rsub|t>|)>-\<ell\><rsub|t><around|(|x|)>|)>>|<cell|=<E>*<big|sum><rsub|t=1><rsup|n><around*|(|\<ell\><rsub|t><around|(|<wide|x|~><rsub|t>|)>-\<ell\><rsub|t><around|(|x<rsub|t>|)>+\<ell\><rsub|t><around|(|x<rsub|t>|)>-\<ell\><rsub|t><around|(|x|)>|)>>>|<row|<cell|>|<cell|\<leq\><E>*<big|sum><rsub|t=1><rsup|n><norm|x<rsub|t>-<wide|x|~><rsub|t>><norm|<wide|g|~><rsub|t>><rsub|\<ast\>>+<E>*<big|sum><rsub|t=1><rsup|n>\<nabla\>*\<ell\><rsub|t><around|(|x<rsub|t>|)><rsup|\<top\>>*<around|(|x<rsub|t>-x|)>>>|<row|<cell|>|<cell|=<E>*<big|sum><rsub|t=1><rsup|n><norm|x<rsub|t>-<wide|x|~><rsub|t>><norm|<wide|g|~><rsub|t>><rsub|\<ast\>>+<E>*<big|sum><rsub|t=1><rsup|n><wide|g|~><rsub|t><rsup|\<top\>>*<around|(|x<rsub|t>-x|)>>>>>
    </align*>

    which concludes the proof of the first regret bound. The case of a linear loss follows very easily from the same computations.
  </proof>

  <section|Online combinatorial optimization><label|sec:semibandit>

  In this section we consider an interesting special case of online linear optimization. In the online combinatorial optimization setting the set of arms is <math|<cC>\<subseteq\><around|{|0,1|}><rsup|d>> and the set of linear loss functions is <math|<cL>=<around|[|0,1|]><rsup|d>>. We assume <math|<norm|v><rsub|1>=m> for all <math|v\<in\><cC>> and for some integer <math|m\<le\>d>. Many interesting problems fall into this framework, including ranking/selection of <math|m> items, or path planning.

  Here we focus on the version of the problem with <with|font-shape|italic|semi-bandit> feedback, which is defined as follows: after playing <math|v<rsub|t>\<in\><cC>>, one observes <math|<around*|(|\<ell\><rsub|t><around|(|1|)>*v<rsub|t><around|(|1|)>,\<ldots\>,\<ell\><rsub|t><around|(|d|)>*v<rsub|t><around|(|d|)>|)>>. Namely, one only observes the coordinates of the loss that were <with|font-shape|italic|active> in the arm <math|v<rsub|t>> that we chose. This setting has thus a much weaker feedback than the full information case, but still stronger than the bandit case. Note that the semi-bandit setting includes the basic multi-armed bandit problem of Chapter<nbsp><reference|adversarial>, which simply corresponds to <math|<cC>=<around|{|e<rsub|1>,\<ldots\>,e<rsub|d>|}>> where <math|e<rsub|1>,\<ldots\>,e<rsub|d>> is the canonical basis of <math|<R><rsup|d>>.

  Again, the key to tackle this kind of problem is to select <math|v<rsub|t>> at random from some probability distribution <math|p<rsub|t>> over <math|<cC>>. Note that such a probability corresponds to an average point <math|x<rsub|t>\<in\><conv><around|(|<cC>|)>>. Turning the tables, one can view <math|v<rsub|t>> as a random perturbation of <math|x<rsub|t>> such that <math|<E><around*|[|v<rsub|t>\<mid\>x<rsub|t>|]>=x<rsub|t>>. This suggests a strategy: play OSMD on <math|<cK>=<conv><around|(|<cC>|)>>, with <math|<wide|x|~><rsub|t>=v<rsub|t>>. Surprisingly, we show that this randomization is enough to obtain a good unbiased estimate of the loss, and that it is not necessary to add further perturbations to <math|x<rsub|t>>. Note that <math|<E><around*|[|<wide|x|~><rsub|t>\<mid\>x<rsub|t>|]>=x<rsub|t>> by definition. We now need to describe how to obtain an unbiased estimate of the gradient (which is the loss vector itself, since losses are linear). The following simple formula gives an unbiased estimate of the loss:

  <\equation>
    <label|eq:semibanditestimate><wide|\<ell\>|~><rsub|t><around|(|i|)>=<frac|\<ell\><rsub|t><around|(|i|)>*<space|0.17em>v<rsub|t><around|(|i|)>|x<rsub|t><around|(|i|)>><space|2em>\<forall\>i\<in\><around|{|1,\<ldots\>,d|}>.
  </equation>

  Note that this is a valid estimate since it only makes use of <math|<around*|(|\<ell\><rsub|t><around|(|1|)>*v<rsub|t><around|(|1|)>,\<ldots\>,\<ell\><rsub|t><around|(|d|)>*v<rsub|t><around|(|d|)>|)>>. Moreover, it is unbiased with respect to the random drawing of <math|v<rsub|t>> from <math|p<rsub|t>>. Indeed,

  <\equation*>
    <E><around*|[|<wide|\<ell\>|~><rsub|t><around|(|i|)>\<mid\>x<rsub|t>|]>=<frac|\<ell\><rsub|t><around|(|i|)>|x<rsub|t><around|(|i|)>>*<E><around*|[|v<rsub|t><around|(|i|)>\<mid\>x<rsub|t>|]>=\<ell\><rsub|t><around|(|i|)><nbsp>.
  </equation*>

  Using Theorem <reference|th:OSMD2> one directly obtains:

  <\align>
    <tformat|<table|<row|<cell|<oR><rsub|n>>|<cell|\<le\><frac|sup<rsub|x\<in\><cK>> F<around|(|x|)>-F<around|(|x<rsub|1>|)>|\<eta\>>>>|<row|<cell|>|<cell|<space|1em>+<frac|1|\<eta\>>*<big|sum><rsub|t=1><rsup|n><E>*<space|0.17em>D<rsub|F<rsup|\<ast\>>><around*|(|\<nabla\>*F<around|(|x<rsub|t>|)>-\<eta\>*<wide|\<ell\>|~><rsub|t>,\<nabla\>*F<around|(|x<rsub|t>|)>|)><nbsp>.<eq-number><label|eq:semibanditregret>>>>>
  </align>

  We show now how to use this bound to obtain concrete performances for OSMD using the negative entropy as Legendre function. Later, we show that one can improve the results by logarithmic factors, using a more subtle Legendre function.

  We start with OSMD and the negative entropy.

  <\theorem>
    [OSMD with negative entropy]<label|th:osmdnegent>For any set <math|<cC>\<subseteq\><around|{|0,1|}><rsup|d>>, if OSMD is run on <math|<cK>=<conv><around|(|<cC>|)>> with <math|F<around|(|x|)>=<big|sum><rsub|i=1><rsup|d>x<rsub|i>*ln x<rsub|i>-<big|sum><rsub|i=1><rsup|d>x<rsub|i>>, perturbed points <math|<wide|x|~><rsub|t>> such that <math|<E><around*|[|<wide|x|~><rsub|t>\<mid\>x<rsub|t>|]>=x<rsub|t>>, and loss estimates <math|<wide|\<ell\>|~><rsub|t>>, then

    <\equation*>
      <oR><rsub|n>\<leq\><frac|m|\<eta\>>*ln <frac|d|m>+<frac|\<eta\>|2>*<big|sum><rsub|t=1><rsup|n><big|sum><rsub|i=1><rsup|d><E><around*|[|x<rsub|t><around|(|i|)>*<space|0.17em><wide|\<ell\>|~><rsub|t><around|(|i|)><rsup|2>|]><nbsp>.
    </equation*>

    In particular, with the estimate <eqref|eq:semibanditestimate> and <math|\<eta\>=<sqrt|<frac|2*m|n*d>*ln <frac|d|m>>>,

    <\equation*>
      <oR><rsub|n>\<leq\><sqrt|2*m*d*n*ln <frac|d|m>><nbsp>.
    </equation*>
  </theorem>

  <\proof>
    First note that:

    <\equation*>
      F<around|(|x|)>-F<around|(|x<rsub|1>|)>\<leq\><big|sum><rsub|i=1><rsup|d>x<rsub|1><around|(|i|)>*ln <frac|1|x<rsub|1><around|(|i|)>>\<leq\>m*ln <around*|(|<big|sum><rsub|i=1><rsup|d><frac|x<rsub|1><around|(|i|)>|m>*<frac|1|x<rsub|1><around|(|i|)>>|)>=m*ln <frac|d|m><nbsp>.
    </equation*>

    Moreover, straightforward computations give

    <\equation*>
      D<rsub|F<rsup|\<ast\>>><around*|(|\<nabla\>*F<around|(|x<rsub|t>|)>-\<eta\>*<wide|\<ell\>|~><rsub|t>,\<nabla\>*F<around|(|x<rsub|t>|)>|)>=<big|sum><rsub|i=1><rsup|d>x<rsub|t><around|(|i|)>*<space|0.17em>\<Theta\>*<around*|(|-\<eta\>*<wide|\<ell\>|~><rsub|t><around|(|i|)>|)>
    </equation*>

    where <math|\<Theta\>:x\<in\><R>\<mapsto\>exp <around|(|x|)>-1-x>. Using that <math|\<Theta\><around|(|x|)>\<leq\><frac|x<rsup|2>|2>> for all <math|x\<leq\>0>, concludes the proof of the first inequality (since <math|<wide|\<ell\>|~><rsub|t><around|(|i|)>\<geq\>0>). The second inequality follows from

    <\equation*>
      x<rsub|t><around|(|i|)><space|0.17em><E><around*|[|<wide|\<ell\>|~><rsub|t><around|(|i|)><rsup|2>\<mid\>x<rsub|t>|]>=x<rsub|t><around|(|i|)><frac|\<ell\><rsub|t><around|(|i|)><rsup|2>|x<rsub|t><around|(|i|)><rsup|2>>*<E><around*|[|v<rsub|t><around|(|i|)>\<mid\>x<rsub|t>|]>\<le\>1
    </equation*>

    where we used <math|\<ell\><rsub|t><around|(|i|)>\<in\><around|[|0,1|]>> and <math|v<rsub|t><around|(|i|)>\<in\><around|{|0,1|}>>.
  </proof>

  We now greatly generalize the negative entropy with the following definition. When used with OSMD, this more general entropy allows us to obtain a bound tighter than that of Theorem<nbsp><reference|th:osmdnegent>.

  <\definition>
    Let <math|\<omega\>\<ge\>0>. A function <math|\<psi\>:<around|(|-\<infty\>,a|)>\<rightarrow\><R><rsup|\<ast\>><rsub|+>> for some <math|a\<in\><R>\<cup\><around|{|+\<infty\>|}>> is called an <math|\<omega\>>-potential if it is convex, continuously differentiable, and satisfies

    <\align*>
      <tformat|<table|<row|<cell|>|<cell|lim<rsub|x\<rightarrow\>-\<infty\>> \<psi\><around|(|x|)>=\<omega\>>|<cell|>|<cell|lim<rsub|x\<rightarrow\>a> \<psi\><around|(|x|)>=+\<infty\>>>|<row|<cell|>|<cell|\<psi\><rprime|'>\<gtr\>0>|<cell|>|<cell|<big|int><rsub|\<omega\>><rsup|\<omega\>+1><around|\||\<psi\><rsup|-1><around|(|s|)>|\|>*d*s\<less\>+\<infty\><nbsp>.>>>>
    </align*>

    With a potential <math|\<psi\>> we associate the function <math|F<rsub|\<psi\>>> defined on <math|<cD>=<around|(|\<omega\>,+\<infty\>|)><rsup|d>> by

    <\equation*>
      F<rsub|\<psi\>><around|(|x|)>=<big|sum><rsub|i=1><rsup|d><big|int><rsub|\<omega\>><rsup|x<rsub|i>>\<psi\><rsup|-1><around|(|s|)>*d*s<nbsp>.
    </equation*>
  </definition>

  We restrict our attention to <math|0>-potentials. A non-zero <math|\<omega\>> might be used to derive high probability regret bounds (instead of pseudo-regret bounds). Note that with <math|\<psi\><around|(|x|)>=e<rsup|x>> we have that <math|F<rsub|\<psi\>>> reduces to the negative entropy.

  <\lemma>
    <label|lem:psi>Let <math|\<psi\>> be a <math|0>-potential. Then <math|F<rsub|\<psi\>>> is Legendre and for all <math|u,v\<in\><cD><rsup|\<ast\>>=<around|(|-\<infty\>,a|)><rsup|d>> such that <math|u<rsub|i>\<leq\>v<rsub|i>> for <math|i=1,\<ldots\>,d>,

    <\equation*>
      D<rsub|F<rsup|\<ast\>>><around|(|u,v|)>\<leq\><frac|1|2>*<big|sum><rsub|i=1><rsup|d>\<psi\><rprime|'><around|(|v<rsub|i>|)>*<around|(|u<rsub|i>-v<rsub|i>|)><rsup|2><nbsp>.
    </equation*>
  </lemma>

  <\proof>
    It is easy to check that <math|F> is a Legendre function. Moreover, since <math|\<nabla\>*F<rsup|\<ast\>><around|(|u|)>=<around|(|\<nabla\>*F|)><rsup|-1><around|(|u|)>=<around*|(|\<psi\><around|(|u<rsub|1>|)>,\<ldots\>,\<psi\><around|(|u<rsub|d>|)>|)>> we obtain

    <\equation*>
      D<rsub|F<rsup|\<ast\>>><around|(|u,v|)>=<big|sum><rsub|i=1><rsup|d><around*|(|<big|int><rsub|v<rsub|i>><rsup|u<rsub|i>>\<psi\><around|(|s|)>*d*s-<around|(|u<rsub|i>-v<rsub|i>|)>*\<psi\><around|(|v<rsub|i>|)>|)><nbsp>.
    </equation*>

    From a Taylor expansion, we have

    <\equation*>
      D<rsub|F<rsup|\<ast\>>><around|(|u,v|)>\<le\><big|sum><rsub|i=1><rsup|d>max<rsub|s\<in\><around|[|u<rsub|i>,v<rsub|i>|]>> <frac|1|2>*\<psi\><rprime|'><around|(|s|)>*<around|(|u<rsub|i>-v<rsub|i>|)><rsup|2><nbsp>.
    </equation*>

    Since the function <math|\<psi\>> is convex, and <math|u<rsub|i>\<leq\>v<rsub|i>>, we have

    <\equation*>
      max<rsub|s\<in\><around|[|u<rsub|i>,v<rsub|i>|]>> \<psi\><rprime|'><around|(|s|)>\<le\>\<psi\><rprime|'><around*|(|max <around|{|u<rsub|i>,v<rsub|i>|}>|)>\<leq\>\<psi\><rprime|'><around|(|v<rsub|i>|)>
    </equation*>

    which gives the desired result.
  </proof>

  We are now ready to bound the pseudo-regret of OSMD run with an arbitrary <math|0>-potential. For a specific choice of the potential we obtain an improvement of Theorem<nbsp><reference|th:osmdnegent>. In particular for <math|m=1> this result gives the log-free bound for the adversarial multi-armed bandit that was discussed in Section <reference|sec:logfree>.

  <\theorem>
    [OSMD with a <math|0>-potential]<label|th:osmdzero>For any set subset <math|<cC>> of <math|<around|{|0,1|}><rsup|d>>, if OSMD is run on <math|<cK>=<conv><around|(|<cC>|)>> with <math|F<rsub|\<psi\>>> defined by a <math|0>-potential <math|\<psi\>>, and non-negative loss estimates <math|<wide|\<ell\>|~><rsub|t>>, then

    <\equation*>
      <oR><rsub|n>\<leq\><frac|sup<rsub|x\<in\><cK>> F<rsub|\<psi\>><around|(|x|)>-F<rsub|\<psi\>><around|(|x<rsub|1>|)>|\<eta\>>+<frac|\<eta\>|2>*<big|sum><rsub|t=1><rsup|n><big|sum><rsub|i=1><rsup|d><E><around*|[|<frac|<wide|\<ell\>|~><rsub|t><around|(|i|)><rsup|2>|<around|(|\<psi\><rsup|-1>|)><rprime|'><around*|(|x<rsub|t><around|(|i|)>|)>>|]><nbsp>.
    </equation*>

    In particular, choosing the <math|0>-potential <math|\<psi\><around|(|x|)>=<around|(|-x|)><rsup|-q>>, the estimate<nbsp><eqref|eq:semibanditestimate>, and <math|\<eta\>=<sqrt|<frac|2|q-1>*<frac|m<rsup|1-2/q>|d<rsup|1-2/q>>>>,

    <\equation*>
      <oR><rsub|n>\<leq\>q*<sqrt|<frac|2|q-1>*m*d*n><nbsp>.
    </equation*>

    With <math|q=2> this gives

    <\equation*>
      <oR><rsub|n>\<leq\>2*<sqrt|2*m*d*n><nbsp>.
    </equation*>
  </theorem>

  <\proof>
    First note that since <math|<cD><rsup|\<ast\>>=<around|(|-\<infty\>,a|)><rsup|d>> and <math|<wide|\<ell\>|~><rsub|t>> has non-negative coordinates, then<nbsp><eqref|eq:consistency> is satisfied and thus OSMD is well defined.

    The first inequality trivially follows from<nbsp><eqref|eq:semibanditregret>, Lemma<nbsp><reference|lem:psi>, and the fact that <math|\<psi\><rprime|'><around*|(|\<psi\><rsup|-1><around|(|s|)>|)>=<frac|1|<around|(|\<psi\><rsup|-1>|)><rprime|'><around|(|s|)>>>.

    Let <math|\<psi\><around|(|x|)>=<around|(|-x|)><rsup|-q>>. Then we have that <math|\<psi\><rsup|-1><around|(|x|)>=-x<rsup|-1/q>> and <math|F<around|(|x|)>=-<frac|q|q-1>*<big|sum><rsub|i=1><rsup|d>x<rsub|i><rsup|1-1/q>>. In particular, by Hölder's inequality, since <math|<big|sum><rsub|i=1><rsup|d>x<rsub|1><around|(|i|)>=m>,

    <\equation*>
      F<around|(|x|)>-F<around|(|x<rsub|1>|)>\<leq\><frac|q|q-1>*<big|sum><rsub|i=1><rsup|d>x<rsub|1><around|(|i|)><rsup|1-1/q>\<leq\><frac|q|q-1>*m<rsup|<around|(|q-1|)>/q>*d<rsup|1/q><nbsp>.
    </equation*>

    Moreover, note that <math|<around|(|\<psi\><rsup|-1>|)><rprime|'><around|(|x|)>=<frac|1|q>*x<rsup|-1-1/q>>, and

    <\equation*>
      <big|sum><rsub|i=1><rsup|d><E><around*|[|<frac|<wide|\<ell\>|~><rsub|t><around|(|i|)><rsup|2>|<around|(|\<psi\><rsup|-1>|)><rprime|'><around|(|x<rsub|t><around|(|i|)>|)>><space|0.17em><mid|\|><space|0.17em>x<rsub|t>|]>\<leq\>q*<big|sum><rsub|i=1><rsup|d>x<rsub|t><around|(|i|)><rsup|1/q>\<leq\>q*m<rsup|1/q>*d<rsup|1-1/q>
    </equation*>

    which ends the proof.
  </proof>

  <section|Improved regret bounds for bandit feedback><label|sec:ball>

  We go back to the setting of linear losses with bandit feedback considered in Section<nbsp><reference|sec:Exp2>. Namely, actions belong to a compact and convex set <math|<cK>\<subseteq\><R><rsup|d>>, losses belong to a subset <math|<cL>\<subseteq\><R><rsup|d>>, and the loss of playing <math|x<rsub|t>\<in\><cK>> at time <math|t> is <math|x<rsub|t><rsup|\<top\>>*\<ell\><rsub|t>>, which is also the feedback received by the player. As we proved in Section<nbsp><reference|sec:Exp2>, under the bounded scalar loss assumption, <math|<around|\||x<rsup|\<top\>>*\<ell\>|\|>\<le\>1> for all <math|<around|(|x,\<ell\>|)>\<in\><cK>\<times\><cL>>, one can obtain a regret bound of order <math|d*<sqrt|n>> (up to logarithmic factors) for any compact and convex set <math|<cK>>. It can be shown that this rate is not improvable in general. However, results from Section<nbsp><reference|sec:semibandit> (or from Chapter<nbsp><reference|adversarial>) show that for the simplex, one can obtain a regret bound of order <math|<sqrt|d*n>>, and we showed in Chapter<nbsp><reference|adversarial> that this rate is also unimprovable. The problem of obtaining a charaterization of the sets for which such improved regret bounds are possible is an open problem. Improved rates can be obtained for another convex body: the Euclidean ball. We now describe a strategy that attains a pseudo-regret of order <math|<sqrt|d*n>> (up to a logarithmic factor) in this case. The strategy is based on OSMD with a carefully chosen Legendre function.

  In the following, let <math|<norm|<space|0.17em>\<cdot\><space|0.17em>>> be the Euclidean norm. We consider the online linear optimization problem with bandit feedback on the Euclidean unit ball <math|<cK>=<around|{|x\<in\><R><rsup|d><space|0.17em>:<space|0.17em><norm|x>\<leq\>1|}>>. We perform the following perturbation of a point <math|x<rsub|t>> in the interior of <math|<cK>>,

  <\equation*>
    <wide|x|~><rsub|t>=<around*|{|<tabular*|<tformat|<cwith|1|-1|1|1|cell-halign|c>|<cwith|1|-1|1|1|cell-lborder|0ln>|<cwith|1|-1|2|2|cell-halign|l>|<cwith|1|-1|2|2|cell-rborder|0ln>|<table|<row|<cell|x<rsub|t>/<norm|x<rsub|t>>>|<cell|<text|if <math|\<xi\><rsub|t>=1>,>>>|<row|<cell|\<epsilon\><rsub|t>*<space|0.17em>e<rsub|I<rsub|t>>>|<cell|<text|otherwise>>>>>>|\<nobracket\>>
  </equation*>

  where <math|\<xi\><rsub|t>> is a Bernoulli random variable of parameter <math|<norm|x<rsub|t>>>, <math|I<rsub|t>> is drawn uniformly at random in <math|<around|{|1,\<ldots\>,d|}>>, and <math|\<epsilon\><rsub|t>> is a Rademacher random variable with parameter <math|<frac|1|2>>.

  It is easy to check that this perturbation is unbiased, in the sense that <math|<E><around*|[|<wide|x|~><rsub|t>\<mid\>x<rsub|t>|]>=x<rsub|t>>. An unbiased estimate of the loss vector is given by

  <\equation>
    <label|eq:ballestimate><wide|\<ell\>|~><rsub|t>=d*<around|(|1-\<xi\><rsub|t>|)>*<frac|<wide|x|~><rsub|t><rsup|\<top\>>*\<ell\><rsub|t>|1-<norm|x<rsub|t>>>*<space|0.17em><wide|x|~><rsub|t><nbsp>.
  </equation>

  Again, it is easy to check that <math|<E><around*|[|<wide|\<ell\>|~><rsub|t>\<mid\>x<rsub|t>|]>=x<rsub|t>>. We are now ready to prove the following result, showing that OSMD with a suitable <math|F> achieves a pseudo-regret of order <math|<sqrt|d*n*ln n>> on the Euclidean ball.

  <\theorem>
    [OSMD for the Euclidean ball]<label|th:ball>Let <math|<cK>=<cL>=<around|{|x\<in\><R><rsup|d><space|0.17em>:<space|0.17em><norm|x>\<leq\>1|}>> define an online linear optimization problem with bandit feedback. If OSMD is run on <math|<cK><rprime|'>=<around|(|1-\<gamma\>|)>*<cK>> with <math|F<around|(|x|)>=-ln <around|(|1-<norm|x>|)>-<norm|x>> and the estimate<nbsp><eqref|eq:ballestimate>, then for any <math|\<eta\>\<gtr\>0> such that <math|\<eta\>*d\<leq\><frac|1|2>>,

    <\equation>
      <label|eq:ballregret1><oR><rsub|n>\<leq\>\<gamma\>*n+<frac|ln \<gamma\><rsup|-1>|\<eta\>>+\<eta\>*<big|sum><rsub|t=1><rsup|n><E><around*|[|<around|(|1-<norm|x<rsub|t>>|)><mid|\|><wide|\<ell\>|~><rsub|t><mid|\|><rsup|2>|]><nbsp>.
    </equation>

    In particular, with <math|\<gamma\>=<frac|1|<sqrt|n>>> and <math|\<eta\>=<sqrt|<frac|ln n|2*n*d>>>,

    <\equation>
      <label|eq:ballregret2><oR><rsub|n>\<leq\>3*<sqrt|d*n*ln n><nbsp>.
    </equation>
  </theorem>

  <\proof>
    First, it is clear that by playing on <math|<cK><rprime|'>=<around|(|1-\<gamma\>|)>*<cK>> instead of <math|<cK>>, OSMD incurs an extra <math|\<gamma\>*n> regret. Second, note that <math|F> is stricly convex (it is the composition of a convex and nondecreasing function with the Euclidean norm) and

    <\equation>
      <label|eq:ballgradient>\<nabla\>*F<around|(|x|)>=<frac|x|1-<norm|x>><nbsp>.
    </equation>

    In particular, <math|F> is Legendre on the open unit ball <math|<cD>=<around|{|x\<in\><R><rsup|d><space|0.17em>:<space|0.17em><norm|x>\<less\>1|}>>, and one has <math|<cD><rsup|\<ast\>>=<R><rsup|d>>. Hence<nbsp><eqref|eq:consistency> is always satisfied, and OSMD is well defined. Now the regret with respect to <math|<cK><rprime|'>> can be bounded as follows: using Theorem<nbsp><reference|th:OSMD2> and the unbiasedness of <math|<wide|x|~><rsub|t>> and <math|<wide|\<ell\>|~><rsub|t>> we get

    <\equation*>
      <frac|sup<rsub|x\<in\><cK>> F<around|(|x|)>-F<around|(|x<rsub|1>|)>|\<eta\>>+<frac|1|\<eta\>>*<big|sum><rsub|t=1><rsup|n><E>*<space|0.17em>D<rsub|F<rsup|\<ast\>>><around*|(|\<nabla\>*F<around|(|x<rsub|t>|)>-\<eta\>*<wide|\<ell\>|~><rsub|t>,\<nabla\>*F<around|(|x<rsub|t>|)>|)><nbsp>.
    </equation*>

    The first term is clearly bounded by <math|<frac|1|\<eta\>>*ln <frac|1|\<gamma\>>> (since <math|x<rsub|1>=0>). For the second term, we need to do a few computations. The first one follows from<nbsp><eqref|eq:ballgradient>), the others follow from simple algebra

    <\align*>
      <tformat|<table|<row|<cell|\<nabla\>*F<rsup|\<ast\>><around|(|u|)>>|<cell|=<frac|u|1+<norm|u>>>>|<row|<cell|F<rsup|\<ast\>><around|(|u|)>>|<cell|=-ln <around|(|1+<norm|u>|)>+<norm|u>>>|<row|<cell|D<rsub|F<rsup|\<ast\>>><around|(|u,v|)>>|<cell|=<frac|1|1+<norm|v>>*<around*|(|<norm|u>-<norm|v>+<norm|u>\<cdot\><norm|v>-v<rsup|T>*u|\<nobracket\>>>>|<row|<cell|>|<cell|<space|2em><around*|\<nobracket\>|-<around|(|1+<norm|v>|)>*ln <around*|(|1+<frac|<norm|u>-<norm|v>|1+<norm|v>>|)>|)><nbsp>.>>>>
    </align*>

    Let <math|\<Theta\><around|(|u,v|)>> such that <math|D<rsub|F<rsup|\<ast\>>><around|(|u,v|)>=<frac|1|1+<norm|v>>*\<Theta\><around|(|u,v|)>>. First note that

    <\equation>
      <label|eq:superball><frac|1|1+<norm|\<nabla\>*F<around|(|x<rsub|t>|)>>>=1-<norm|x<rsub|t>><nbsp>.
    </equation>

    Thus, in order to prove <eqref|eq:ballregret1> it remains to show that <math|\<Theta\><around|(|u,v|)>\<leq\><norm|u-v><rsup|2>>, for <math|u=\<nabla\>*F<around|(|x<rsub|t>|)>-\<eta\>*<wide|\<ell\>|~><rsub|t>> and <math|v=\<nabla\>*F<around|(|x<rsub|t>|)>>. In fact, we prove that this inequality holds as soon as <math|<frac|<norm|u>-<norm|v>|1+<norm|v>>\<geq\>-<frac|1|2>>. This is the case for the pair <math|<around|(|u,v|)>> under consideration, since by the triangle inequality, equations <eqref|eq:ballestimate> and <eqref|eq:superball>, and the assumption on <math|\<eta\>>,

    <\equation*>
      <frac|<norm|u>-<norm|v>|1+<norm|v>>\<geq\>-<frac|\<eta\><mid|\|><wide|\<ell\>|~><rsub|t><mid|\|>|1+<norm|v>>\<geq\>-\<eta\>*d\<geq\>-<frac|1|2><nbsp>.
    </equation*>

    Now using that <math|ln <around|(|1+x|)>\<geq\>x-x<rsup|2>> for all <math|x\<geq\>-<frac|1|2>>, we obtain that for <math|u,v> such that <math|<frac|<norm|u>-<norm|v>|1+<norm|v>>\<geq\>-<frac|1|2>>,

    <\align*>
      <tformat|<table|<row|<cell|\<Theta\><around|(|u,v|)>>|<cell|\<leq\><frac|<around|(|<norm|u>-<norm|v>|)><rsup|2>|1+<norm|v>>+<norm|u>\<cdot\><norm|v>-v<rsup|\<top\>>*u>>|<row|<cell|>|<cell|\<leq\><around|(|<norm|u>-<norm|v>|)><rsup|2>+<norm|u>\<cdot\><norm|v>-v<rsup|\<top\>>*u>>|<row|<cell|>|<cell|=<norm|u><rsup|2>+<norm|v><rsup|2>-<norm|u>\<cdot\><norm|v>-v<rsup|\<top\>>*u>>|<row|<cell|>|<cell|=<norm|u-v><rsup|2>+2*v<rsup|\<top\>>*u-<norm|u>\<cdot\><norm|v>-v<rsup|\<top\>>*u>>|<row|<cell|>|<cell|\<leq\><norm|u-v><rsup|2>>>>>
    </align*>

    which concludes the proof of <eqref|eq:ballregret1>. For the proof of<nbsp><eqref|eq:ballregret2> it suffices to note that

    <\align*>
      <tformat|<table|<row|<cell|<E>*<around*|[|1-<norm|x<rsub|t>><mid|\|><wide|\<ell\>|~><rsub|t><mid|\|><rsup|2>|]>>|<cell|=<around|(|1-<norm|x<rsub|t>>|)>*<big|sum><rsub|i=1><rsup|d><frac|1-<norm|x<rsub|t>>|d>*<frac|d<rsup|2>|<around|(|1-<norm|x<rsub|t>>|)><rsup|2>>*<around|(|\<ell\><rsub|t><rsup|\<top\>>*e<rsub|i>|)><rsup|2>>>|<row|<cell|>|<cell|=d<norm|\<ell\><rsub|t>><rsup|2>>>|<row|<cell|>|<cell|\<le\>d>>>>
    </align*>

    and perform with straightforward computations.
  </proof>

  <section|Refinements and bibliographic remarks>

  Online convex optimization in the full information setting was introduced by <cite|Zin03>. Online linear optimization with bandit feedback was pioneered in <cite|AK04|MB04>. For this problem, <cite|DHK08> were the first to obtain optimal <math|\<cal-O\><around*|(|<sqrt|n>|)>> bounds in terms of the number <math|n> of rounds. This was done using the Exp2 strategy with an exploration uniform over a barycentric spanner for <math|<cK>>. The exploration part was first improved by <cite|CL11> for combinatorial sets <math|<cK>>. Finally, the optimal exploration based on John's theorem was introduced by <cite|BCK12>. Theorem<nbsp><reference|th:exp2john> is extracted from this last paper.

  Simultaneously with the line of research on Exp2, algorithms based on Online Mirror Descent were also investigated. Mirror Descent was originally introduced in the seminal work of <cite|Nem79|NY83> as a standard (offline) convex optimization method. A somewhat similar class of algorithms was rediscovered in the online learning community, see <cite|HW98|GLS01|KW01|Sha07>. The connection between existing online learning algorithms (such as Exponential weights or Online Gradient Descent) and Mirror Descent was first made explicit in <cite|CL06> —see also <cite|Rak09> and <cite|Haz11>. Earlier applications of Mirror Descent in the learning community can be found in <cite|JNTV05>. The first application of Mirror Descent to online linear optimization with bandit feedback was given by <cite|AHR08>. In this pioneering paper, the authors describe the first computationally efficient strategy (i.e., with complexity polynomial in <math|d>) with <math|\<cal-O\><around|(|<sqrt|n>|)>> regret. The main idea is to use Mirror Descent with a self-concordant barrier <math|F> for the set <math|<cK>>. Unfortunately, the drawback is a suboptimal dependency on <math|d> in the regret. More precisely. they obtain a <math|\<cal-O\>*<around|(|d<rsup|2>*<sqrt|n>|)>> regret under the bounded scalar loss assumption, while Exp2 with John's exploration attains <math|\<cal-O\>*<around|(|d*<sqrt|n>|)>>. However, Mirror Descent can also deliver optimal regret bounds in the bandit case, as we showed in Section <reference|sec:ball>, which is extracted from <cite|BCK12>.

  The presentation of the Online Mirror Descent algorithm in Section<nbsp><reference|sec:OMD> is inspired by<nbsp><cite|Bub11>. The definition of Legendre functions comes from <cite-detail|CL06|Chapter 11> —further developments on convex analysis can be found in <cite|HL01|BV04>. Theorem<nbsp><reference|th:MGD> is taken from <cite|ABL11>, but the proof technique goes back at least to <cite|BN99>. The proof of Theorem<nbsp><reference|th:Fnotlegendre> is adapted from <cite|KST10>. Section<nbsp><reference|sec:OSMD> is inspired by gradient-free optimization, a topic extensively studied since <cite|RM51|KW52> —see <cite|NJLS09|CSV09|Nes11|BM11> for recent accounts on this theory. Alternative views have been proposed on the Online Mirror Descent strategy. In particular, it is equivalent to a Follow The Regularized Leader, and to proximal algorithms, see <cite|Rak09>. This viewpoint was pioneered by <cite|BT03> —see also <cite|BPSS11> for more details. Finally, a notion of universality of Online Mirror Descent in the online prediction setting was proposed by <cite|SST11>.

  The online combinatorial optimization problem studied in Section<nbsp><reference|sec:semibandit> was introduced by <cite|KV05> for the full information setting. Several works have studied this problem for specific sets <math|<cC>>, see in particular <cite|TW03|WK08|HW09|HKW10|KWK10|WKH11|CL11>. The semi-bandit feedback was studied in the series of papers <cite|GLLO07|KRS10|UNK10|ABL11>. The presentation adopted in this section is based on the last paper. OSMD with negative entropy was first studied by <cite|HW09> for the full information setting and for a specific set <math|<cC>>. It was then studied more generally in <cite|KWK10> for any set <math|<cC>>. The generalization to semi-bandit feedback was done by <cite|ABL11>. OSMD with a Legendre derived from a potential was introduced by <cite|ABL11>. In the case of the simplex, this strategy corresponds to the INF strategy of <cite|AB09> discussed in Section<nbsp><reference|sec:logfree>.

  Online linear optimization is still far from being completely understood. For instance, see <cite-detail|Bub11|Chapter 9> for a list of open problems. In this section we also omitted a few important topics related to online linear optimization. We briefly review some of them below.

  <subsection|Lower bounds>

  Under the bounded scalar loss assumption, it was proved by <cite|DHK08> that for <math|<cK>=<around|[|-1,1|]><rsup|d>> the minimax regret in the full information setting is at least of order <math|<sqrt|d*n>>, while under bandit feedback it is of order <math|d*<sqrt|n>>. In both cases Exp2 is matching these lower bounds (using John's exploration in the bandit case).

  In the combinatorial setting, where <math|<cK>\<subset\><around|{|0,1|}><rsup|d>> and <math|<cL>=<around|[|0,1|]><rsup|d>>, <cite|ABL11> show that the minimax regret in the full information and semi-bandit cases is at least of order <math|d*<sqrt|n>>, while in the bandit case it is of order <math|d<rsup|3/2>*<sqrt|n>>. OSMD with the negative entropy matches the bounds in the full information and semi-bandit cases. However, in the bandit case the best known bound is obtained by Exp2 (with John's exploration) and gives a regret of order <math|d<rsup|2>*<sqrt|n>>. It is important to remark that <cite|ABL11> show that Exp2 is a provably suboptimal strategy in the combinatorial setting.

  Finally, lower bounds for the full information case, and for a few specific sets <math|<cK>> of interest, were derived by <cite|KWK10>.

  <subsection|High probability bounds><label|sec:hplinear>

  In this chapter we focused on the pseudo-regret <math|<oR><rsub|n>>. However, just like in Chapter <reference|adversarial>, a much more important and interesting statement concerns high probability bounds for the regret <math|R<rsub|n>>. Partial results in this direction can be found in <cite|BDHKRT08> for the Exp2 strategy, and in <cite|AR09> for the OSMD algorithm.

  <subsection|Stochastic online linear optimization><label|sec:stochlinear>

  Similarly to the stochastic bandit case (see Chapter <reference|stochastic>), a natural restriction to consider for the adversary is that the sequence of losses <math|\<ell\><rsub|1>,\<ell\><rsub|2>,\<ldots\>> is an i.i.d. sequence. This stochastic setting was introduced by <cite|Aue02>, and further studied by <cite|DHK08b>. In particular, in the latter paper it was proved that regrets logarithmic in <math|n> and polynomial in <math|d> are possible, as long as <math|<cK>> is a polytope. Recent progress on this problem can be found in <cite|RT10|filippi2010parametric|APS11>.

  <chapter|Nonlinear bandits><label|nonlinear>

  We now extend the analysis of the previous chapter to the following scenario: arms are still points in a convex set <math|<cK>\<subset\><R><rsup|d>>, but now losses are not necessarily linear functions of the arms. More precisely the adversary selects loss functions from some set <math|<cL>> of real-valued functions defined on <math|<cK>>. The pseudo-regret is then defined as:

  <\equation*>
    <oR><rsub|n>=<E>*<big|sum><rsub|t=1><rsup|n>\<ell\><rsub|t><around|(|x<rsub|t>|)>-min<rsub|x\<in\><cK>> <E>*<big|sum><rsub|t=1><rsup|n>\<ell\><rsub|t><around|(|x|)>.
  </equation*>

  This modification has important consequences. For instance with strictly convex losses one has to do local perturbations in order to estimate the loss gradient, this is in contrast to the global perturbations studied in the previous chapter. In agreement with the setting of Chapter<nbsp><reference|linear>, we initially focus on the nonstochastic setting, where the forecaster faces an unknown sequence of convex Lipschitz and differentiable losses (in the nonlinear case the regret scales with the Lipschitz constant of losses). Problems of this kind can be viewed as dynamic variants of convex optimization problems, in which the convex function to optimize evolves over time. The bandit constraint can be simply interpreted as the impossibility of computing gradients (because, for instance, we do not have a explicit representation of the function, but it can only be accessed by querying for values at desired points).

  We look at two feedback models. In the first one, at each step the forecaster evaluates the loss function at two points: the played point plus an additional point of its choice. In the second one, only the value of the loss evaluated at the played point is made available to the forecaster. We show that while the two-points model allows for a <math|<scO><around*|(|<sqrt|n>|)>> bound on pseudo-regret, in the one-point model a pseudo-regret bound of only <math|<scO><around*|(|n<rsup|3/4>|)>> is achieved. The stochastic setting is investigated in Section<nbsp><reference|s:nonlinear-stochastic> where, similarly to Chapter<nbsp><reference|stochastic>, we assume that each play of an arm returns a stochastic loss with fixed but unknown mean. Unlike the nonstochastic case, the mean loss function is assumed to be Lipschitz and unimodal, but not necessarily convex. For keeping things simple, the stochastic setting is studied in <math|1>-dimensional case, when arms are points in the unit interval. For this case we show a bound on the pseudo-regret of <math|<scO><around*|(|<sqrt|n><around|(|log n|)>|)>>.

  <section|Two-points bandit feedback>

  We start by analyzing the nonstochastic case in the two-point feedback model: at each time step <math|t>, the forecaster observes the value of a convex and differentiable loss function <math|\<ell\><rsub|t>> at the played point <math|x<rsub|t>> and at an extra point <math|x<rsub|t><rprime|'>> of its choice. If the second point is chosen at random in a neighborhood of the first one, one can use it to compute an estimate of the gradient of <math|\<ell\><rsub|t>> at <math|x<rsub|t>>. Hence, running OSMD on the estimated gradients we obtain a regret bound controlled by the second moments of these estimates. The algorithm we present in this section follows this intuition, although —for technical reasons— the gradient is estimated at a point which is close but distinct from the point actually played.

  We focus our analysis on OSMD with Legendre function <math|F=<tfrac|1|2><norm|\<cdot\>><rsup|2>>, where <math|<norm|\<cdot\>>> is the Euclidean norm. The resulting strategy, Online Stochastic Gradient Descent (OSGD) is sketched below here.

  <\bookbox>
    <with|font-shape|italic|OSGD (Online Stochastic Gradient Descent):>

    <vspace*|0.5fn><no-indent>Parameters: Closed and convex set <math|<cK>\<subseteq\><R><rsup|d>>, learning rate <math|\<eta\>\<gtr\>0>.<next-line>Initialize: <math|x<rsub|1>=<around|(|0,\<ldots\>,0|)>>.

    <vspace*|0.5fn><no-indent>For each round <math|t=1,2,\<ldots\>,n>

    <\itemize>
      <vspace|-2mm>

      <item*|(1)>Observe stochastic estimate <math|<gtilde><rsub|t><around|(|x<rsub|t>|)>> of <math|\<nabla\>*\<ell\><rsub|t><around|(|x<rsub|t>|)>>;

      <item*|(2)><math|x<rsub|t+1><rprime|'>=x<rsub|t>-\<eta\>*<space|0.17em><gtilde><rsub|t><around|(|x<rsub|t>|)>>;

      <item*|(3)><math|<dt>*x<rsub|t+1>=<argmin><rsub|y\<in\><cK>><norm|y-x<rsub|t+1><rprime|'>>>;
    </itemize>
  </bookbox>

  We now introduce our main technical tool: the two-point gradient estimate. The two points on which the loss value is queried at time <math|t> are denoted by <math|X<rsub|t><rsup|+>> and <math|X<rsub|t><rsup|->>. OSGD always plays one of these two points at random.

  Let <math|<Ball>=<theset|x\<in\><R><rsup|d>|<norm|x>\<le\>1>> be the unit ball in <math|<R><rsup|d>> and <math|<Sphere>=<theset|x\<in\><R><rsup|d>|<norm|x>=1>> be the unit sphere. Fix <math|\<delta\>\<gtr\>0> and introduce the notations <math|X<rsub|t><rsup|+>=x<rsub|t>+\<delta\>*S> and <math|X<rsub|t><rsup|->=x<rsub|t>-\<delta\>*S>, where <math|x<rsub|t>\<in\><cK>> and <math|S> is a random variable with uniform distribution in <math|<Sphere>>. Then, for any convex loss <math|\<ell\><rsub|t>>, the two-point gradient estimate <math|<gtilde><rsub|t>> is defined by

  <\equation>
    <label|eq:two-point-est><gtilde><rsub|t><around|(|x<rsub|t>|)>=<frac|d|2*\<delta\>>*<around*|(|\<ell\><rsub|t><around|(|X<rsub|t><rsup|+>|)>-\<ell\><rsub|t><around|(|X<rsub|t><rsup|->|)>|)>*S<nbsp>.
  </equation>

  In order to compute the expectation of <math|<gtilde><rsub|t>>, first note that by symmetry

  <\equation*>
    <E>*<space|0.17em><gtilde><rsub|t><around|(|x|)>=<frac|d|\<delta\>>*<space|0.17em><E><around*|[|\<ell\><rsub|t>*<around|(|x+\<delta\>*S|)>*S|]><nbsp>.
  </equation*>

  In order to compute the expectation in the right-hand side we need the following preliminary lemma.

  <\lemma>
    <label|l:divergence>For any differentiable function <math|\<ell\>:<R><rsup|d>\<to\><R>>

    <\equation*>
      \<nabla\>*<big|int><rsub|<Ball>>\<ell\>*<around|(|x+\<delta\>*b|)>*<space|0.17em>d*b=<big|int><rsub|<Sphere>>\<ell\>*<around|(|x+\<delta\>*s|)>*s*<space|0.17em>d*\<sigma\><around|(|s|)>
    </equation*>

    where <math|\<sigma\>> is the unnormalized spherical measure.
  </lemma>

  <\proof>
    The proof of this result is an easy consequence of the Divergence Theorem,

    <\align*>
      <tformat|<table|<row|<cell|\<nabla\>*<big|int><rsub|<Ball>>\<ell\>*<around|(|x+\<delta\>*b|)>*<space|0.17em>d*b>|<cell|=<big|int><rsub|<Ball>>\<nabla\>*\<ell\>*<around|(|x+\<delta\>*b|)>*<space|0.17em>d*b>>|<row|<cell|>|<cell|=<big|int><rsub|<Sphere>><frac|1|\<delta\>>*\<ell\>*<around|(|x+\<delta\>*s|)>*s*<space|0.17em>d*\<sigma\><around|(|s|)>>>|<row|<cell|>|<cell|=<frac|1|\<delta\>>*<big|int><rsub|<Sphere>>\<ell\>*<around|(|x+\<delta\>*s|)>*s*<space|0.17em>d*\<sigma\><around|(|s|)><nbsp>.>>>>
    </align*>

    \;
  </proof>

  We are now fully equipped to compute the expectation of <math|<gtilde><rsub|t>>.

  <\lemma>
    <label|l:stokes>If <math|B> is a random variable with uniform distribution in <math|<Ball>> and <math|S> is a random variable with uniform distribution in <math|<Sphere>>, then for all differentiable functions <math|\<ell\><rsub|t>:<R><rsup|d>\<to\><R>>,

    <\equation*>
      <frac|d|\<delta\>>*<E><around*|[|\<ell\>*<around|(|x+\<delta\>*S|)>*S|]>=\<nabla\><E>*<space|0.17em>\<ell\>*<around|(|x+\<delta\>*B|)><nbsp>.
    </equation*>
  </lemma>

  <\proof>
    First consider the easy one-dimensional case. Namely, <math|<cK>=<around|[|a,b|]>> for some reals <math|a\<less\>b>. Note that, in this case, <math|S> is uniform in <math|<around|{|-1,+1|}>> whereas <math|B> is uniform in <math|<around|[|-1,+1|]>>. Then

    <\align*>
      <tformat|<table|<row|<cell|<E>*<space|0.17em>\<ell\>*<around|(|x+\<delta\>*B|)>=<frac|1|2*\<delta\>>*<big|int><rsub|-\<delta\>><rsup|\<delta\>>\<ell\>*<around|(|x+<ve>|)>*<space|0.17em>d*<ve>=<frac|L*<around|(|x+\<delta\>|)>-L*<around|(|x-\<delta\>|)>|2*\<delta\>>>>>>
    </align*>

    by the fundamental theorem of calculus, where <math|L> is the antiderivative of <math|\<ell\>> satisfying <math|L<rprime|'>=\<ell\>>. This gives

    <\equation*>
      <frac|d|d*x>*<E>*<space|0.17em>\<ell\>*<around|(|x+\<delta\>*B|)>=<frac|\<ell\>*<around|(|x+\<delta\>|)>-\<ell\>*<around|(|x-\<delta\>|)>|2*\<delta\>><nbsp>.
    </equation*>

    On the other hand,

    <\equation*>
      <frac|1|\<delta\>>*<space|0.17em><E><around*|[|\<ell\>*<around|(|x+\<delta\>*S|)>*S|]>=<frac|\<ell\>*<around|(|x+\<delta\>|)>-\<ell\>*<around|(|x-\<delta\>|)>|2*\<delta\>><nbsp>.
    </equation*>

    Hence <math|<tfrac|1|\<delta\>><E><around*|[|\<ell\>*<around|(|x+\<delta\>*S|)>*S|]>=<tfrac|d|d*x><E>*<space|0.17em>\<ell\>*<around|(|x+\<delta\>*B|)>> and the <math|1>-dimensional case is established. Note that the equivalence we just proved relates an integral over the unit sphere <math|<Sphere>> to an integral over the unit ball <math|<Ball>>. In <math|d> dimensions, Lemma<nbsp><reference|l:divergence> delivers the corresponding generalized identity

    <\equation*>
      <frac|1|\<delta\>>*<big|int><rsub|<Sphere>>\<ell\>*<around|(|x+\<delta\>*s|)>*s*<space|0.17em>d*\<sigma\><around|(|s|)>=\<nabla\>*<big|int><rsub|<Ball>>\<ell\>*<around|(|x+\<delta\>*b|)>*<space|0.17em>d*b<nbsp>.
    </equation*>

    Now, since <math|<math-up|Vol><around|(|<Sphere>|)>=d<space|0.17em><math-up|Vol><around|(|<Ball>|)>> we immediately obtain

    <\equation*>
      <frac|d|\<delta\>>*<E><around*|[|\<ell\>*<around|(|x+\<delta\>*S|)>*S|]>=\<nabla\><E>*<space|0.17em>\<ell\>*<around|(|x+\<delta\>*B|)>
    </equation*>

    concluding the proof.
  </proof>

  We have thus established <math|<E>*<space|0.17em><gtilde><rsub|t><around|(|x|)>=\<nabla\><E>*<space|0.17em>\<ell\><rsub|t>*<around|(|x+\<delta\>*B|)>>, showing that <math|<gtilde><rsub|t>> provides an unbiased estimate of a smoothed version <math|<tloss><rsub|t><around|(|x|)>=<E>*<space|0.17em>\<ell\><rsub|t>*<around|(|x+\<delta\>*B|)>> of the loss function <math|\<ell\><rsub|t>>.

  We can measure how well <math|<tloss><rsub|t>> approximates <math|\<ell\><rsub|t>> by exploiting the Lipschitz assumption,

  <\align>
    <tformat|<table|<row|<cell|<around*|\||\<ell\><rsub|t><around|(|x|)>-<tloss><rsub|t><around|(|x|)>|\|>>|<cell|=<around*|\||\<ell\><rsub|t><around|(|x|)>-<E>*<space|0.17em>\<ell\><rsub|t>*<around|(|x+\<delta\>*B|)>|\|>>>|<row|<cell|>|<cell|\<le\><E>*<around*|\||\<ell\><rsub|t><around|(|x|)>-\<ell\><rsub|t>*<around|(|x+\<delta\>*B|)>|\|>>>|<row|<cell|>|<cell|\<le\>\<delta\>*G*<space|0.17em><E><norm|B>>>|<row|<cell|>|<cell|\<le\>\<delta\>*G<nbsp>.<eq-number><label|eq:lip-tloss>>>>>
  </align>

  The next lemma relates the regret under the losses <math|\<ell\><rsub|t>> to the regret under their smoothed versions <math|<tloss><rsub|t>>. An additional issue taken into account by the lemma is that OSGD might play a point close to the boundary of the set <math|<cK>>. In this case the perturbed point on which the gradient is estimated could potentially be outside of <math|<cK>>. In order to prevent this from happening we need to run OSGD on a shrunken set <math|<around|(|1-\<xi\>|)>*<cK>>.

  <\lemma>
    <label|l:two-point>Let <math|<cK>\<subseteq\><R><rsup|d>> be a convex set such that <math|<cK>\<subseteq\>R*<space|0.17em><Ball>> for some <math|R\<ge\>0>, and fix <math|0\<le\>\<xi\>\<le\>1>. For any sequence <math|\<ell\><rsub|1>,\<ell\><rsub|2>,\<ldots\>> of <math|G>-Lipschitz differentiable and convex losses, and for any sequence <math|x<rsub|1>,x<rsub|2>,\<ldots\>\<in\><around|(|1-\<xi\>|)>*<cK>\<subseteq\><R><rsup|d>>, the following holds

    <\align*>
      <tformat|<table|<row|<cell|<frac|1|2>*<big|sum><rsub|t=1><rsup|n>>|<cell|<around*|(|\<ell\><rsub|t><around|(|X<rsub|t><rsup|+>|)>+\<ell\><rsub|t><around|(|X<rsub|t><rsup|->|)>|)>-<big|sum><rsub|t=1><rsup|n>\<ell\><rsub|t><around|(|x|)>>>|<row|<cell|>|<cell|\<le\><big|sum><rsub|t=1><rsup|n><tloss><rsub|t><around|(|x<rsub|t>|)>-<big|sum><rsub|t=1><rsup|n><tloss><rsub|t>*<around*|(|<around|(|1-\<xi\>|)>*x|)>+3*\<delta\>*G*n+\<xi\>*G*R*n>>>>
    </align*>

    for all realizations of the random process <math|<around*|(|X<rsub|t><rsup|+>,X<rsub|t><rsup|->|)><rsub|t\<ge\>1>>.
  </lemma>

  <\proof>
    Using the Lipschitzness of <math|\<ell\><rsub|t>> and<nbsp>(<reference|eq:lip-tloss>) we obtain

    <\align*>
      <tformat|<table|<row|<cell|<frac|1|2>>|<cell|<around*|(|\<ell\><rsub|t><around|(|X<rsub|t><rsup|+>|)>+\<ell\><rsub|t><around|(|X<rsub|t><rsup|->|)>|)>+<tloss><rsub|t>*<around*|(|<around|(|1-\<xi\>|)>*x|)>>>|<row|<cell|>|<cell|\<le\><frac|1|2>*<around*|(|\<ell\><rsub|t><around|(|x<rsub|t>|)>+\<delta\>*G<norm|S>+\<ell\><rsub|t><around|(|x<rsub|t>|)>+\<delta\>*G<norm|S>|)>+\<ell\><rsub|t>*<around*|(|<around|(|1-\<xi\>|)>*x|)>+\<delta\>*G>>|<row|<cell|>|<cell|\<le\>\<ell\><rsub|t><around|(|x<rsub|t>|)>+\<ell\><rsub|t><around*|(|x|)>+2*\<delta\>*G+\<xi\>*G*R>>|<row|<cell|>|<cell|\<le\><tloss><rsub|t><around|(|x<rsub|t>|)>+\<ell\><rsub|t><around*|(|x|)>+3*\<delta\>*G+\<xi\>*G*R<nbsp>.>>>>
    </align*>

    In the second step we used <math|<tloss><rsub|t>*<around*|(|<around|(|1-\<xi\>|)>*x|)>\<le\>\<xi\>*G<norm|x>\<le\>\<xi\>*G*R> which results from the Lipschitzness of <math|\<ell\><rsub|t>> and the assumption <math|<cK>\<subseteq\>R*<space|0.17em><Ball>>.
  </proof>

  Next, we show that the second moment of <math|<gtilde><rsub|t>> can be controlled by exploiting the Lipschitzness of <math|\<ell\><rsub|t>>. In particular,

  <\align*>
    <tformat|<table|<row|<cell|<norm|<gtilde><rsub|t><around|(|x|)>>=<frac|d|2*\<delta\>>*<around*|\||\<ell\><rsub|t>*<around|(|x+\<delta\>*S|)>-\<ell\><rsub|t>*<around|(|x-\<delta\>*S|)>|\|><norm|S>\<le\><frac|G*d|2*\<delta\>><norm|2*\<delta\>*S>=G*d<nbsp>.>>>>
  </align*>

  We are now ready to prove the main result of this section. Namely, that the pseudo-regret of OSGD run using the gradient estimate<nbsp>(<reference|eq:two-point-est>) is of order <math|<sqrt|n>>. We assume that the point <math|<tX><rsub|t>> played by OSGD at each time <math|t> is randomly drawn between the two points <math|X<rsub|t><rsup|+>> and <math|X<rsub|t><rsup|->> where the loss function is queried.

  <\theorem>
    [Regret of OSGD with two-points feedback]<label|th:two-point> Let <math|<cK>\<subseteq\><R><rsup|d>> be a closed convex set such that <math|r<space|0.17em><Ball>\<subseteq\><cK>\<subseteq\>R*<space|0.17em><Ball>> for some <math|r,R\<gtr\>0>. Let <math|<cL>> be a set of <math|G>-Lipschitz differentiable and convex losses. Fix <math|\<delta\>\<gtr\>0> and assume OSGD is run on <math|<around*|(|1-<tfrac|\<delta\>|r>|)>*<cK>> with learning rate <math|\<eta\>\<gtr\>0> and gradient estimates<nbsp>(<reference|eq:two-point-est>),

    <\equation*>
      <gtilde><rsub|t><around|(|x<rsub|t>|)>=<frac|d|2*\<delta\>>*<around*|(|\<ell\><rsub|t><around|(|X<rsub|t><rsup|+>|)>-\<ell\><rsub|t><around|(|X<rsub|t><rsup|->|)>|)>*S<rsub|t>
    </equation*>

    where <math|S<rsub|1>,S<rsub|2>,\<ldots\>\<in\><Sphere>> are independent. For each <math|t=1,2,\<ldots\>> let <math|<tX><rsub|t>> be drawn at random between <math|X<rsub|t><rsup|+>> and <math|X<rsub|t><rsup|->>. Then the following holds

    <\equation*>
      <oR><rsub|n>\<le\><frac|R<rsup|2>|\<eta\>>+\<eta\>*<around|(|G*d|)><rsup|2>*n+\<delta\>*<around*|(|3+<frac|R|r>|)>*G*n<nbsp>.
    </equation*>

    Moreover, if <math|\<eta\>=<tfrac|R|G*D<sqrt|n>>> then for <math|\<delta\>\<to\>0> we have that

    <\equation*>
      <oR><rsub|n>\<le\>2*R*G*d*<sqrt|n><nbsp>.
    </equation*>
  </theorem>

  <\proof>
    First of all, we must check that the points <math|X<rsub|t><rsup|+>=x<rsub|t>+\<delta\>*S> and <math|X<rsub|t><rsup|->=x<rsub|t>-\<delta\>*S> on which <math|\<ell\><rsub|t>> is queried belong to <math|<cK>>. To see this, recall that <math|x<rsub|t>\<in\><around*|(|1-<tfrac|\<delta\>|r>|)>*<cK>>. Now, setting <math|\<alpha\>=<tfrac|\<delta\>|r>> we have that <math|X<rsub|t><rsup|+>,X<rsub|t><rsup|->\<in\><around|(|1-\<alpha\>|)>*<cK>+\<alpha\>*r<space|0.17em><Sphere>>. Since <math|r<space|0.17em><Sphere>\<subseteq\><cK>> and <math|<cK>> is convex, we obtain <math|<around|(|1-\<alpha\>|)>*<cK>+\<alpha\>*r<space|0.17em><Sphere>\<subseteq\><around|(|1-\<alpha\>|)>*<cK>+\<alpha\>*<cK>\<subseteq\><cK>>. Hence, using Lemma<nbsp><reference|l:two-point> with the choice <math|\<xi\>=<tfrac|\<delta\>|r>> we immediately get that for all <math|x\<in\><cK>>,

    <\align*>
      <tformat|<table|<row|<cell|<big|sum><rsub|t=1><rsup|n>>|<cell|<E><around|(|\<ell\><rsub|t><around|(|<tX><rsub|t>|)>\|X<rsub|t><rsup|+>,X<rsub|t><rsup|->|)>-<big|sum><rsub|t=1><rsup|n>\<ell\><rsub|t><around|(|x|)>>>|<row|<cell|>|<cell|\<le\><frac|1|2>*<big|sum><rsub|t=1><rsup|n><around*|(|\<ell\><rsub|t><around|(|X<rsub|t><rsup|+>|)>+\<ell\><rsub|t><around|(|X<rsub|t><rsup|->|)>|)>-<big|sum><rsub|t=1><rsup|n>\<ell\><rsub|t><around|(|x|)>>>|<row|<cell|>|<cell|\<le\><big|sum><rsub|t=1><rsup|n><tloss><rsub|t><around|(|x<rsub|t>|)>-<big|sum><rsub|t=1><rsup|n><tloss><rsub|t>*<around*|(|<around*|(|1-<tfrac|\<delta\>|r>|)>*x|)>+\<delta\>*<around*|(|3+<frac|R|r>|)>*G*n<nbsp>.>>>>
    </align*>

    Since we already related the loss of <math|<tX><rsub|t>> to the loss of <math|x<rsub|t>>, we can now apply Theorem<nbsp><reference|th:OSMD2> in the special case of <math|<wide|x|~><rsub|t>=x<rsub|t>> and with the sequence of losses <math|<around|(|<tloss><rsub|t>|)>>. This gives

    <\align*>
      <tformat|<table|<row|<cell|<E>*<big|sum><rsub|t=1><rsup|n><tloss><rsub|t><around|(|x<rsub|t>|)>-<E>*<big|sum><rsub|t=1><rsup|n><tloss><rsub|t>*<around*|(|<around*|(|1-<tfrac|\<delta\>|r>|)>*x|)>>|<cell|\<le\><frac|R<rsup|2>|\<eta\>>+\<eta\>*<big|sum><rsub|t=1><rsup|n><E><norm|<gtilde><rsub|t><around|(|x<rsub|t>|)>><rsup|2>>>|<row|<cell|>|<cell|\<le\><frac|R<rsup|2>|\<eta\>>+\<eta\>*<around|(|G*d|)><rsup|2>*n>>>>
    </align*>

    where we overapproximated <math|<norm|<around*|(|1-<tfrac|\<delta\>|r>|)>*<cK>>\<le\><norm|<cK>>=R>. This concludes the proof.
  </proof>

  <section|One-point bandit feedback>

  Building on the analysis of the previous section, it is not hard to show that the pseudo-regret can be bounded even when the loss function at each time <math|t> is queried in only <with|font-shape|slanted|one> point. However, we pay this reduced bandit feedback with a worse rate of <math|n<rsup|3/4>> in the pseudo-regret bound. It is not known if this rate is optimal, or if it is possible to get a <math|<sqrt|n>> regret as in the two-points setting.

  The one-point estimate at time <math|t> is defined by

  <\equation>
    <label|eq:one-point-est><gtilde><rsub|t><around|(|x|)>=<frac|d|\<delta\>>*\<ell\><rsub|t>*<around|(|x+\<delta\>*S|)>*S
  </equation>

  where <math|S> is drawn at random from <math|<Sphere>>. Obviously, Lemma<nbsp><reference|l:stokes> can be applied to get <math|<E>*<space|0.17em><gtilde><rsub|t><around|(|x|)>=\<nabla\>*<tloss><rsub|t><around|(|x|)>> where, we recall, <math|<tloss><rsub|t><around|(|x|)>=<E>*<space|0.17em>\<ell\><rsub|t>*<around|(|x+\<delta\>*B|)>>. Differences with the two-point case arise when we bound the second moment of this new <math|<gtilde><rsub|t>>. Indeed, if <math|x+\<delta\>*S\<in\><cK>> and the maximum value of each <math|\<ell\><rsub|t>> in <math|<cK>> is bounded by <math|L>, then

  <\equation*>
    <norm|<gtilde><rsub|t><around|(|x|)>>=<frac|d|\<delta\>>*<around*|\||\<ell\><rsub|t>*<around|(|x+\<delta\>*S|)>|\|><norm|S>\<le\><frac|d*L|\<delta\>><nbsp>.
  </equation*>

  Note the inverse dependence on <math|\<delta\>>. This dependence plays a key role in the final bound, as the next result shows.

  <\theorem>
    [Regret of OSGD with one-point feedback] Let <math|<cK>\<subseteq\><R><rsup|d>> be a closed convex set such that <math|r<space|0.17em><Ball>\<subseteq\><cK>\<subseteq\>R*<space|0.17em><Ball>> for some <math|r,R\<gtr\>0>. Let <math|<cL>> be a set of <math|G>-Lipschitz differentiable and convex losses, uniformly bounded by <math|L> (that is <math|<around|\|||\|>*\<ell\><around|\|||\|><rsub|\<infty\>>\<leq\>L,\<forall\>\<ell\>\<in\><cL>>). Fix <math|\<delta\>\<gtr\>0> and assume OSGD is run on <math|<around*|(|1-<tfrac|\<delta\>|r>|)>*<cK>> with learning rate <math|\<eta\>\<gtr\>0> and gradient estimates<nbsp>(<reference|eq:one-point-est>),

    <\equation*>
      <gtilde><rsub|t><around|(|x<rsub|t>|)>=<frac|d|\<delta\>>*\<ell\><rsub|t><around|(|<tX><rsub|t>|)>*S<rsub|t>
    </equation*>

    where <math|<tX><rsub|t>=x<rsub|t>+\<delta\>*S<rsub|t>> and <math|S<rsub|1>,S<rsub|2>,\<ldots\>\<in\><Sphere>> are independent. Then the following holds

    <\equation*>
      <oR><rsub|n>\<le\><frac|R<rsup|2>|\<eta\>>+<frac|<around|(|d*L|)><rsup|2>|\<delta\><rsup|2>>*\<eta\>*n+\<delta\>*<around*|(|3+<frac|R|r>|)>*G*n<nbsp>.
    </equation*>

    Moreover, if

    <\equation*>
      \<delta\>=<frac|1|<around|(|2*n|)><rsup|1/4>>*<sqrt|<frac|R*d*L|<around*|(|3+<tfrac|R|r>|)>*G>>*<space|2em><text|and><space|2em>\<eta\>=<frac|1|<around|(|2*n|)><rsup|3/4>>*<sqrt|<frac|R<rsup|3>|d*L*<around*|(|3+<tfrac|R|r>|)>*G>>
    </equation*>

    then

    <\equation*>
      <oR><rsub|n>\<le\>4*n<rsup|3/4>*<sqrt|R*d*L*<around*|(|3+<tfrac|R|r>|)>*G><nbsp>.
    </equation*>
  </theorem>

  <\proof>
    The proof follows along the same lines as the proof of Theorem<nbsp><reference|th:two-point>. Indeed, we can show that the points <math|<tX><rsub|t>=x<rsub|t>+\<delta\>*S> on which <math|\<ell\><rsub|t>> is queried belong to <math|<cK>>. Then, using an easy modification of Lemma<nbsp><reference|l:two-point> we get that for all <math|x\<in\><cK>>,

    <\align*>
      <tformat|<table|<row|<cell|<big|sum><rsub|t=1><rsup|n>>|<cell|<E><around|(|\<ell\><rsub|t><around|(|<tX><rsub|t>|)>\|X<rsub|t><rsup|+>,X<rsub|t><rsup|->|)>-<big|sum><rsub|t=1><rsup|n>\<ell\><rsub|t><around|(|x|)>>>|<row|<cell|>|<cell|\<le\><big|sum><rsub|t=1><rsup|n><tloss><rsub|t><around|(|x<rsub|t>|)>-<big|sum><rsub|t=1><rsup|n><tloss><rsub|t>*<around*|(|<around*|(|1-<tfrac|\<delta\>|r>|)>*x|)>+\<delta\>*<around*|(|3+<frac|R|r>|)>*G*n<nbsp>.>>>>
    </align*>

    Applying Theorem<nbsp><reference|th:OSMD2> as in the proof of Theorem<nbsp><reference|th:two-point> gives

    <\align*>
      <tformat|<table|<row|<cell|<E>*<big|sum><rsub|t=1><rsup|n><tloss><rsub|t><around|(|x<rsub|t>|)>-<E>*<big|sum><rsub|t=1><rsup|n><tloss><rsub|t>*<around*|(|<around*|(|1-<tfrac|\<delta\>|r>|)>*x|)>>|<cell|\<le\><frac|R<rsup|2>|\<eta\>>+\<eta\>*<big|sum><rsub|t=1><rsup|n><E><norm|<gtilde><rsub|t><around|(|x<rsub|t>|)>><rsup|2>>>|<row|<cell|>|<cell|\<le\><frac|R<rsup|2>|\<eta\>>+<frac|<around|(|d*L|)><rsup|2>|\<delta\><rsup|2>>*\<eta\>*n<nbsp>.>>>>
    </align*>
  </proof>

  <section|Nonlinear stochastic bandits><label|s:nonlinear-stochastic>

  We conclude with a simple example of nonlinear bandits in the stochastic setting. Unlike the gain-based analysis of stochastic bandits of Chapter<nbsp><reference|stochastic>, here we keep in with the convention used throughout this chapter and work exclusively with losses.

  We consider a simple unidimensional setting where arms are points in the unit interval <math|<around|[|0,1|]>>. If at time <math|t> a point <math|x<rsub|t>\<in\><around|[|0,1|]>> is played, the loss is the realization of an independent random variable <math|Y<rsub|t>\<in\><around|[|0,1|]>> with expected value <math|<E><around|[|Y<rsub|t>\|x<rsub|t>|]>=\<mu\><around|(|x<rsub|t>|)>>, where <math|\<mu\>:<around|[|0,1|]>\<to\><around|[|0,1|]>> is a fixed but unknown mean loss function. Similarly to Chapter<nbsp><reference|stochastic>, here the pseudo-regret after <math|n> plays of a given strategy can be rewritten as

  <\equation*>
    <oR><rsub|n>=<big|sum><rsub|t=1><rsup|n>\<mu\><around|(|x<rsub|t>|)>-n*max<rsub|x\<in\><around|[|0,1|]>> \<mu\><around|(|x|)>
  </equation*>

  where <math|x<rsub|1>,\<ldots\>,x<rsub|n>\<in\><around|[|0,1|]>> denote the points played by the strategy.

  Throughout this section, we assume that <math|\<mu\>:<around|[|0,1|]>\<to\><around|[|0,1|]>> is unimodal, but not necessarily convex. This means there exist a unique <math|x<rsup|\<ast\>>=<argmin><rsub|x\<in\><around|[|0,1|]>>\<mu\><around|(|x|)>> such that <math|\<mu\><around|(|x|)>> is monotone decreasing for <math|x\<in\><around|[|0,x<rsup|\<ast\>>|]>> and monotone increasing for <math|x\<in\><around|[|x<rsup|\<ast\>>,1|]>>. For example, if <math|\<mu\>> can be written as <math|\<mu\><around|(|x|)>=x*<space|0.17em>f<around|(|x|)>> where <math|f:<around|[|0,1|]>\<to\><around|[|0,1|]>> is differentiable, monotone decreasing, and such that <math|x*<space|0.17em>f<rprime|'><around|(|x|)>> is strictly decreasing with <math|f<around|(|0|)>\<gtr\>0>, then <math|\<mu\>> is unimodal.

  The bandit strategy we analyze in this section is based on the golden section search due to <cite|kiefer1953sequential>, which is a general algorithm for finding the extremum of a unimodal function. Similarly to binary search, each step of golden section search narrows the interval in which the extremum is found by querying the function value at certain points that are chosen depending on the outcome of previous queries. Each query shrinks the interval by a factor of <math|<tfrac|1|\<varphi\>>=0.618*\<ldots\>>, where <math|\<varphi\>=<tfrac|1|2><around*|(|1+<sqrt|5>|)>> is the golden ratio.

  In our case, queries (i.e., plays) at <math|x> return a perturbed version of <math|\<mu\><around|(|x|)>>. Since <math|\<mu\>> is bounded, Hoeffding bounds ensure that we can find the minimum of <math|\<mu\>> by repeatedly querying each point <math|x> requested by the golden search algorithm. However, in order to have a lower bound on the accuracy with which each <math|\<mu\>> needs to be estimated, we must assume the following condition: there exists <math|C<rsub|L>\<gtr\>0> such that

  <\equation>
    <label|eq:strongmax><around*|\||\<mu\><around|(|x|)>-\<mu\><around|(|x<rprime|'>|)>|\|>\<ge\>C<rsub|L>*<around|\||x-x<rprime|'>|\|>
  </equation>

  for each <math|x,x<rprime|'>> that belong either to <math|<around|[|0,x<rsup|\<ast\>>-1/C<rsub|L>|]>> or to <math|<around|[|x<rsup|\<ast\>>+1/C<rsub|L>,1|]>>.

  Finally, irrespective to the uncertainty in the evaluation of <math|\<mu\>>, in order to bound the regret incurred by golden section search we need a Lipschitz condition on <math|\<mu\>>. Namely, there exists <math|C<rsub|H>\<gtr\>0> such that <math|<around*|\||\<mu\><around|(|x|)>-\<mu\><around|(|x<rprime|'>|)>|\|>\<le\>C<rsub|H>*<around|\||x-x<rprime|'>|\|>> for all <math|x,x<rprime|'>\<in\><around|[|0,1|]>>.

  We are now ready to introduce our stochastic version of the golden section search algorithm.

  <\bookbox>
    <with|font-shape|italic|SGS (Stochastic Golden Search):>

    <vspace*|0.5fn><no-indent>Parameters: <math|<ve><rsub|1>,<ve><rsub|2>,\<ldots\>\<gtr\>0>.<next-line>Initialize: <math|x<rsub|A>=0*<space|1em>x<rsub|B>=<frac|1|\<varphi\><rsup|2>>*<space|1em>x<rsub|C>=1>.

    <vspace*|0.5fn><no-indent>For each stage <math|s=1,\<ldots\>,n>

    <\itemize>
      <item*|(1)>Let <math|<dt>*x<rsub|B><rprime|'>=<around*|{|<tabular*|<tformat|<cwith|1|-1|1|1|cell-halign|c>|<cwith|1|-1|1|1|cell-lborder|0ln>|<cwith|1|-1|2|2|cell-halign|l>|<cwith|1|-1|2|2|cell-rborder|0ln>|<cwith|1|1|1|-1|cell-valign|top>|<cwith|1|1|1|-1|cell-vmode|exact>|<cwith|1|1|1|-1|cell-height|<plus|1fn|1mm>>|<table|<row|<cell|x<rsub|B>-<tfrac|1|\<varphi\><rsup|2>><around|(|x<rsub|B>-x<rsub|A>|)>>|<cell|x<rsub|B>-x<rsub|A>\<gtr\>x<rsub|C>-x<rsub|B>>>|<row|<cell|x<rsub|B>+<tfrac|1|\<varphi\><rsup|2>><around|(|x<rsub|C>-x<rsub|B>|)>>|<cell|<text|otherwise>>>>>>|\<nobracket\>>> and rename points <math|x<rsub|B>,x<rsub|B><rprime|'>> so that <math|x<rsub|A>\<less\>x<rsub|B>\<less\>x<rsub|B><rprime|'>\<less\>x<rsub|C>>.

      <item*|(2)>Play each point in <math|<around|{|x<rsub|A>,x<rsub|B>,x<rsub|B><rprime|'>,x<rsub|C>|}>> for <math|<tfrac|2|<ve><rsub|s><rsup|2>>ln <around|(|6*n|)>> times and let <math|<xhat>> be the point with lowest total loss in this stage.

      <item*|(3)>If <math|<xhat>\<in\><around|{|x<rsub|A>,x<rsub|B>|}>> then eliminate interval <math|<around|(|x<rsub|B><rprime|'>,x<rsub|C>|]>> and let <math|x<rsub|C>=x<rsub|B><rprime|'>>,

      <item*|(4)>else eliminate interval <math|<around|[|x<rsub|A>,x<rsub|B>|)>> and let <math|x<rsub|A>=x<rsub|B>>.
    </itemize>
  </bookbox>

  Recall that golden section search proceeds as follows: given three queried points <math|x<rsub|A>\<less\>x<rsub|B>\<less\>x<rsub|C>> where the distance of <math|x<rsub|B>> to the other two points is in the golden ratio (<math|x<rsub|B>> might be closer to <math|x<rsub|A>> or to <math|x<rsub|C>> depending on past queries), the next point <math|x<rsub|B><rprime|'>> is queried in the largest interval between <math|x<rsub|B>-x<rsub|A>> and <math|x<rsub|C>-x<rsub|B>> so that the distance of <math|x<rsub|B><rprime|'>> to the extrema of that largest interval is in the golden ratio. Assume the resulting ordering is <math|x<rsub|A>\<less\>x<rsub|B>\<less\>x<rsub|B><rprime|'>\<less\>x<rsub|C>>. Then we drop either <math|<around|[|x<rsub|A>,x<rsub|B>|)>> or <math|<around|(|x<rsub|B><rprime|'>,x<rsub|C>|]>> according to whether the smallest value of <math|\<mu\>> is found in, respectively, <math|<around|{|x<rsub|B><rprime|'>,x<rsub|C>|}>> or <math|<around|{|x<rsub|B><rprime|'>,x<rsub|C>|}>>. The remaining triplet is such that the distance of the middle point to the other two is again in the golden ratio.

  Using elementary algebraic identities for <math|\<varphi\>>, one can show that setting <math|x<rsub|C>-x<rsub|A>=1> the following equalities hold at any step of SGS:

  <\equation>
    <label|eq:sgs-ratios>x<rsub|B>-x<rsub|A>=<frac|1|\<varphi\><rsup|2>>*<space|1em>x<rsub|B><rprime|'>-x<rsub|B>=<frac|1|\<varphi\><rsup|3>>*<space|1em>x<rsub|C>-x<rsub|B><rprime|'>=<frac|1|\<varphi\><rsup|2>><nbsp>.
  </equation>

  Since either <math|x<rsub|B>-x<rsub|A>> or <math|x<rsub|C>-x<rsub|B><rprime|'>> are eliminated at each stage, at each stage SGS shrinks the search interval by a factor of <math|1-\<varphi\><rsup|-2>=<tfrac|1|\<varphi\>>>.

  Let <math|<around|[|x<rsub|A,s>,x<rsub|B,s>|]>> be the search interval at the beginning of stage <math|s+1>, where <math|x<rsub|A,0>=0> and <math|x<rsub|C,0>=1>.

  <\lemma>
    If <math|<ve><rsub|s>=C<rsub|L>*\<varphi\><rsup|-<around|(|s+3|)>>> then

    <\equation*>
      \<bbb-P\><around*|(|x<rsup|\<ast\>>\<nin\><around|[|x<rsub|A,s>,x<rsub|C,s>|]>|)>\<le\><frac|s|n>
    </equation*>

    holds uniformly over all stages <math|s\<ge\>1>.
  </lemma>

  <\proof>
    Once the interval containing <math|x<rsup|\<ast\>>> is eliminated it is never recovered, thus we have

    <\align>
      <tformat|<table|<row|<cell|\<bbb-P\>>|<cell|<around*|(|x<rsup|\<ast\>>\<nin\><around|[|x<rsub|A,s>,x<rsub|C,s>|]>|)>\<le\>\<bbb-P\><around*|(|x<rsup|\<ast\>>\<nin\><around|[|x<rsub|A,s-1>,x<rsub|C,s-1>|]>|)>>>|<row|<cell|>|<cell|<space|1em>+\<bbb-P\><around*|(|x<rsup|\<ast\>>\<nin\><around|[|x<rsub|A,s>,x<rsub|C,s>|]><space|0.17em><mid|\|><space|0.17em>x<rsup|\<ast\>>\<in\><around|[|x<rsub|A,s-1>,x<rsub|C,s-1>|]>|)><nbsp>.<eq-number><label|eq:sgs-rec>>>>>
    </align>

    Let <math|X<rsub|s>=<around|{|x<rsub|A,s-1>,x<rsub|B,s-1>,x<rsub|B,s-1><rprime|'>,x<rsub|C,s-1>|}>> where <math|x<rsub|B,s-1>\<less\>x<rsub|B,s-1><rprime|'>> are computed in step <math|1> of stage <math|s>. Let <math|<muhat><rsub|s><around|(|x|)>> be the sample loss of point <math|x\<in\>X<rsub|s>> in stage <math|s> and let <math|<xhat><rsub|s>=<argmin><rsub|x\<in\>X<rsub|s>><muhat><around|(|x|)>>. Since at stage <math|s> every point in <math|X<rsub|s>> is played <math|<tfrac|2|<ve><rsub|s><rsup|2>>ln <around|(|6*n|)>> times<footnote|For simplicity, we assume these numbers are integers.>, Hoeffding bounds imply that <math|<around*|\||\<mu\><around|(|x|)>-<muhat><rsub|s><around|(|x|)>|\|>\<le\><tfrac|1|2><ve><rsub|s>> with probability at least <math|1-<tfrac|1|6*n>> for all <math|x\<in\>X<rsub|s>> simultaneously. Let

    <\equation*>
      x<rsup|\<ast\>><rsub|s>=<argmin><rsub|x\<in\>X<rsub|s>>\<mu\><around|(|x|)><nbsp>.
    </equation*>

    Now assume <math|x<rsup|\<ast\>>\<in\><around|[|x<rsub|A,s-1>,x<rsub|B,s-1>|]>>. Then <math|x<rsup|\<ast\>>\<nin\><around|[|x<rsub|A,s>,x<rsub|C,s>|]>> implies <math|<muhat><rsub|s><around|(|x<rsub|B<rprime|'>,s-1>|)>\<less\><muhat><around|(|x<rsub|B,s-1>|)>> or <math|<muhat><rsub|s><around|(|x<rsub|C,s-1>|)>\<less\><muhat><around|(|x<rsub|B,s-1>|)>>. Similarly, assume <math|x<rsup|\<ast\>>\<in\><around|[|x<rsub|B<rprime|'>,s-1>,x<rsub|C,s-1>|]>>. Then <math|x<rsup|\<ast\>>\<nin\><around|[|x<rsub|A,s>,x<rsub|C,s>|]>> implies <math|<muhat><rsub|s><around|(|x<rsub|A,s-1>|)>\<less\><muhat><around|(|x<rsub|B<rprime|'>,s-1>|)>> or <math|<muhat><rsub|s><around|(|x<rsub|B,s-1>|)>\<less\><muhat><around|(|x<rsub|B<rprime|'>,s-1>|)>>. In both cases, we need to compare three values of <math|\<mu\>> on the same side with respect to <math|x<rsup|\<ast\>>>. (When <math|x<rsup|\<ast\>>\<in\><around|[|x<rsub|B,s-1>,x<rsub|B<rprime|'>,s-1>|]>> we always have <math|x<rsup|\<ast\>>\<in\><around|[|x<rsub|A,s>,x<rsub|C,s>|]>>.) Hence, we can apply our assumption involving <math|C<rsub|L>>. More precisely, (<reference|eq:sgs-ratios>) implies that after <math|s> stages the search interval has size <math|\<varphi\><rsup|-s>> and <math|min <around|{|x<rsub|B,s>-x<rsub|A,s>,x<rsub|B,s><rprime|'>-x<rsub|B,s>,x<rsub|C,s>-x<rsub|B,s><rprime|'>|}>=\<varphi\><rsup|-<around|(|s+3|)>>><nbsp>. Hence, introducing

    <\equation*>
      \<Delta\><rsub|s>=min <around*|{|<mid|\|>\<mu\><around|(|x<rsub|B,s>|)>-\<mu\><around|(|x<rsub|A,s>|)><mid|\|>,<mid|\|>\<mu\><around|(|x<rsub|B,s><rprime|'>|)>-\<mu\><around|(|x<rsub|B,s>|)><mid|\|>,<mid|\|>\<mu\><around|(|x<rsub|C,s>|)>-\<mu\><around|(|x<rsub|B,s><rprime|'>|)><mid|\|>|}>
    </equation*>

    we have

    <\equation*>
      \<Delta\><rsub|s>\<ge\>C<rsub|L>*min <around|{|x<rsub|B,s>-x<rsub|A,s>,x<rsub|B,s><rprime|'>-x<rsub|B,s>,x<rsub|C,s>-x<rsub|B,s><rprime|'>|}>\<ge\>C<rsub|L>*\<varphi\><rsup|-<around|(|s+3|)>>=<ve><rsub|s><nbsp>.
    </equation*>

    Let <math|T<rsub|s>=<tfrac|8|<ve><rsub|s><rsup|2>>ln <around|(|6*n|)>> the length of stage <math|s>. We can write

    <\align*>
      <tformat|<table|<row|<cell|\<bbb-P\>>|<cell|<around*|(|x<rsup|\<ast\>>\<nin\><around|[|x<rsub|A,s>,x<rsub|C,s>|]><space|0.17em><mid|\|><space|0.17em>x<rsup|\<ast\>>\<in\><around|[|x<rsub|A,s-1>,x<rsub|C,s-1>|]>|)>=\<bbb-P\><around*|(|<muhat><rsub|s><around|(|<xhat><rsub|s>|)>\<less\><muhat><around|(|x<rsup|\<ast\>><rsub|s>|)>|)>>>|<row|<cell|>|<cell|\<le\><big|sum><rsub|x\<in\>X<rsub|s>\<setminus\><around|{|x<rsup|\<ast\>><rsub|s>|}>>\<bbb-P\><around*|(|<muhat><rsub|s><around|(|x|)>\<less\><muhat><around|(|x<rsup|\<ast\>><rsub|s>|)>|)>>>|<row|<cell|>|<cell|\<le\><big|sum><rsub|x\<in\>X<rsub|s>\<setminus\><around|{|x<rsup|\<ast\>><rsub|s>|}>><around*|(|\<bbb-P\><around*|(|<muhat><rsub|s><around|(|x|)>\<less\>\<mu\><around|(|x|)>-<frac|\<Delta\><rsub|s>|2>|)>+\<bbb-P\><around*|(|\<mu\><around|(|x<rsup|\<ast\>><rsub|s>|)>\<less\><muhat><around|(|x<rsup|\<ast\>><rsub|s>|)>-<frac|\<Delta\><rsub|s>|2>|)>|)>>>|<row|<cell|>|<cell|\<le\>6*<space|0.17em>e<rsup|-T<rsub|s>*\<Delta\><rsub|s><rsup|2>/8>>>|<row|<cell|>|<cell|\<le\>6*<space|0.17em>e<rsup|-T<rsub|s>*<ve><rsub|s><rsup|2>/8>\<le\><frac|1|n><nbsp>.>>>>
    </align*>

    Substituting this in<nbsp>(<reference|eq:sgs-rec>) and recurring gives the desired result.
  </proof>

  <\theorem>
    [Regret of SGS] For any unimodal and <math|C<rsub|H>>-Lipschitz mean loss function <math|\<mu\>:<around|[|0,1|]>\<to\><around|[|0,1|]>> that satisfies<nbsp>(<reference|eq:strongmax>), if the SGS algorithm is run with <math|<ve><rsub|s>=C<rsub|L>*\<varphi\><rsup|-<around|(|s+3|)>>> then

    <\equation*>
      <oR><rsub|n>\<le\><frac|C<rsub|H>|C<rsub|L><rsup|2>>*8*\<varphi\><rsup|6>*ln <around|(|6*n|)>*<around*|[|<frac|2*\<varphi\>|\<varphi\>-1>*<sqrt|1+C<rsub|L><rsup|2>*n>+<frac|1|4>*log<rsub|\<phi\>><rsup|2><around*|(|1+C<rsub|L><rsup|2>*n|)>|]><nbsp>.
    </equation*>
  </theorem>

  <\proof>
    We start by decomposing the pseudo-regret as follows,

    <\equation*>
      <oR><rsub|n>\<leq\><big|sum><rsub|s=1><rsup|S>T<rsub|s>*<around*|(|min<rsub|x\<in\>A<rsub|s>> \<mu\><around|(|x|)>-\<mu\><around|(|x<rsup|\<ast\>>|)>|)>+<big|sum><rsub|s=1><rsup|S><around*|(|<big|sum><rsub|t\<in\>T<rsub|s>>\<mu\><around|(|x<rsub|t>|)>-T<rsub|s>*min<rsub|x\<in\>A<rsub|s>> \<mu\><around|(|x|)>|)>.
    </equation*>

    Using the Lipschitz assumption

    <\equation*>
      max<rsub|x,x<rprime|'>\<in\>A<rsub|s>><around*|\||\<mu\><around|(|x|)>-\<mu\><around|(|x<rprime|'>|)>|\|>\<le\>C<rsub|H>*<space|0.17em><around*|\||x<rsub|C,s>-x<rsub|A,s>|\|>
    </equation*>

    and recalling that <math|<around*|\||x<rsub|C,s>-x<rsub|A,s>|\|>\<le\>\<varphi\><rsup|-s>>, we bound the first term in this decomposition as follows

    <\align*>
      <tformat|<table|<row|<cell|<big|sum><rsub|s=1><rsup|S>T<rsub|s>*<around*|(|min<rsub|x\<in\>A<rsub|s>> \<mu\><around|(|x|)>-\<mu\><around|(|x<rsup|\<ast\>>|)>|)>>|<cell|\<le\>T<rsub|s>*C<rsub|H>*<around*|\||x<rsub|C,s>-x<rsub|A,s>|\|><space|0.17em>\<bbb-P\><around*|(|x<rsup|\<ast\>>\<in\><around|[|x<rsub|A,s>,x<rsub|C,s>|]>|)>>>|<row|<cell|>|<cell|<space|1em>+T<rsub|s>*C<rsub|H>\<bbb-P\><around*|(|x<rsup|\<ast\>>\<nin\><around|[|x<rsub|A,s>,x<rsub|C,s>|]>|)>>>|<row|<cell|>|<cell|\<le\><frac|T<rsub|s>*C<rsub|H>|\<varphi\><rsup|s>>+T<rsub|s>*C<rsub|H>*<frac|s|n><nbsp>.>>>>
    </align*>

    The second term is controlled similarly,

    <\align*>
      <tformat|<table|<row|<cell|<big|sum><rsub|s=1><rsup|S><around*|(|<big|sum><rsub|t\<in\>T<rsub|s>>\<mu\><around|(|x<rsub|t>|)>-T<rsub|s>*min<rsub|x\<in\>A<rsub|s>> \<mu\><around|(|x|)>|)>\<le\>T<rsub|s>*C<rsub|H>*<around*|\||x<rsub|C,s>-x<rsub|A,s>|\|>\<le\><frac|T<rsub|s>*C<rsub|H>|\<varphi\><rsup|s>><nbsp>.>>>>
    </align*>

    Hence we get an easy expression for the regret,

    <\align>
      <tformat|<table|<row|<cell|<oR><rsub|n>>|<cell|\<le\>C<rsub|H>*<big|sum><rsub|s=1><rsup|S>T<rsub|s>*<around*|(|<frac|2|\<varphi\><rsup|s>>+<frac|s|n>|)>>>|<row|<cell|>|<cell|\<le\><frac|C<rsub|H>|C<rsub|L><rsup|2>>*8*\<varphi\><rsup|6>*ln <around|(|6*n|)>*<big|sum><rsub|s=1><rsup|S>\<varphi\><rsup|2*s>*<around*|(|<frac|2|\<varphi\><rsup|s>>+<frac|s|n>|)><nbsp>.<eq-number><label|eq:sgs-th>>>>>
    </align>

    We now compute an upper bound on the number <math|S> of stages,

    <\align*>
      <tformat|<table|<row|<cell|n\<le\><big|sum><rsub|s=1><rsup|S>T<rsub|s>=<frac|8*\<varphi\><rsup|6>|C<rsub|L><rsup|2>>*ln <around|(|6*n|)>*<big|sum><rsub|s=1><rsup|S>\<varphi\><rsup|2*s>\<le\><frac|8*\<varphi\><rsup|6>|C<rsub|L><rsup|2>>*ln <around|(|6*n|)><frac|\<varphi\><rsup|2*S+2>|\<varphi\><rsup|2>-1><nbsp>.>>>>
    </align*>

    Solving for <math|n> and overapproximating we get

    <\equation*>
      S\<le\><frac|1|2>*log<rsub|\<phi\>><around*|(|1+C<rsub|L><rsup|2>*n|)><nbsp>.
    </equation*>

    Therefore, the sum in<nbsp>(<reference|eq:sgs-th>) is bounded as follows

    <\align*>
      <tformat|<table|<row|<cell|2*<big|sum><rsub|s=1><rsup|S>\<varphi\><rsup|s>+S<rsup|2>>|<cell|\<le\><frac|2*\<varphi\>|\<varphi\>-1>*\<varphi\><rsup|S>+S<rsup|2>>>|<row|<cell|>|<cell|\<le\><frac|2*\<varphi\>|\<varphi\>-1>*<sqrt|1+C<rsub|L><rsup|2>*n>+<frac|1|4>*log<rsub|\<phi\>><rsup|2><around*|(|1+C<rsub|L><rsup|2>*n|)><nbsp>.>>>>
    </align*>

    Substituting the above in<nbsp>(<reference|eq:sgs-th>) concludes the proof.
  </proof>

  <section|Bibliographic remarks>

  Gradient-free methods for stochastic approximation have been studied for a long time —see the bibliographic remarks at the end of Chapter<nbsp><reference|linear> for some references. However, relatively few results provide regret bounds. The approach presented in this chapter for online convex optimization with bandit feedback was pioneered by <cite-parenthesized|FKM05> and<nbsp><cite-parenthesized|kleinberg2004nearly>. The improved rate for the two-points model was later shown in <cite|ADX10>.

  While the results for nonlinear bandits in the adversarial model are still scarse, there is a far richer body of work in the stochastic model. The result based on golden section search presented in Section<nbsp><reference|s:nonlinear-stochastic> is due to<nbsp><cite-parenthesized|yu2011unimodal>. It represents only a tiny portion of the known results in the stochastic model. In the general case of Lipschitz mean-payoff on a compact subset of <math|<R><rsup|d>>, it can be shown that the minimax regret is <math|\<Omega\><around*|(|n<rsup|<frac|d+1|d+2>>|)>>. Thus the rate rapidly deteriorates as the dimension increases, a phenomenon known as the <with|font-shape|italic|curse of dimensionality>. However it was shown in <cite-parenthesized|KSU08> and <cite-parenthesized|BMSS09> that under a generalized version of equation <eqref|eq:strongmax> it is possible to circumvent the curse of dimensionality and obtain a regret of <math|<wide|O|~><around|(|<sqrt|n>|)>>. This result builds upon and generalizes a sequence of works that include the discretization approach (for the <math|1>-dimensional case) of <cite-parenthesized|kleinberg2004nearly> and <cite-parenthesized|auer2007improved>, as well as the method of <cite-parenthesized|cope2009regret> based on the Kiefer-Wolfowitz procedure (a classical method of stochastic optimization). The key new algorithmic idea introduced in <cite-parenthesized|KSU08> and <cite-parenthesized|BMSS09> is to adaptively partition the set of actions in order to exploit the smoothness of the mean-payoff function around its maximum. We refer the reader to <cite|BMSS11> for the details of this result (which is much more general than what we briefly outlined, in particular it applies for metric spaces, or even more general action sets), as well as a more precise historical account.

  Another direction for nonlinear stochastic bandits was recently investigated in <cite-parenthesized|agarwal2011stochastic>. In this work the authors study the case of a convex mean loss function, and they show how to combine the zeroth-order optimization method of <cite-parenthesized|NY83> with a “center point device” to obtain a regret of <math|<wide|O|~><around|(|<sqrt|n>|)>>.

  A more general version of nonlinear stochastic bandit was also studied in <cite|AKS11>. In this paper the authors assume that the mean-payoff function lies in some known set of functions <math|<cF>>. They define a notion of complexity for the class <math|<cF>>, the haystack dimension <math|<math-up|HD><around|(|<cF>|)>>, and they show that the worst case regret in <math|<cF>> is lower bounded by <math|<math-up|HD><around|(|<cF>|)>>. Unfortunately their upper bound does not match the lower bound, and the authors suggest that the definition of the haystack dimension should be modified in order to obtain matching upper and lower bound.

  Finally, a related problem in a Bayesian setting was studied in<nbsp><cite|SKKS10> and<nbsp><cite|GAOS10>, where it is assumed that the payoff functions are drawn from Gaussian processes.

  <chapter|Variants><label|variants>

  In the previous chapters we explored a few fundamental variations around the basic multi-armed bandit problem. In both the stochastic and adversarial frameworks, these variants basically revolved around a single principle: by adding constraints on the losses (or rewards), it is possible to compete against larger sets of arms. While this is indeed a fundamental axis in the space of bandit problems, it is important to realize that there are many other directions. Indeed, we might sketch a “bandit space” spanning the following coordinates:

  <\itemize>
    <item>Evolution of payoffs over time: stochastic, adversarial, Markovian, ...

    <item>Structure of payoff functions: linear, Lipschitz, Gaussian process, ...

    <item>Feedback structure: full information, bandit, semi-bandit, partial monitoring, ...

    <item>Context structure (if any).

    <item>Notion of regret.
  </itemize>

  Clearly, such extensions greatly increase the number of potential applications of bandit models. While many of these extensions were already discussed in the previous chapters, in the following we focus on others (such as the sleeping bandits or the thruthful bandits) so to visit more exotic regions of the bandit space.

  <section|Markov Decision Processes, restless and sleeping bandits><label|s:mdp>

  Extending further the model of Markovian bandits (mentioned at the end of Chapter<nbsp><reference|intro>), one can also define a general Markov Decision Process (MDP) —see also Section<nbsp><reference|s:mdp>. For example, the stochastic bandit of Chapter<nbsp><reference|stochastic> corresponds to a single-state MDP.

  In full generality, a finite MDP can be described by a set of states <math|<around|{|1,\<ldots\>,S|}>>, a set of actions <math|<around|{|1,\<ldots\>,K|}>>, a set <math|<around|{|p<rsub|i,s>,<space|0.17em>1\<leq\>i\<leq\>K,<space|0.17em>1\<leq\>s\<leq\>S|}>> of transition distributions over <math|S>, and a set <math|<around|{|\<nu\><rsub|i,s>,<space|0.17em>1\<leq\>i\<leq\>K,<space|0.17em>1\<leq\>s\<leq\>S|}>> of reward distributions over <math|<around|[|0,1|]>>. In this model, taking action <math|i> in state <math|s> generates a stochastic reward drawn from <math|\<nu\><rsub|i,s>> and a Markovian transition to a state drawn from <math|p<rsub|i,s>>. Similarly to the multi-armed bandit problem, here one typically assumes that the reward distributions and transition distributions are unknown, and the goal is to navigate through the MDP so as to maximize some function of the obtained rewards. The field that studies this type of problem is called Reinforcement Learning. The interested reader is addressed to <cite|SB98|Kak03|Sze10>. Reinforcement learning results with a flavor similar to those described in the previous chapters can be found in <cite|YMS09|BM10|JOA10|NGSA10>.

  An intermediate model, between stochastic multi-armed bandits and MDPs, is the one of restless bandits. As in Markovian bandits, each arm is associated with a Markovian reward process with its own state space. Each time an arm is chosen, the associated Markov process generates an observable reward and makes a transition to a new state, which is also observed. However, unlike Markovian bandits an unobserved transition occurs for each arm that is not chosen. Using concentration inequalities for Markov chains —see, e.g., <cite|Lez98>, one can basically show that, under suitable assumptions, UCB attains a logarithmic regret for restless bandits as well —see <cite|TL11> and<nbsp><cite|filippi2011optimally>. A more general regret bound for restless bandits has been recently proven by<nbsp><cite|ortner2012regret>.

  An apparently similar problem was studied by <cite|GM11>, where they assume that the reward distributions can abruptly change at unknown time instants (and there is a small number of such change-points). Within this model, the authors prove that the best possible regret is of order <math|<sqrt|n>>, which is matched by the Exp3.P algorithm —see the discussion in Section <reference|sec:exp3S>. Thus, while the two problems (restless bandits and bandits with change-points) might look similar, they are fundamentally different. In particular, note that the latter problem cannot be cast as a MDP.

  Another intermediate model, with important applications, is that of the sleeping bandits. There, it is assumed that the set of available actions is varying over time. We refer the interested reader to <cite|KNS10|KMB09|slivkins2009contextual|KS12> for the details of this model as well as the theoretical guarantees that can be obtained. A somewhat related problem was also studied in <cite|GKSS07> where it is assumed that the set of arms becomes unavailable for a random time after each arm pull (and the distribution of this random time depends on the selected arm).

  <section|Pure exploration problems>

  The focus of bandits, and most of their variants, is on problems where there is a notion of cumulative rewards, which is to be maximized. This criterion leaves out a number of important applications where there is an online aspect (e.g., sequential decisions), but the goal is not maximizing cumulative rewards. The simplest example is perhaps the pure exploration version of stochastic bandits. In this model, at the end of round <math|n> the algorithm has to output a recommendation <math|J<rsub|n>> which represents its estimate for the optimal arm. The focus here is on the control of the so-called simple regret, introduced by <cite|BMS09|BMS11> and defined as <math|r<rsub|n>=\<mu\><rsup|\<ast\>>-<E>*<space|0.17em>\<mu\><rsub|J<rsub|n>>>.

  <cite|BMS09> prove that minimizing the simple regret is fundamentally different from minimizing the pseudo-regret <math|<oR><rsub|n>>, in the sense that one always have <math|r<rsub|n>\<geq\>exp <around|(|-C*<oR><rsub|n>|)>> for some constant <math|C\<gtr\>0> (which depends on the reward distributions). Thus, this regret calls for different bandit algorithms. <cite|ABM10> exhibit a simple strategy with optimal performances up to a logarithmic factor. The idea is very simple: the strategy SR (Successive Rejects) works in <math|K-1> phases. SR keeps a set of active arms, that are sampled uniformly in each phase. At the end of a phase, the arm with smallest empirical mean is removed from the set of active arms. It can be shown that this strategy has a simple regret of order <math|exp <around*|(|-c<frac|n|H*ln K>|)>>, where <math|H=<big|sum><rsub|i\<neq\>i<rsup|\<ast\>>><frac|1|\<Delta\><rsub|i><rsup|2>>> is the complexity measure of identifying the best arm, and <math|c> is a numerical constant. Moreover, a matching lower bound (up to logarithmic factors) was also proved. These ideas were extended in different ways by <cite|GGLB11|BJM11|BWV12>.

  A similar problem was studied in a PAC model by <cite|EMM02>. The goal is to find, with probability at least <math|1-\<delta\>>, an arm with mean at least <math|\<epsilon\>> close the optimal mean, and the relevant quantity is the number of pulls needed to achieve this goal. For this problem, the authors derive an algorithm called Successive Elimination that achieves an optimal number of pulls (up to logarithmic factors). Successive Elimination works as follows: it keeps an estimate of the mean of each arm, together with a confidence interval. If two confidence intervals are disjoint, then the arm with the lowest confidence interval is eliminated. Using this procedure, one can achieve the <math|<around|(|\<epsilon\>,\<delta\>|)>> guarantee with a number of pulls of order <math|H*ln <tfrac|K|\<Delta\>>>. A matching lower bound is due to <cite|MT04>, and further results are discussed by <cite|EMM06>.

  In some applications one is not interested in the best arm, but rather in having a good estimate of the mean <math|\<mu\><rsub|i>> for each arm. In this setting a reasonable measure of performance is given by

  <\equation*>
    L<rsub|n>=<E>*<big|sum><rsub|i=1><rsup|K><around*|(|\<mu\><rsub|i>-<wide|\<mu\>|^><rsub|i,T<rsub|i><around|(|n|)>>|)><rsup|2><nbsp>.
  </equation*>

  Clearly, the optimal static allocation depends only on the variances of the arms, and we denote by <math|L<rsub|n><rsup|\<ast\>>> the performance of this strategy. This setting was introduced by <cite|AGS08>, where the authors studied the regret <math|L<rsub|n>-L<rsub|n><rsup|\<ast\>>>, and showed that a regret of order <math|n<rsup|-3/2>> was achievable. This result was then refined by <cite|CLGMA11|CM11>. The basic idea in these papers is to resort to the optimism in face of uncertainty principle, and to approximate the optimal static allocation by replacing the true variance with an upper confidence bound on it.

  <section|Dueling bandits><label|sec:dueling>

  An interesting variation of stochastic bandits was recently studied by <cite|YBKJ09>. The model considered in that paper is called dueling bandits. The main idea is that the player has to choose a pair or arms <math|<around|(|I<rsub|t>,J<rsub|t>|)>> at each round, and can only observe the relative performances of these two arms, i.e., the player only knows which arm had the highest reward. More formally, in dueling bandits we assume that there exists a total ordering <math|\<succ\>> on <math|<around|{|1,\<ldots\>,K|}>> with the following properties:

  <\enumerate>
    <item>If <math|i\<succ\>j>, then the probability that the reward of arm <math|i> is larger than the reward of arm <math|j> is equal to <math|<frac|1|2>+\<Delta\><rsub|i,j>> with <math|\<Delta\><rsub|i,j>\<gtr\>0>.

    <item>If <math|i\<succ\>j\<succ\>k>, then <math|\<Delta\><rsub|i,j>+\<Delta\><rsub|j,k>\<geq\>\<Delta\><rsub|i,k>\<geq\>max <around*|{|\<Delta\><rsub|i,j>,\<Delta\><rsub|j,k>|}>>.
  </enumerate>

  Upon selecting a pair <math|<around|(|I<rsub|t>,J<rsub|t>|)>>, the player receives a random variable drawn from a Bernoulli distribution with parameter <math|<frac|1|2>+\<Delta\><rsub|i,j>>. In this setting a natural regret notion is the following quantity, where <math|i<rsup|\<ast\>>> is the largest element in the ordering <math|\<succ\>>,

  <\equation*>
    <E>*<big|sum><rsub|t=1><rsup|n><around*|(|\<Delta\><rsub|i<rsup|\<ast\>>,I<rsub|t>>+\<Delta\><rsub|i<rsup|\<ast\>>,J<rsub|t>>|)>.
  </equation*>

  It was proved in <cite|YBKJ09> that the optimal regret for this problem is of order <math|<frac|K|\<Delta\>>*log n>, where <math|\<Delta\>=min<rsub|i\<neq\>j> \<Delta\><rsub|i,j>>. A simple strategy that attains this rate, based on the Successive Elimination algorithm of <cite|EMM02>, was proposed by <cite|YJ11>.

  <section|Discovery with probabilistic expert advice>

  <cite|BEG11> study a model with a stochastic bandit flavor (in fact it can be cast as an MDP), where the key for the analysis is a sort of 'non-linear' regret bound. In this model rewards represent items in some set <math|<cX>> which is partitioned in a subset <math|A\<subset\><cX>> of interesting items and in a subset <math|<cX>\<setminus\>A> of non-interesting items. The goal is to maximize the total expected number of interesting items found after <math|n> pulls, where observing twice the same item does not help. A natural notion of regret is obtained by comparing the number of interesting items <math|F<around|(|n|)>> found by a given strategy to the number <math|F<rsup|\<ast\>><around|(|n|)>> found by the optimal strategy. It turns out that analyzing such regret directly is difficult. The first issue is that in this problem the notion of a “good” arm is dynamic, in the sense that an arm could be very good for a few pulls and then completely useless. Furthermore a strategy making bad decisions in the beginning will have better opportunities in the future than the optimal strategy (which already discovered some interesting items). Taking into account these issues, it turns out that it is easier to show that for good strategies, <math|F<around|(|n|)>> is not too far from <math|F<rsup|\<ast\>><around|(|n<rprime|'>|)>>, where <math|n<rprime|'>> is not much smaller than <math|n>. Such a statement – which can be interepreted as a non-linear regret bound – shows that the analyzed strategy slightly 'lags' behind the optimal strategy. In <cite|BEG11> a non-linear regret bound is derived for an algorithm based on estimating the mass of interesting items left on each arm (the so-called Good-Turing estimator), combined with the optimism in face of uncertainty principle of Chapter <reference|stochastic>. We refer the reader to <cite|BEG11> for more precise statements.

  <section|Many-armed bandits>

  The many-armed bandit setting was introduced by <cite|BCZHS97>, and then extended and refined by <cite|WAM08>. This setting corresponds to a stochastic bandit with an infinite number of arms. The extra assumption that makes this problem feasible is a prior knowledge on the distribution of the arms. More precisely, when the player ask to “add” a new arm to his current set of active arms, one assumes that the probability that this arm is <math|\<epsilon\>>-optimal is of order <math|\<epsilon\><rsup|\<beta\>>>, for some known <math|\<beta\>\<gtr\>0>. Thus the player faces a trade-off between exploitation, exploration, and discovery, where the last component comes from the fact that the player needs to consider new arms to make sure that he has an active <math|\<epsilon\>>-optimal arm. Using a UCB strategy on the active arms, and by adding new arms at a rate which depends on <math|\<beta\>>, <cite|WAM08> prove that a regret of order

  <\equation*>
    n<rsup|max <around*|{|<frac|1|2>,<space|0.17em><frac|\<beta\>|1+\<beta\>>|}>>
  </equation*>

  is achievable in this setting.

  <section|Truthful bandits><label|sec:truthful>

  A popular application domain for bandit algorithms is ad placement on the Web. In the pay-per-click model, for each incoming user <math|t=1,2,\<ldots\>> the publisher selects an advertiser <math|I<rsub|t>> from a pool of <math|K> advertisers, and display the corresponding ad to the user. The publisher then gets a reward if the ad is clicked by the user. This problem is well modeled by the multi-armed bandit setting. However, there is a fundamental aspect of the ad placement process which is overlooked by this formulation. Indeed, prior to running an ad-selection algorithm (i.e., a bandit algorithm), each advertiser <math|i\<in\><around|{|1,\<ldots\>,K|}>> issues a bet <math|b<rsub|i>>. This number is how much <math|i> is willing to pay for a click. Each bidder keeps also a private value <math|v<rsub|i>>, which is the true value <math|i> assigns to a click. Because a rational bidder ensures that <math|b<rsub|i>\<le\>v<rsub|i>>, the difference <math|v<rsub|i>-b<rsub|i>> defines the utility for bidder <math|i>. The basic idea of <with|font-shape|italic|truthful> bandits is to construct a bandit algorithm such that each advertiser has no incentive in submitting a bet <math|b<rsub|i>> such that <math|b<rsub|i>\<less\>v<rsub|i>>. A natural question to ask is whether this restriction to truthful algorithms changes the dynamics of the multi-armed bandit problem. This has investigated in a number of papers, including<nbsp><cite|BSS09|DK09|BKS10|WS12>. Thruthful bandits are part of a more general thread of research at the interface between bandits and Mechanism Design.

  <section|Concluding remarks>

  As pointed out in the introduction, the growing interest for bandits arises from the large number of industrially relevant problems that can be modeled as a multi-armed bandit. In particular, the sequential nature of the bandit setting makes it perfectly suited to various Internet and Web applications. These include search engine optimization with dueling bandits, or ad placement with contextual bandits and truthful bandits, see the references in, respectively, Section<nbsp><reference|sec:dueling>, Section<nbsp><reference|sec:contextual> and Section<nbsp><reference|sec:truthful>.

  Multi-armed bandits also proved to be very useful in other areas. For example, thanks to the strong connections between bandits and Markov Decision Processes, a breakthrough in Monte Carlo Tree Search (MCTS) was achieved using bandits ideas. More precisely, based on the sparse planning idea of <cite|KMN02>, <cite|KS06> introduced a new MCTS strategy called UCT (UCB applied to Trees) that led to a substantial advancement in Computer Go performance, see <cite|GWMT06>. Note that, from a theoretical point of view UCT was proved to perform poorly by <cite|CM07>, and a strategy based on a similar idea, but with improved theoretical performance, was proposed by <cite|BM10>. Other applications in related directions have also been explored, see for example <cite|TT09|HT10b> and many others.

  Many new domains of application for bandits problems are currently investigated. For example: multichannel opportunistic communications<nbsp><cite|LZK10>, model selection<nbsp><cite|ADBL11>, boosting<nbsp><cite|BK11>, management of dark pools of liquidity (a recent type of stock exchange)<nbsp><cite|ABD10>, security analysis of power systems<nbsp><cite|BEG11>.

  Given the fast pace of new variants, extensions, and applications coming out every week, we had to make tough decisions about what to present in this survey. We apologize for everything we had to leave out. On the other hand, we do hope that what we decided to put in will enthuse more researchers about entering this exciting field.

  <appendix*|Acknowledgements>

  We would like to thank Mike Jordan for proposing to write this survey and James Finlay for keeping us on track. The table of contents was laid down with the help of Gábor Lugosi. We would also like to express our warm thanks to the reviewers, whose insightful comments have led to many substantial improvements. And a special thank goes to the ‘‘non-anonymous'' referee Alexandrs Slivkins, whose review stands out for breadth and depth. Thank you Alexandrs, you have done a really exceptional job!

  Nicolò Cesa-Bianchi gratefully acknowledges partial support by the PASCAL2 Network of Excellence under EC grant no. 216886.

  \;

  <\bibliography|bib|tm-plain|SurveyBCB12>
    <\bib-list|175>
      <bibitem*|1><label|bib-AAGO06>C.<nbsp>Allenberg, P.<nbsp>Auer, L.<nbsp>Györfi, and G.<nbsp>Ottucsák. <newblock>Hannan consistency in on-line learning in case of unbounded losses under partial monitoring. <newblock>In <em|Proceedings of the 17th International Conference on Algorithmic Learning Theory (ALT)>, 2006.<newblock>

      <bibitem*|2><label|bib-AB09>J.-Y. Audibert and S.<nbsp>Bubeck. <newblock>Minimax policies for adversarial and stochastic bandits. <newblock>In <em|Proceedings of the 22nd Annual Conference on Learning Theory (COLT)>, 2009.<newblock>

      <bibitem*|3><label|bib-AB10>J.-Y. Audibert and S.<nbsp>Bubeck. <newblock>Regret bounds and minimax policies under partial monitoring. <newblock><em|Journal of Machine Learning Research>, 11: 2635–2686, 2010.<newblock>

      <bibitem*|4><label|bib-ABD10>A.<nbsp>Agarwal, P.<nbsp>Bartlett, and M.<nbsp>Dama. <newblock>Optimal allocation strategies for the dark pool problem. <newblock>In <em|Proceedings of the 13th International Conference on Artificial Intelligence and Statistics (AISTATS)>, JMLR Workshop and Conference Proceedings Volume 9, 2010a.<newblock>

      <bibitem*|5><label|bib-abe1999associative>N.<nbsp>Abe and P.M. Long. <newblock>Associative reinforcement learning using linear probabilistic concepts. <newblock>In <em|Proceedings of the 16th International Conference on Machine Learning (ICML)>, 1999.<newblock>

      <bibitem*|6><label|bib-ABL11>J.-Y. Audibert, S.<nbsp>Bubeck, and G.<nbsp>Lugosi. <newblock>Minimax policies for combinatorial prediction games. <newblock>In <em|Proceedings of the 24th Annual Conference on Learning Theory (COLT)>, JMLR Workshop and Conference Proceedings Volume 19, 2011.<newblock>

      <bibitem*|7><label|bib-ABM10>J.-Y. Audibert, S.<nbsp>Bubeck, and R.<nbsp>Munos. <newblock>Best arm identification in multi-armed bandits. <newblock>In <em|Proceedings of the 23rd Annual Conference on Learning Theory (COLT)>, 2010.<newblock>

      <bibitem*|8><label|bib-ACF02>P.<nbsp>Auer, N.<nbsp>Cesa-Bianchi, and P.<nbsp>Fischer. <newblock>Finite-time analysis of the multiarmed bandit problem. <newblock><em|Machine Learning Journal>, 47 (2-3): 235–256, 2002a.<newblock>

      <bibitem*|9><label|bib-ACFS03>P.<nbsp>Auer, N.<nbsp>Cesa-Bianchi, Y.<nbsp>Freund, and R.<nbsp>Schapire. <newblock>The non-stochastic multi-armed bandit problem. <newblock><em|SIAM Journal on Computing>, 32 (1): 48–77, 2002b.<newblock>

      <bibitem*|10><label|bib-ADBL11>A.<nbsp>Agarwal, J.<nbsp>Duchi, P.L. Bartlett, and C.<nbsp>Levrard. <newblock>Oracle inequalities for computationally budgeted model selection. <newblock>In <em|Proceedings of the 24th Annual Conference on Learning Theory (COLT)>, JMLR Workshop and Conference Proceedings Volume 19, 2011a.<newblock>

      <bibitem*|11><label|bib-ADX10>A.<nbsp>Agarwal, O.<nbsp>Dekel, and L.<nbsp>Xiao. <newblock>Optimal algorithms for online convex optimization with multi-point bandit feedback. <newblock>In <em|Proceedings of the 23rd Annual Conference on Learning Theory (COLT)>, 2010b.<newblock>

      <bibitem*|12><label|bib-AG12>S.<nbsp>Agrawal and N.<nbsp>Goyal. <newblock>Analysis of Thompson sampling for the multi-armed bandit problem. <newblock>In <em|Proceedings of the 25th Annual Conference on Learning Theory (COLT)>, JMLR Workshop and Conference Proceedings Volume 23, 2012.<newblock>

      <bibitem*|13><label|bib-agarwal2011stochastic>A.<nbsp>Agarwal, D.P. Foster, D.<nbsp>Hsu, S.M. Kakade, and A.<nbsp>Rakhlin. <newblock>Stochastic convex optimization with bandit feedback. <newblock>In <em|Advances in Neural Information Processing Systems (NIPS)>, 2011b.<newblock>

      <bibitem*|14><label|bib-Agr95>R.<nbsp>Agrawal. <newblock>Sample mean based index policies with <math|\<cal-O\><around|(|log n|)>> regret for the multi-armed bandit problem. <newblock><em|Advances in Applied Mathematics>, 27: 1054–1078, 1995.<newblock>

      <bibitem*|15><label|bib-AGS08>A.<nbsp>Antos, V.<nbsp>Grover, and C.<nbsp>Szepesvári. <newblock>Active learning in multi-armed bandits. <newblock>In <em|Proceedings of the 19th International Conference on Algorithmic Learning Theory (ALT)>, 2008.<newblock>

      <bibitem*|16><label|bib-AHR08>J.<nbsp>Abernethy, E.<nbsp>Hazan, and A.<nbsp>Rakhlin. <newblock>Competing in the dark: An efficient algorithm for bandit linear optimization. <newblock>In <em|Proceedings of the 21st Annual Conference on Learning Theory (COLT)>, 2008.<newblock>

      <bibitem*|17><label|bib-AK04>B.<nbsp>Awerbuch and R.<nbsp>Kleinberg. <newblock>Adaptive routing with end-to-end feedback: distributed learning and geometric approaches. <newblock>In <em|Proceedings of the thirty-sixth annual ACM symposium on Theory of computing (STOC)>, 2004.<newblock>

      <bibitem*|18><label|bib-AKS11>K.<nbsp>Amin, M.<nbsp>Kearns, and U.<nbsp>Syed. <newblock>Bandits, query learning, and the haystack dimension. <newblock>In <em|Proceedings of the 24th Annual Conference on Learning Theory (COLT)>, JMLR Workshop and Conference Proceedings Volume 19, 2011.<newblock>

      <bibitem*|19><label|bib-AMS09>J.-Y. Audibert, R.<nbsp>Munos, and C.<nbsp>Szepesvári. <newblock>Exploration-exploitation trade-off using variance estimates in multi-armed bandits. <newblock><em|Theoretical Computer Science>, 410: 1876–1902, 2009.<newblock>

      <bibitem*|20><label|bib-AO10>P.<nbsp>Auer and R.<nbsp>Ortner. <newblock>UCB revisited: Improved regret bounds for the stochastic multi-armed bandit problem. <newblock><em|Periodica Mathematica Hungarica>, 61: 55–65, 2010.<newblock>

      <bibitem*|21><label|bib-APS11>Y.<nbsp>Abbasi-Yadkori, D.<nbsp>Pal, and C.<nbsp>Szepesvári. <newblock>Improved algorithms for linear stochastic bandits. <newblock>In <em|Advances in Neural Information Processing Systems (NIPS)>, 2011.<newblock>

      <bibitem*|22><label|bib-AR09>J.<nbsp>Abernethy and A.<nbsp>Rakhlin. <newblock>Beating the adaptive bandit with high probability. <newblock>In <em|Proceedings of the 22nd Annual Conference on Learning Theory (COLT)>, 2009.<newblock>

      <bibitem*|23><label|bib-arora2012multiplicative>S.<nbsp>Arora, E.<nbsp>Hazan, and S.<nbsp>Kale. <newblock>The multiplicative weights update method: A meta-algorithm and applications. <newblock><em|Theory of Computing>, 8: 121–164, 2012b.<newblock>

      <bibitem*|24><label|bib-arora2012online>R.<nbsp>Arora, O.<nbsp>Dekel, and A.<nbsp>Tewari. <newblock>Online bandit learning against an adaptive adversary: from regret to policy regret. <newblock>In <em|Proceedings of the 29th International Conference on Machine Learning (ICML)>, 2012a.<newblock>

      <bibitem*|25><label|bib-arrow1949bayes>K.J. Arrow, D.<nbsp>Blackwell, and M.A. Girshick. <newblock>Bayes and minimax solutions of sequential decision problems. <newblock><em|Econometrica>, pages 213–244, 1949.<newblock>

      <bibitem*|26><label|bib-Aue02>P.<nbsp>Auer. <newblock>Using confidence bounds for exploitation-exploration trade-offs. <newblock><em|Journal of Machine Learning Research>, 3: 397–422, 2002.<newblock>

      <bibitem*|27><label|bib-auer2007improved>P.<nbsp>Auer, R.<nbsp>Ortner, and C.<nbsp>Szepesvári. <newblock>Improved rates for the stochastic continuum-armed bandit problem. <newblock>In <em|Proceedings of the 20th International Conference on Learning Theory (COLT)>, 2007.<newblock>

      <bibitem*|28><label|bib-Bal97>K.<nbsp>Ball. <newblock>An elementary introduction to modern convex geometry. <newblock>In S.<nbsp>Levy, editor, <em|Flavors of Geometry>, pages 1–58. Cambridge University Press, 1997.<newblock>

      <bibitem*|29><label|bib-Ban68>A.<nbsp>Baños. <newblock>On pseudo-games. <newblock><em|Annals of Mathematical Statistics>, 39: 1932–1945, 1968.<newblock>

      <bibitem*|30><label|bib-BBL05>S.<nbsp>Boucheron, O.<nbsp>Bousquet, and G.<nbsp>Lugosi. <newblock>Theory of classification: a survey of recent advances. <newblock><em|ESAIM: Probability and Statistics>, 9: 323–375, 2005.<newblock>

      <bibitem*|31><label|bib-BCK12>S.<nbsp>Bubeck, N.<nbsp>Cesa-Bianchi, and S.M. Kakade. <newblock>Towards minimax policies for online linear optimization with bandit feedback. <newblock>In <em|Proceedings of the 25th Annual Conference on Learning Theory (COLT)>, JMLR Workshop and Conference Proceedings Volume 23, 2012a.<newblock>

      <bibitem*|32><label|bib-BCL12>S.<nbsp>Bubeck, N.<nbsp>Cesa-Bianchi, and G.<nbsp>Lugosi. <newblock>Bandits with heavy tail. <newblock><em|Arxiv preprint arXiv:1209.1727>, 2012b.<newblock>

      <bibitem*|33><label|bib-BCZHS97>D.A. Berry, R.W. Chen, D.C.<nbsp>Heath A.<nbsp>Zame, and L.A. Shepp. <newblock>Bandit problems with infinitely many arms. <newblock><em|Annals of Statistics>, 25: 2103–2116, 1997.<newblock>

      <bibitem*|34><label|bib-BDHKRT08>P.<nbsp>Bartlett, V.<nbsp>Dani, T.<nbsp>Hayes, S.<nbsp>Kakade, A.<nbsp>Rakhlin, and A.<nbsp>Tewari. <newblock>High probability regret bounds for online optimization. <newblock>In <em|Proceedings of the 21st Annual Conference on Learning Theory (COLT)>, 2008.<newblock>

      <bibitem*|35><label|bib-BEG11>S.<nbsp>Bubeck, D.<nbsp>Ernst, and A.<nbsp>Garivier. <newblock>Optimal discovery with probabilistic expert advice. <newblock><em|Arxiv preprint arXiv:1110.5447>, 2011a.<newblock>

      <bibitem*|36><label|bib-beygelzimer2010contextual>A.<nbsp>Beygelzimer, J.<nbsp>Langford, L.<nbsp>Li, L.<nbsp>Reyzin, and R.E. Schapire. <newblock>Contextual bandit algorithms with supervised learning guarantees. <newblock>In <em|Proceedings of the 15th International Conference on Artificial Intelligence and Statistics (AISTATS)>, JMLR Workshop and Conference Proceedings Volume 15, 2011b.<newblock>

      <bibitem*|37><label|bib-beygelzimer2011contextual>A.<nbsp>Beygelzimer, J.<nbsp>Langford, L.<nbsp>Li, L.<nbsp>Reyzin, and R.<nbsp>Schapire. <newblock>Contextual bandit algorithms with supervised learning guarantees. <newblock>In <em|Proceedings of the Fourteenth International Conference on Artificial Intelligence and Statistics (AISTATS)>, JMLR Workshop and Conference Proceedings Volume 15, 2011a.<newblock>

      <bibitem*|38><label|bib-BJM11>L.<nbsp>Bui, R.<nbsp>Johari, and S.<nbsp>Mannor. <newblock>Committing bandits. <newblock>In <em|Advances in Neural Information Processing Systems (NIPS)>, 2011.<newblock>

      <bibitem*|39><label|bib-BK11>R.<nbsp>Busa-Fekete and B.<nbsp>Kegl. <newblock>Fast boosting using adversarial bandits. <newblock>In <em|Proceedings of the 28th International Conference on Machine Learning (ICML)>, 2011.<newblock>

      <bibitem*|40><label|bib-BK97>A.N. Burnetas and M.N. Katehakis. <newblock>Optimal adaptive policies for Markov decision processes. <newblock><em|Mathematics of Operations Research>, pages 222–255, 1997.<newblock>

      <bibitem*|41><label|bib-BKS10>M.<nbsp>Babaioff, R.D. Kleinberg, and A.<nbsp>Slivkins. <newblock>Truthful mechanisms with implicit payment computation. <newblock>In <em|ACM Conference on Electronic Commerce 2010 (EC)>, 2010.<newblock>

      <bibitem*|42><label|bib-BM10>S.<nbsp>Bubeck and R.<nbsp>Munos. <newblock>Open loop optimistic planning. <newblock>In <em|Proceedings of the 23rd Annual Conference on Learning Theory (COLT)>, 2010.<newblock>

      <bibitem*|43><label|bib-BM11>F.<nbsp>Bach and E.<nbsp>Moulines. <newblock>Non-asymptotic analysis of stochastic approximation algorithms for machine learning. <newblock>In <em|Advances in Neural Information Processing Systems (NIPS)>, 2011.<newblock>

      <bibitem*|44><label|bib-BMS09>S.<nbsp>Bubeck, R.<nbsp>Munos, and G.<nbsp>Stoltz. <newblock>Pure exploration in multi-armed bandits problems. <newblock>In <em|Proceedings of the 20th International Conference on Algorithmic Learning Theory (ALT)>, 2009a.<newblock>

      <bibitem*|45><label|bib-BMS11>S.<nbsp>Bubeck, R.<nbsp>Munos, and G.<nbsp>Stoltz. <newblock>Pure exploration in finitely-armed and continuously-armed bandits. <newblock><em|Theoretical Computer Science>, 412: 1832–1852, 2011b.<newblock>

      <bibitem*|46><label|bib-BMSS09>S.<nbsp>Bubeck, R.<nbsp>Munos, G.<nbsp>Stoltz, and C.<nbsp>Szepesvári. <newblock>Online optimization in <math|\<cal-X\>>-armed bandits. <newblock>In <em|Advances in Neural Information Processing Systems (NIPS)>, 2009b.<newblock>

      <bibitem*|47><label|bib-BMSS11>S.<nbsp>Bubeck, R.<nbsp>Munos, G.<nbsp>Stoltz, and C.<nbsp>Szepesvári. <newblock><math|\<cal-X\>>-armed bandits. <newblock><em|Journal of Machine Learning Research>, 12: 1587–1627, 2011c.<newblock>

      <bibitem*|48><label|bib-BN99>A.<nbsp>Ben-Tal and A.<nbsp>Nemirovski. <newblock>The conjugate barrier Mirror Descent method for non-smooth convex optimization. <newblock>Technical report, MINERVA Optimization Center Report, Faculty of Industrial Engineering and Management, Technion–Israel Institute of Technology, Haifa, 1999.<newblock>

      <bibitem*|49><label|bib-BPS10>G.<nbsp>Bartok, D.<nbsp>Pal, and C.<nbsp>Szepesvári. <newblock>Toward a classification of finite partial-monitoring games. <newblock>In <em|Proceedings of the 21st International Conference on Algorithmic Learning Theory (ALT)>, 2010.<newblock>

      <bibitem*|50><label|bib-BPSS11>G.<nbsp>Bartok, D.<nbsp>Pal, C.<nbsp>Szepesvári, and I.<nbsp>Szita. <newblock>Online learning. <newblock>Lecture Notes, 2011.<newblock>

      <bibitem*|51><label|bib-BS12>S.<nbsp>Bubeck and A.<nbsp>Slivkins. <newblock>The best of both worlds: stochastic and adversarial bandits. <newblock>In <em|Proceedings of the 25th Annual Conference on Learning Theory (COLT)>, JMLR Workshop and Conference Proceedings Volume 23, 2012.<newblock>

      <bibitem*|52><label|bib-BSS09>M.<nbsp>Babaioff, Y.<nbsp>Sharma, and A.<nbsp>Slivkins. <newblock>Characterizing truthful multi-armed bandit mechanisms,. <newblock>In <em|ACM Conference on Electronic Commerce 2009 (EC)>, 2009.<newblock>

      <bibitem*|53><label|bib-BT03>A.<nbsp>Beck and M.<nbsp>Teboulle. <newblock>Mirror Descent and nonlinear projected subgradient methods for convex optimization. <newblock><em|Operations Research Letters>, 31 (3): 167–175, 2003.<newblock>

      <bibitem*|54><label|bib-Bub10>S.<nbsp>Bubeck. <newblock><em|Bandits Games and Clustering Foundations>. <newblock>PhD thesis, Université Lille 1, 2010.<newblock>

      <bibitem*|55><label|bib-Bub11>S.<nbsp>Bubeck. <newblock>Introduction to online optimization. <newblock>Lecture Notes, 2011.<newblock>

      <bibitem*|56><label|bib-BV04>S.<nbsp>Boyd and L.<nbsp>Vandenberghe. <newblock><em|Convex Optimization>. <newblock>Cambridge University Press, 2004.<newblock>

      <bibitem*|57><label|bib-BWV12>S.<nbsp>Bubeck, T.<nbsp>Wang, and N.<nbsp>Viswanathan. <newblock>Multiple identifications in multi-armed bandits. <newblock><em|Arxiv preprint arXiv:1205.3181>, 2012c.<newblock>

      <bibitem*|58><label|bib-CGMMS12>O.<nbsp>Cappé, A.<nbsp>Garivier, O.<nbsp>Maillard, R.<nbsp>Munos, and G.<nbsp>Stoltz. <newblock>Kullback-Leibler upper confidence bounds for optimal sequential allocation. <newblock><em|Arxiv preprint arXiv:1210.1136>, 2012.<newblock>

      <bibitem*|59><label|bib-chu2011contextual>W.<nbsp>Chu, L.<nbsp>Li, L.<nbsp>Reyzin, and R.<nbsp>Schapire. <newblock>Contextual bandits with linear payoff functions. <newblock><em|JMLR Workshop and Conference Proceedings Volume 15>, 2011.<newblock>

      <bibitem*|60><label|bib-CL06>N.<nbsp>Cesa-Bianchi and G.<nbsp>Lugosi. <newblock><em|Prediction, Learning, and Games>. <newblock>Cambridge University Press, 2006.<newblock>

      <bibitem*|61><label|bib-CL11>N.<nbsp>Cesa-Bianchi and G.<nbsp>Lugosi. <newblock>Combinatorial bandits. <newblock><em|Journal of Computer and System Sciences>, 78 (5): 1404–1422, 2012.<newblock>

      <bibitem*|62><label|bib-CLGMA11>A.<nbsp>Carpentier, A.<nbsp>Lazaric, M.<nbsp>Ghavamzadeh, R.<nbsp>Munos, and P.<nbsp>Auer. <newblock>Upper confidence bounds algorithms for active learning in multi-armed bandits. <newblock>In <em|Proceedings of the 22nd International Conference on Algorithmic Learning Theory (ALT)>, 2011.<newblock>

      <bibitem*|63><label|bib-CLi11>O.<nbsp>Chapelle and L.<nbsp>Li. <newblock>An empirical evaluation of Thompson sampling. <newblock>In <em|Advances in Neural Information Processing Systems (NIPS)>, 2011.<newblock>

      <bibitem*|64><label|bib-CLS05>N.<nbsp>Cesa-Bianchi, G.<nbsp>Lugosi, and G.<nbsp>Stoltz. <newblock>Minimizing regret with label efficient prediction. <newblock><em|IEEE Transactions on Information Theory>, 51: 2152–2162, 2005.<newblock>

      <bibitem*|65><label|bib-CM07>P.-A. Coquelin and R.<nbsp>Munos. <newblock>Bandit algorithms for tree search. <newblock>In <em|Proceedings of the 23rd Conference on Uncertainty in Artificial Intelligence (UAI)>, 2007.<newblock>

      <bibitem*|66><label|bib-CM11>A.<nbsp>Carpentier and R.<nbsp>Munos. <newblock>Finite time analysis of stratified sampling for monte carlo. <newblock>In <em|Advances in Neural Information Processing Systems (NIPS)>, 2011.<newblock>

      <bibitem*|67><label|bib-CMS07>N.<nbsp>Cesa-Bianchi, Y.<nbsp>Mansour, and G.<nbsp>Stoltz. <newblock>Improved second-order bounds for prediction with expert advice. <newblock><em|Machine Learning>, 66: 321–352, 2007.<newblock>

      <bibitem*|68><label|bib-cope2009regret>E.W. Cope. <newblock>Regret and convergence bounds for a class of continuum-armed bandit problems. <newblock><em|IEEE Transactions on Automatic Control>, 54 (6): 1243–1253, 2009.<newblock>

      <bibitem*|69><label|bib-crammer2011multiclass>K.<nbsp>Crammer and C.<nbsp>Gentile. <newblock>Multiclass classification with bandit feedback using adaptive regularization. <newblock>In <em|Proceedings of the 28th International Conference on Machine Learning (ICML)>, 2011.<newblock>

      <bibitem*|70><label|bib-CSV09>A.<nbsp>Conn, K.<nbsp>Scheinberg, and L.<nbsp>Vicente. <newblock><em|Introduction to Derivative-Free Optimization>. <newblock>Society for Industrial and Applied Mathematics (SIAM), 2009.<newblock>

      <bibitem*|71><label|bib-DHK08>V.<nbsp>Dani, T.<nbsp>Hayes, and S.<nbsp>Kakade. <newblock>The price of bandit information for online optimization. <newblock>In <em|Advances in Neural Information Processing Systems (NIPS)>, 2008a.<newblock>

      <bibitem*|72><label|bib-DHK08b>V.<nbsp>Dani, T.<nbsp>Hayes, and S.<nbsp>Kakade. <newblock>Stochastic linear optimization under bandit feedback. <newblock>In <em|Proceedings of the 21st Annual Conference on Learning Theory (COLT)>, 2008b.<newblock>

      <bibitem*|73><label|bib-DK09>N.<nbsp>Devanur and S.M. Kakade. <newblock>The price of truthfulness for pay-per-click auctions. <newblock>In <em|ACM Conference on Electronic Commerce 2009 (EC)>, 2009.<newblock>

      <bibitem*|74><label|bib-dudik2011efficient>M.<nbsp>Dudik, D.<nbsp>Hsu, S.<nbsp>Kale, N.<nbsp>Karampatziakis, J.<nbsp>Langford, L.<nbsp>Reyzin, and T.<nbsp>Zhang. <newblock>Efficient optimal learning for contextual bandits. <newblock>In <em|Proceedings of the 27th Conference on Uncertainty in Artificial Intelligence (UAI)>, 2011.<newblock>

      <bibitem*|75><label|bib-EMM02>E.<nbsp>Even-Dar, S.<nbsp>Mannor, and Y.<nbsp>Mansour. <newblock>Pac bounds for multi-armed bandit and markov decision processes. <newblock>In <em|Proceedings of the Fifteenth Annual Conference on Computational Learning Theory (COLT)>, 2002.<newblock>

      <bibitem*|76><label|bib-EMM06>E.<nbsp>Even-Dar, S.<nbsp>Mannor, and Y.<nbsp>Mansour. <newblock>Action elimination and stopping conditions for the multi-armed bandit and reinforcement learning problems. <newblock><em|Journal of Machine Learning Research>, 7: 1079–1105, 2006.<newblock>

      <bibitem*|77><label|bib-farias2006combining>D.<nbsp>Pucci<nbsp>de Farias and N.<nbsp>Megiddo. <newblock>Combining expert advice in reactive environments. <newblock><em|Journal of the ACM>, 53 (5): 762–799, 2006.<newblock>

      <bibitem*|78><label|bib-filippi2010parametric>S.<nbsp>Filippi, O.<nbsp>Cappé, A.<nbsp>Garivier, and C.<nbsp>Szepesvári. <newblock>Parametric bandits: The generalized linear case. <newblock>In <em|Neural Information Processing Systems (NIPS)>, 2010.<newblock>

      <bibitem*|79><label|bib-filippi2011optimally>S.<nbsp>Filippi, O.<nbsp>Cappé, and A.<nbsp>Garivier. <newblock>Optimally sensing a single channel without prior information: The tiling algorithm and regret bounds. <newblock><em|Selected Topics in Signal Processing>, 5 (1): 68–76, 2011.<newblock>

      <bibitem*|80><label|bib-FKM05>A.<nbsp>Flaxman, A.<nbsp>Kalai, and B.<nbsp>McMahan. <newblock>Online convex optimization in the bandit setting: Gradient descent without a gradient. <newblock>In <em|In Proceedings of the Sixteenth Annual ACM-SIAM Symposium on Discrete Algorithms (SODA)>, 2005.<newblock>

      <bibitem*|81><label|bib-FoVo98>D.<nbsp>Foster and R.<nbsp>Vohra. <newblock>Asymptotic calibration. <newblock><em|Biometrika>, 85: 379–390, 1998.<newblock>

      <bibitem*|82><label|bib-FR11>D.<nbsp>Foster and A.<nbsp>Rakhlin. <newblock>No internal regret via neighborhood watch. <newblock>In <em|Proceedings of the 15th International Conference on Artificial Intelligence and Statistics (AISTATS)>, JMLR Workshop and Conference Proceedings Volume 22, 2012.<newblock>

      <bibitem*|83><label|bib-GAOS10>S.<nbsp>Grünewälder, J.-Y. Audibert, M.<nbsp>Opper, and J.<nbsp>Shawe-Taylor. <newblock>Regret bounds for Gaussian process bandit problems. <newblock>In <em|Proceedings of the 13th International Conference on Artificial Intelligence and Statistics (AISTATS)>, JMLR Workshop and Conference Proceedings Volume 9, 2010.<newblock>

      <bibitem*|84><label|bib-GC11>A.<nbsp>Garivier and O.<nbsp>Cappé. <newblock>The KL-UCB algorithm for bounded stochastic bandits and beyond. <newblock>In <em|Proceedings of the 24th Annual Conference on Learning Theory (COLT)>, JMLR Workshop and Conference Proceedings Volume 19, 2011.<newblock>

      <bibitem*|85><label|bib-GGLB11>V.<nbsp>Gabillon, M.<nbsp>Ghavamzadeh, A.<nbsp>Lazaric, and S.<nbsp>Bubeck. <newblock>Multi-bandit best arm identification. <newblock>In <em|Advances in Neural Information Processing Systems (NIPS)>, 2011.<newblock>

      <bibitem*|86><label|bib-GGW11>J.<nbsp>Gittins, K.<nbsp>Glazebrook, and R.<nbsp>Weber. <newblock><em|Multi-Armed Bandit Allocation Indices (2nd edition)>. <newblock>John Wiley and Sons, 2011.<newblock>

      <bibitem*|87><label|bib-gittins1979bandit>J.C. Gittins. <newblock>Bandit processes and dynamic allocation indices. <newblock><em|Journal of the Royal Statistical Society. Series B (Methodological)>, pages 148–177, 1979.<newblock>

      <bibitem*|88><label|bib-GKSS07>A.<nbsp>György, L.<nbsp>Kocsis, I.<nbsp>Szabó, and C.<nbsp>Szepesvári. <newblock>Continuous time associative bandit problems. <newblock>In <em|Proceedings of the 20th International Joint Conference on Artificial Intelligence (IJCAI)>, 2007.<newblock>

      <bibitem*|89><label|bib-GLLO07>A.<nbsp>György, T.<nbsp>Linder, G.<nbsp>Lugosi, and G.<nbsp>Ottucsák. <newblock>The on-line shortest path problem under partial monitoring. <newblock><em|Journal of Machine Learning Research>, 8: 2369–2403, 2007.<newblock>

      <bibitem*|90><label|bib-GLS01>A.<nbsp>Grove, N.<nbsp>Littlestone, and D.<nbsp>Schuurmans. <newblock>General convergence results for linear discriminant updates. <newblock><em|Machine Learning>, 43: 173–210, 2001.<newblock>

      <bibitem*|91><label|bib-GM11>A.<nbsp>Garivier and E.<nbsp>Moulines. <newblock>On upper-confidence bound policies for switching bandit problems. <newblock>In <em|Proceedings of the 22nd International Conference on Algorithmic Learning Theory (ALT)>, 2011.<newblock>

      <bibitem*|92><label|bib-GWMT06>S.<nbsp>Gelly, Y.<nbsp>Wang, R.<nbsp>Munos, and O.<nbsp>Teytaud. <newblock>Modification of UCT with patterns in Monte-Carlo Go. <newblock>Technical Report RR-6062, INRIA, 2006.<newblock>

      <bibitem*|93><label|bib-HaMa00>S.<nbsp>Hart and A.<nbsp>Mas-Colell. <newblock>A general class of adaptive strategies. <newblock><em|Journal of Economic Theory>, 98: 26–54, 2001.<newblock>

      <bibitem*|94><label|bib-HaMa99>S.<nbsp>Hart and A.<nbsp>Mas-Colell. <newblock>A simple adaptive procedure leading to correlated equilibrium. <newblock><em|Econometrica>, 68: 1127–1150, 2000.<newblock>

      <bibitem*|95><label|bib-Han57>J.<nbsp>Hannan. <newblock>Approximation to Bayes risk in repeated play. <newblock><em|Contributions to the theory of games>, 3: 97–139, 1957.<newblock>

      <bibitem*|96><label|bib-Haz11>E.<nbsp>Hazan. <newblock>The convex optimization approach to regret minimization. <newblock>In S.<nbsp>Sra, S.<nbsp>Nowozin, and S.<nbsp>Wright, editors, <em|Optimization for Machine Learning>, pages 287–303. MIT press, 2011.<newblock>

      <bibitem*|97><label|bib-hazan2011newtron>E.<nbsp>Hazan and S.<nbsp>Kale. <newblock>NEWTRON: an efficient bandit algorithm for online multiclass prediction. <newblock>In <em|Advances in Neural Information Processing Systems (NIPS)>, 2011.<newblock>

      <bibitem*|98><label|bib-HK09>E.<nbsp>Hazan and S.<nbsp>Kale. <newblock>Better algorithms for benign bandits. <newblock>In <em|Proceedings of the 20th Annual ACM-SIAM Symposium on Discrete Algorithms (SODA)>, pages 38–47, 2009.<newblock>

      <bibitem*|99><label|bib-HKW10>E.<nbsp>Hazan, S.<nbsp>Kale, and M.<nbsp>Warmuth. <newblock>Learning rotations with little regret. <newblock>In <em|Proceedings of the 23rd Annual Conference on Learning Theory (COLT)>, 2010.<newblock>

      <bibitem*|100><label|bib-HL01>J.-B. Hiriart-Urruty and C.<nbsp>Lemaréchal. <newblock><em|Fundamentals of Convex Analysis>. <newblock>Springer, 2001.<newblock>

      <bibitem*|101><label|bib-HP97>D.<nbsp>Helmbold and S.<nbsp>Panizza. <newblock>Some label efficient learning results. <newblock>In <em|Proceedings of the 10th Annual Conference on Computational Learning Theory (COLT)>, 1997.<newblock>

      <bibitem*|102><label|bib-HT10>J.<nbsp>Honda and A.<nbsp>Takemura. <newblock>An asymptotically optimal bandit algorithm for bounded support models. <newblock>In <em|Proceedings of the 23rd Annual Conference on Learning Theory (COLT)>, 2010.<newblock>

      <bibitem*|103><label|bib-HT10b>J.-B. Hoock and O.<nbsp>Teytaud. <newblock>Bandit-based genetic programming. <newblock>In <em|Proceedings of the 13th European Conference on Genetic Programming (EuroGP)>, 2010.<newblock>

      <bibitem*|104><label|bib-HW09>D.P. Helmbold and M.<nbsp>Warmuth. <newblock>Learning permutations with exponential weights. <newblock><em|Journal of Machine Learning Research>, 10: 1705–1736, 2009.<newblock>

      <bibitem*|105><label|bib-HW98>M.<nbsp>Herbster and M.<nbsp>Warmuth. <newblock>Tracking the best expert. <newblock><em|Machine Learning>, 32: 151–178, 1998.<newblock>

      <bibitem*|106><label|bib-JNTV05>A.<nbsp>Juditsky, A.<nbsp>Nazin, A.<nbsp>Tsybakov, and N.<nbsp>Vayatis. <newblock>Recursive aggregation of estimators by the Mirror Descent algorithm with averaging. <newblock><em|Problems of Information Transmission>, 41: 368–384, 2005.<newblock>

      <bibitem*|107><label|bib-JOA10>T.<nbsp>Jaksch, R.<nbsp>Ortner, and P.<nbsp>Auer. <newblock>Near-optimal regret bounds for reinforcement learning. <newblock><em|Journal of Machine Learning Research>, 11: 1563–1600, 2010.<newblock>

      <bibitem*|108><label|bib-Kak03>S.M. Kakade. <newblock><em|On the Sample Complexity of Reinforcement Learning>. <newblock>PhD thesis, Gatsby Computational Neuroscience Unit, University College London, 2003.<newblock>

      <bibitem*|109><label|bib-kakade2008efficient>S.M. Kakade, S.<nbsp>Shalev-Shwartz, and A.<nbsp>Tewari. <newblock>Efficient bandit algorithms for online multiclass prediction. <newblock>In <em|Proceedings of the 25th International Conference on Machine Learning (ICML)>, 2008.<newblock>

      <bibitem*|110><label|bib-KCG12>E.<nbsp>Kaufmann, O.<nbsp>Cappé, and A.<nbsp>Garivier. <newblock>On Bayesian upper confidence bounds for bandits problems. <newblock>In <em|Proceedings of the 15th International Conference on Artificial Intelligence and Statistics (AISTATS)>, JMLR Workshop and Conference Proceedings Volume 22, 2012a.<newblock>

      <bibitem*|111><label|bib-kiefer1953sequential>J.<nbsp>Kiefer. <newblock>Sequential minimax search for a maximum. <newblock><em|Proceedings of the American Mathematical Society>, 4 (3): 502–506, 1953.<newblock>

      <bibitem*|112><label|bib-KKM12>E.<nbsp>Kaufmann, N.<nbsp>Korda, and R.<nbsp>Munos. <newblock>Thompson sampling: an asymptotically optimal finite-time analysis. <newblock>In <em|Proceedings of the 23rd International Conference on Algorithmic Learning Theory (ALT)>, 2012b.<newblock>

      <bibitem*|113><label|bib-kleinberg2004nearly>R.<nbsp>Kleinberg. <newblock>Nearly tight bounds for the continuum-armed bandit problem. <newblock><em|Advances in Neural Information Processing Systems (NIPS)>, 2004.<newblock>

      <bibitem*|114><label|bib-KMB09>V.<nbsp>Kanade, B.<nbsp>McMahan, and B.<nbsp>Bryan. <newblock>Sleeping experts and bandits with stochastic action availability and adversarial rewards. <newblock>In <em|Proceedings of the 12th International Conference on Artificial Intelligence and Statistics (AISTATS)>, JMLR Workshop and Conference Proceedings Volume 5, 2009.<newblock>

      <bibitem*|115><label|bib-KMN02>M.<nbsp>Kearns, Y.<nbsp>Mansour, and A.Y. Ng. <newblock>A sparse sampling algorithm for near-optimal planning in large Markovian decision processes. <newblock><em|Machine Learning>, 49: 193–208, 2002.<newblock>

      <bibitem*|116><label|bib-KNS10>R.<nbsp>Kleinberg, A.<nbsp>Niculescu-Mizil, and Y.<nbsp>Sharma. <newblock>Regret bounds for sleeping experts and bandits. <newblock><em|Machine Learning>, 80: 245–272, 2010.<newblock>

      <bibitem*|117><label|bib-KRS10>S.<nbsp>Kale, L.<nbsp>Reyzin, and R.<nbsp>Schapire. <newblock>Non-stochastic bandit slate problems. <newblock>In <em|Advances in Neural Information Processing Systems (NIPS)>, 2010.<newblock>

      <bibitem*|118><label|bib-KS06>L.<nbsp>Kocsis and C.<nbsp>Szepesvári. <newblock>Bandit based Monte-Carlo planning. <newblock>In <em|Proceedings of the 15th European Conference on Machine Learning (ECML)>, 2006.<newblock>

      <bibitem*|119><label|bib-KS12>V.<nbsp>Kanade and T.<nbsp>Steinke. <newblock>Learning hurdles for sleeping experts. <newblock>In <em|Proceedings of the 3rd Innovations in Theoretical Computer Science Conference>. ACM, 2012.<newblock>

      <bibitem*|120><label|bib-KST10>S.<nbsp>Kakade, S.<nbsp>Shalev-Shwartz, and A.<nbsp>Tewari. <newblock>Regularization techniques for learning with matrices. <newblock><em|Journal of Machine Learning Research>, 13: 1865–1890, 2012.<newblock>

      <bibitem*|121><label|bib-KSU08>R.<nbsp>Kleinberg, A.<nbsp>Slivkins, and E.<nbsp>Upfal. <newblock>Multi-armed bandits in metric spaces. <newblock>In <em|Proceedings of the 40th ACM Symposium on Theory of Computing (STOC)>, 2008.<newblock>

      <bibitem*|122><label|bib-KV05>A.<nbsp>Kalai and S.<nbsp>Vempala. <newblock>Efficient algorithms for online decision problems. <newblock><em|Journal of Computer and System Sciences>, 71: 291–307, 2005.<newblock>

      <bibitem*|123><label|bib-KW01>J.<nbsp>Kivinen and M.<nbsp>Warmuth. <newblock>Relative loss bounds for multidimensional regression problems. <newblock><em|Machine Learning>, 45: 301–329, 2001.<newblock>

      <bibitem*|124><label|bib-KW52>J.<nbsp>Kiefer and J.<nbsp>Wolfowitz. <newblock>Stochastic estimation of the maximum of a regression function. <newblock><em|Annals of Mathematical Statistics>, 23: 462–466, 1952.<newblock>

      <bibitem*|125><label|bib-KWK10>W.<nbsp>Koolen, M.<nbsp>Warmuth, and J.<nbsp>Kivinen. <newblock>Hedging structured concepts. <newblock>In <em|Proceedings of the 23rd Annual Conference on Learning Theory (COLT)>, 2010.<newblock>

      <bibitem*|126><label|bib-langford2007epoch>J.<nbsp>Langford and T.<nbsp>Zhang. <newblock>The epoch-greedy algorithm for contextual multi-armed bandits. <newblock><em|Advances in Neural Information Processing Systems (NIPS)>, 2007.<newblock>

      <bibitem*|127><label|bib-Lez98>P.<nbsp>Lezaud. <newblock>Chernoff-type bound for finite Markov chains. <newblock><em|Annals of Applied Probability>, 8: 849–867, 1998.<newblock>

      <bibitem*|128><label|bib-li2010contextual>L.<nbsp>Li, W.<nbsp>Chu, J.<nbsp>Langford, and R.E. Schapire. <newblock>A contextual-bandit approach to personalized news article recommendation. <newblock>In <em|Proceedings of the 19th International Conference on World Wide Web (WWW)>, 2010.<newblock>

      <bibitem*|129><label|bib-LR85>T.<nbsp>L. Lai and H.<nbsp>Robbins. <newblock>Asymptotically efficient adaptive allocation rules. <newblock><em|Advances in Applied Mathematics>, 6: 4–22, 1985.<newblock>

      <bibitem*|130><label|bib-LZK10>K.<nbsp>Liu, Q.<nbsp>Zhao, and B.<nbsp>Krishnamachari. <newblock>Dynamic multichannel access with imperfect channel state detection. <newblock><em|IEEE Transactions on Signal Processing>, 58: 2795–2808, 2010.<newblock>

      <bibitem*|131><label|bib-mahajan2008multi>A.<nbsp>Mahajan and D.<nbsp>Teneketzis. <newblock>Multi-armed bandit problems. <newblock>In <em|Foundations and Applications of Sensor Management>, pages 121–151. Springer, 2008.<newblock>

      <bibitem*|132><label|bib-maillard2011adaptive>O.<nbsp>Maillard and R.<nbsp>Munos. <newblock>Adaptive bandits: Towards the best history-dependent strategy. <newblock>In <em|Proceedings of the Fourteenth International Conference on Artificial Intelligence and Statistics (AISTATS)>, JMLR Workshop and Conference Proceedings Volume 15, 2011.<newblock>

      <bibitem*|133><label|bib-MB04>H.<nbsp>McMahan and A.<nbsp>Blum. <newblock>Online geometric optimization in the bandit setting against an adaptive adversary. <newblock>In <em|In Proceedings of the 17th Annual Conference on Learning Theory (COLT)>, 2004.<newblock>

      <bibitem*|134><label|bib-mcmahan2009tighter>H.B. McMahan and M.<nbsp>Streeter. <newblock>Tighter bounds for multi-armed bandits with expert advice. <newblock>In <em|Proceedings of the 22nd International Conference on Learning Theory (COLT)>, 2009.<newblock>

      <bibitem*|135><label|bib-MMS11>O.-A. Maillard, R.<nbsp>Munos, and G.<nbsp>Stoltz. <newblock>A finite-time analysis of multi-armed bandits problems with Kullback-Leibler divergences. <newblock>In <em|Proceedings of the 24th Annual Conference on Learning Theory (COLT)>, JMLR Workshop and Conference Proceedings Volume 19, 2011.<newblock>

      <bibitem*|136><label|bib-MS11>S.<nbsp>Mannor and O.<nbsp>Shamir. <newblock>From bandits to experts: On the value of side-observations. <newblock>In <em|Advances in Neural Information Processing Systems (NIPS)>, 2011.<newblock>

      <bibitem*|137><label|bib-MT04>S.<nbsp>Mannor and J.<nbsp>N. Tsitsiklis. <newblock>The sample complexity of exploration in the multi-armed bandit problem. <newblock><em|Journal of Machine Learning Research>, 5: 623–648, 2004.<newblock>

      <bibitem*|138><label|bib-Nem79>A.<nbsp>Nemirovski. <newblock>Efficient methods for large-scale convex optimization problems. <newblock><em|Ekonomika i Matematicheskie Metody>, 15, 1979. <newblock>(In Russian).<newblock>

      <bibitem*|139><label|bib-Nes11>Y.<nbsp>Nesterov. <newblock>Random gradient-free minimization of convex functions. <newblock>Core discussion papers, Université catholique de Louvain, Center for Operations Research and Econometrics (CORE), 2011.<newblock>

      <bibitem*|140><label|bib-NGSA10>G.<nbsp>Neu, A.<nbsp>Gyorgy, C.<nbsp>Szepesvari, and A.<nbsp>Antos. <newblock>Online Markov decision processes under bandit feedback. <newblock>In <em|Advances in Neural Information Processing Systems (NIPS)>, 2010.<newblock>

      <bibitem*|141><label|bib-NIPS2011_0948>Y.<nbsp>Seldin, P.<nbsp>Auer, F.<nbsp>Laviolette, J.<nbsp>Shawe-Taylor, and R.<nbsp>Ortner. <newblock>Pac-bayesian analysis of contextual bandits. <newblock>In <em|Advances in Neural Information Processing Systems (NIPS)>, 2011.<newblock>

      <bibitem*|142><label|bib-NJLS09>A.<nbsp>Nemirovski, A.<nbsp>Juditsky, G.<nbsp>Lan, and A.<nbsp>Shapiro. <newblock>Robust stochastic approximation approach to stochastic programming. <newblock><em|SIAM Journal on Optimization>, 19: 1574–1609, 2009.<newblock>

      <bibitem*|143><label|bib-NY83>A.<nbsp>Nemirovski and D.<nbsp>Yudin. <newblock><em|Problem Complexity and Method Efficiency in Optimization>. <newblock>Wiley Interscience, 1983.<newblock>

      <bibitem*|144><label|bib-ortner2012regret>R.<nbsp>Ortner, D.<nbsp>Ryabko, P.<nbsp>Auer, and R.<nbsp>Munos. <newblock>Regret bounds for restless Markov bandits. <newblock><em|arXiv preprint arXiv:1209.2693>, 2012.<newblock>

      <bibitem*|145><label|bib-PR11>V.<nbsp>Perchet and P.<nbsp>Rigollet. <newblock>The multi-armed bandit problem with covariates. <newblock><em|Arxiv preprint arXiv:1110.6084>, 2011.<newblock>

      <bibitem*|146><label|bib-Rak09>A.<nbsp>Rakhlin. <newblock>Lecture notes on online learning. <newblock>2009.<newblock>

      <bibitem*|147><label|bib-RM51>H.<nbsp>Robbins and S.<nbsp>Monro. <newblock>A stochastic approximation method. <newblock><em|Annals of Mathematical Statistics>, 22: 400–407, 1951.<newblock>

      <bibitem*|148><label|bib-Rob52>H.<nbsp>Robbins. <newblock>Some aspects of the sequential design of experiments. <newblock><em|Bulletin of the American Mathematics Society>, 58: 527–535, 1952.<newblock>

      <bibitem*|149><label|bib-RT10>P.<nbsp>Rusmevichientong and J.<nbsp>Tsitsiklis. <newblock>Linearly parameterized bandits. <newblock><em|Mathematics of Operations Research>, 35: 395–411, 2010.<newblock>

      <bibitem*|150><label|bib-SA11>A.<nbsp>Salomon and J.-Y. Audibert. <newblock>Deviations of stochastic bandit regret. <newblock>In <em|Proceedings of the 22nd International Conference on Algorithmic Learning Theory (ALT)>, 2011.<newblock>

      <bibitem*|151><label|bib-SB98>R.S. Sutton and A.G. Barto. <newblock><em|Reinforcement Learning: An Introduction>. <newblock>MIT Press, 1998.<newblock>

      <bibitem*|152><label|bib-Sha07>S.<nbsp>Shalev-Shwartz. <newblock><em|Online Learning: Theory, Algorithms, and Applications>. <newblock>PhD thesis, The Hebrew University of Jerusalem, 2007.<newblock>

      <bibitem*|153><label|bib-SKKS10>N.<nbsp>Srinivas, A.<nbsp>Krause, S.M. Kakade, and M.<nbsp>Seeger. <newblock>Gaussian process optimization in the bandit setting: no regret and experimental design. <newblock>In <em|Proceedings of the 27th International Conference on Machine Learning (ICML)>, 2010.<newblock>

      <bibitem*|154><label|bib-slivkins2008adapting>A.<nbsp>Slivkins and E.<nbsp>Upfal. <newblock>Adapting to a changing environment: The Brownian restless bandits. <newblock>In <em|Procedings of the 21st Annual Conference on Learning Theory (COLT)>, 2008.<newblock>

      <bibitem*|155><label|bib-slivkins2009contextual>A.<nbsp>Slivkins. <newblock>Contextual bandits with similarity information. <newblock>In <em|Proceedings of the 24th Annual Conference on Learning Theory (COLT)>, JMLR Workshop and Conference Proceedings Volume 19, 2011.<newblock>

      <bibitem*|156><label|bib-SST11>N.<nbsp>Srebro, K.<nbsp>Sridharan, and A.<nbsp>Tewari. <newblock>On the universality of online Mirror Descent. <newblock>In <em|Advances in Neural Information Processing Systems (NIPS)>, 2011.<newblock>

      <bibitem*|157><label|bib-Sto05>G.<nbsp>Stoltz. <newblock><em|Incomplete Information and Internal Regret in Prediction of Individual Sequences>. <newblock>PhD thesis, Université Paris-Sud, 2005.<newblock>

      <bibitem*|158><label|bib-Sze10>C.<nbsp>Szepesvári. <newblock><em|Algorithms for Reinforcement Learning>. <newblock>Morgan and Claypool, 2010.<newblock>

      <bibitem*|159><label|bib-Tho33>W.<nbsp>Thompson. <newblock>On the likelihood that one unknown probability exceeds another in view of the evidence of two samples. <newblock><em|Bulletin of the American Mathematics Society>, 25: 285–294, 1933.<newblock>

      <bibitem*|160><label|bib-TL11>C.<nbsp>Tekin and M.<nbsp>Liu. <newblock>Online learning of rested and restless bandits. <newblock><em|IEEE Transactions on Information Theory>, 58 (8): 5588–5611, 2012.<newblock>

      <bibitem*|161><label|bib-TT09>F.<nbsp>Teytaud and O.<nbsp>Teytaud. <newblock>Creating an upper-confidence-tree program for Havannah. <newblock>In <em|Advances in Computer Games>, pages 65–74, 2009.<newblock>

      <bibitem*|162><label|bib-TW03>E.<nbsp>Takimoto and M.<nbsp>Warmuth. <newblock>Paths kernels and multiplicative updates. <newblock><em|Journal of Machine Learning Research>, 4: 773–818, 2003.<newblock>

      <bibitem*|163><label|bib-UNK10>T.<nbsp>Uchiya, A.<nbsp>Nakamura, and M.<nbsp>Kudo. <newblock>Algorithms for adversarial bandit problems with multiple plays. <newblock>In <em|Proceedings of the 21st International Conference on Algorithmic Learning Theory (ALT)>, 2010.<newblock>

      <bibitem*|164><label|bib-wald1947sequential>A.<nbsp>Wald. <newblock><em|Sequential Analysis>. <newblock>J.<nbsp>Wiley and Sons, 1947.<newblock>

      <bibitem*|165><label|bib-WAM08>Y.<nbsp>Wang, J.-Y. Audibert, and R.<nbsp>Munos. <newblock>Algorithms for infinitely many-armed bandits. <newblock>In <em|Advances in Neural Information Processing Systems (NIPS)>, 2008.<newblock>

      <bibitem*|166><label|bib-wang2005arbitrary>C.C. Wang, S.R. Kulkarni, and H.V. Poor. <newblock>Arbitrary side observations in bandit problems. <newblock><em|Advances in Applied Mathematics>, 34 (4): 903–938, 2005a.<newblock>

      <bibitem*|167><label|bib-wang2005bandit>C.C. Wang, S.R. Kulkarni, and H.V. Poor. <newblock>Bandit problems with side observations. <newblock><em|IEEE Transactions on Automatic Control>, 50 (3): 338–355, 2005b.<newblock>

      <bibitem*|168><label|bib-WK08>M.<nbsp>Warmuth and D.<nbsp>Kuzmin. <newblock>Randomized online PCA algorithms with regret bounds that are logarithmic in the dimension. <newblock><em|Journal of Machine Learning Research>, 9: 2287–2320, 2008.<newblock>

      <bibitem*|169><label|bib-WKH11>M.<nbsp>Warmuth, W.<nbsp>Koolen, and D.<nbsp>Helmbold. <newblock>Combining initial segments of lists. <newblock>In <em|In Proceedings of the 22nd International Conference on Algorithmic Learning Theory (ALT)>, 2011.<newblock>

      <bibitem*|170><label|bib-WS12>Christopher<nbsp>A. Wilkens and Balasubramanian Sivan. <newblock>Single-call mechanisms. <newblock>In <em|ACM Conference on Electronic Commerce (EC)>, 2012.<newblock>

      <bibitem*|171><label|bib-YBKJ09>Y.<nbsp>Yue, J.<nbsp>Broder, R.<nbsp>Kleinberg, and T.<nbsp>Joachims. <newblock>The <math|k>-armed dueling bandits problem. <newblock>In <em|Proceedings of the 22nd Annual Conference on Learning Theory (COLT)>, 2009.<newblock>

      <bibitem*|172><label|bib-YJ11>Y.<nbsp>Yue and T.<nbsp>Joachims. <newblock>Beat the mean bandit. <newblock>In <em|Proceedings of the 28th International Conference on Machine Learning (ICML)>, 2011.<newblock>

      <bibitem*|173><label|bib-YMS09>J.Y. Yu, S.<nbsp>Mannor, and N.<nbsp>Shimkin. <newblock>Markov decision processes with arbitrary reward processes. <newblock><em|Mathematics of Operations Research>, 34: 737–757, 2009.<newblock>

      <bibitem*|174><label|bib-yu2011unimodal>J.Y. Yu and S.<nbsp>Mannor. <newblock>Unimodal bandits. <newblock>In <em|Proceedings of the 28th International Conference on Machine Learning (ICML)>, 2011.<newblock>

      <bibitem*|175><label|bib-Zin03>M.<nbsp>Zinkevich. <newblock>Online convex programming and generalized infinitesimal gradient ascent. <newblock>In <em|Proceedings of the Twentieth International Conference on Machine Learning (ICML)>, 2003.<newblock>
    </bib-list>
  </bibliography>
</body>

<\initial>
  <\collection>
    <associate|page-medium|paper>
    <associate|page-screen-margin|false>
  </collection>
</initial>

<\references>
  <\collection>
    <associate|adversarial|<tuple|3|21|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|auto-1|<tuple|?|5|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|auto-10|<tuple|2.4|17|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|auto-11|<tuple|2.4.1|18|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|auto-12|<tuple|2.4.2|18|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|auto-13|<tuple|2.4.3|18|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|auto-14|<tuple|2.4.4|19|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|auto-15|<tuple|2.4.5|19|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|auto-16|<tuple|2.4.6|19|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|auto-17|<tuple|2.4.7|19|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|auto-18|<tuple|3|21|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|auto-19|<tuple|3.1|21|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|auto-2|<tuple|1|9|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|auto-20|<tuple|3.4|22|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|auto-21|<tuple|3.8|23|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|auto-22|<tuple|3.13|23|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|auto-23|<tuple|3.15|23|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|auto-24|<tuple|3.2|24|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|auto-25|<tuple|(3)|25|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|auto-26|<tuple|3.18|26|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|auto-27|<tuple|3.22|26|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|auto-28|<tuple|3.26|27|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|auto-29|<tuple|3.3|28|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|auto-3|<tuple|2|13|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|auto-30|<tuple|3.2|29|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|auto-31|<tuple|3.30|29|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|auto-32|<tuple|3.31|29|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|auto-33|<tuple|3.36|29|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|auto-34|<tuple|3.39|30|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|auto-35|<tuple|3.4|30|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|auto-36|<tuple|3.4.1|30|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|auto-37|<tuple|3.4.2|31|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|auto-38|<tuple|3.4.3|31|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|auto-39|<tuple|3.4.4|31|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|auto-4|<tuple|2.1|13|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|auto-40|<tuple|3.4.5|32|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|auto-41|<tuple|4|33|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|auto-42|<tuple|4.1|33|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|auto-43|<tuple|4.2|34|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|auto-44|<tuple|(6)|35|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|auto-45|<tuple|4.2.1|36|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|auto-46|<tuple|4.3|39|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|auto-47|<tuple|4.4|41|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|auto-48|<tuple|4.5|44|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|auto-49|<tuple|5|47|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|auto-5|<tuple|2.2|14|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|auto-50|<tuple|5.1|47|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|auto-51|<tuple|5.2|49|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|auto-52|<tuple|5.3|52|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|auto-53|<tuple|5.4|54|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|auto-54|<tuple|5.5|56|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|auto-55|<tuple|5.6|58|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|auto-56|<tuple|5.6.1|59|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|auto-57|<tuple|5.6.2|59|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|auto-58|<tuple|5.6.3|59|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|auto-59|<tuple|6|61|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|auto-6|<tuple|2.3|15|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|auto-60|<tuple|6.1|61|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|auto-61|<tuple|6.2|64|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|auto-62|<tuple|6.3|65|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|auto-63|<tuple|6.4|68|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|auto-64|<tuple|7|71|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|auto-65|<tuple|7.1|71|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|auto-66|<tuple|7.2|72|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|auto-67|<tuple|7.3|73|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|auto-68|<tuple|7.4|73|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|auto-69|<tuple|7.5|73|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|auto-7|<tuple|2.8|16|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|auto-70|<tuple|7.6|74|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|auto-71|<tuple|7.7|74|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|auto-72|<tuple|7.7|75|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|auto-73|<tuple|7.7|77|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|auto-8|<tuple|2.11|16|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|auto-9|<tuple|2.11|17|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|bib-AAGO06|<tuple|1|77|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|bib-AB09|<tuple|2|77|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|bib-AB10|<tuple|3|77|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|bib-ABD10|<tuple|4|77|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|bib-ABL11|<tuple|6|77|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|bib-ABM10|<tuple|7|77|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|bib-ACF02|<tuple|8|77|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|bib-ACFS03|<tuple|9|77|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|bib-ADBL11|<tuple|10|77|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|bib-ADX10|<tuple|11|77|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|bib-AG12|<tuple|12|77|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|bib-AGS08|<tuple|15|77|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|bib-AHR08|<tuple|16|77|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|bib-AK04|<tuple|17|77|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|bib-AKS11|<tuple|18|77|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|bib-AMS09|<tuple|19|77|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|bib-AO10|<tuple|20|77|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|bib-APS11|<tuple|21|77|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|bib-AR09|<tuple|22|77|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|bib-Agr95|<tuple|14|77|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|bib-Aue02|<tuple|26|78|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|bib-BBL05|<tuple|30|78|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|bib-BCK12|<tuple|31|78|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|bib-BCL12|<tuple|32|78|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|bib-BCZHS97|<tuple|33|78|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|bib-BDHKRT08|<tuple|34|78|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|bib-BEG11|<tuple|35|78|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|bib-BJM11|<tuple|38|78|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|bib-BK11|<tuple|39|78|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|bib-BK97|<tuple|40|78|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|bib-BKS10|<tuple|41|78|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|bib-BM10|<tuple|42|78|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|bib-BM11|<tuple|43|78|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|bib-BMS09|<tuple|44|78|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|bib-BMS11|<tuple|45|78|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|bib-BMSS09|<tuple|46|78|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|bib-BMSS11|<tuple|47|78|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|bib-BN99|<tuple|48|78|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|bib-BPS10|<tuple|49|78|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|bib-BPSS11|<tuple|50|78|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|bib-BS12|<tuple|51|78|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|bib-BSS09|<tuple|52|78|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|bib-BT03|<tuple|53|78|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|bib-BV04|<tuple|56|78|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|bib-BWV12|<tuple|57|78|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|bib-Bal97|<tuple|28|78|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|bib-Ban68|<tuple|29|78|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|bib-Bub10|<tuple|54|78|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|bib-Bub11|<tuple|55|78|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|bib-CGMMS12|<tuple|58|78|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|bib-CL06|<tuple|60|79|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|bib-CL11|<tuple|61|79|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|bib-CLGMA11|<tuple|62|79|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|bib-CLS05|<tuple|64|79|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|bib-CLi11|<tuple|63|79|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|bib-CM07|<tuple|65|79|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|bib-CM11|<tuple|66|79|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|bib-CMS07|<tuple|67|79|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|bib-CSV09|<tuple|70|79|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|bib-DHK08|<tuple|71|79|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|bib-DHK08b|<tuple|72|79|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|bib-DK09|<tuple|73|79|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|bib-EMM02|<tuple|75|79|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|bib-EMM06|<tuple|76|79|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|bib-FKM05|<tuple|80|79|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|bib-FR11|<tuple|82|79|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|bib-FoVo98|<tuple|81|79|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|bib-GAOS10|<tuple|83|79|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|bib-GC11|<tuple|84|79|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|bib-GGLB11|<tuple|85|79|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|bib-GGW11|<tuple|86|79|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|bib-GKSS07|<tuple|88|79|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|bib-GLLO07|<tuple|89|79|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|bib-GLS01|<tuple|90|80|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|bib-GM11|<tuple|91|80|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|bib-GWMT06|<tuple|92|80|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|bib-HK09|<tuple|98|80|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|bib-HKW10|<tuple|99|80|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|bib-HL01|<tuple|100|80|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|bib-HP97|<tuple|101|80|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|bib-HT10|<tuple|102|80|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|bib-HT10b|<tuple|103|80|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|bib-HW09|<tuple|104|80|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|bib-HW98|<tuple|105|80|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|bib-HaMa00|<tuple|93|80|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|bib-HaMa99|<tuple|94|80|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|bib-Han57|<tuple|95|80|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|bib-Haz11|<tuple|96|80|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|bib-JNTV05|<tuple|106|80|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|bib-JOA10|<tuple|107|80|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|bib-KCG12|<tuple|110|80|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|bib-KKM12|<tuple|112|80|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|bib-KMB09|<tuple|114|80|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|bib-KMN02|<tuple|115|80|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|bib-KNS10|<tuple|116|80|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|bib-KRS10|<tuple|117|80|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|bib-KS06|<tuple|118|80|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|bib-KS12|<tuple|119|80|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|bib-KST10|<tuple|120|80|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|bib-KSU08|<tuple|121|80|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|bib-KV05|<tuple|122|80|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|bib-KW01|<tuple|123|81|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|bib-KW52|<tuple|124|81|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|bib-KWK10|<tuple|125|81|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|bib-Kak03|<tuple|108|80|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|bib-LR85|<tuple|129|81|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|bib-LZK10|<tuple|130|81|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|bib-Lez98|<tuple|127|81|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|bib-MB04|<tuple|133|81|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|bib-MMS11|<tuple|135|81|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|bib-MS11|<tuple|136|81|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|bib-MT04|<tuple|137|81|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|bib-NGSA10|<tuple|140|81|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|bib-NIPS2011_0948|<tuple|141|81|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|bib-NJLS09|<tuple|142|81|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|bib-NY83|<tuple|143|81|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|bib-Nem79|<tuple|138|81|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|bib-Nes11|<tuple|139|81|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|bib-PR11|<tuple|145|81|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|bib-RM51|<tuple|147|81|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|bib-RT10|<tuple|149|81|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|bib-Rak09|<tuple|146|81|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|bib-Rob52|<tuple|148|81|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|bib-SA11|<tuple|150|81|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|bib-SB98|<tuple|151|81|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|bib-SKKS10|<tuple|153|81|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|bib-SST11|<tuple|156|82|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|bib-Sha07|<tuple|152|81|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|bib-Sto05|<tuple|157|82|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|bib-Sze10|<tuple|158|82|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|bib-TL11|<tuple|160|82|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|bib-TT09|<tuple|161|82|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|bib-TW03|<tuple|162|82|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|bib-Tho33|<tuple|159|82|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|bib-UNK10|<tuple|163|82|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|bib-WAM08|<tuple|165|82|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|bib-WK08|<tuple|168|82|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|bib-WKH11|<tuple|169|82|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|bib-WS12|<tuple|170|82|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|bib-YBKJ09|<tuple|171|82|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|bib-YJ11|<tuple|172|82|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|bib-YMS09|<tuple|173|82|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|bib-Zin03|<tuple|175|82|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|bib-abe1999associative|<tuple|5|77|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|bib-agarwal2011stochastic|<tuple|13|77|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|bib-arora2012multiplicative|<tuple|23|77|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|bib-arora2012online|<tuple|24|77|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|bib-arrow1949bayes|<tuple|25|77|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|bib-auer2007improved|<tuple|27|78|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|bib-beygelzimer2010contextual|<tuple|36|78|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|bib-beygelzimer2011contextual|<tuple|37|78|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|bib-chu2011contextual|<tuple|59|79|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|bib-cope2009regret|<tuple|68|79|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|bib-crammer2011multiclass|<tuple|69|79|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|bib-dudik2011efficient|<tuple|74|79|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|bib-farias2006combining|<tuple|77|79|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|bib-filippi2010parametric|<tuple|78|79|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|bib-filippi2011optimally|<tuple|79|79|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|bib-gittins1979bandit|<tuple|87|79|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|bib-hazan2011newtron|<tuple|97|80|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|bib-kakade2008efficient|<tuple|109|80|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|bib-kiefer1953sequential|<tuple|111|80|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|bib-kleinberg2004nearly|<tuple|113|80|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|bib-langford2007epoch|<tuple|126|81|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|bib-li2010contextual|<tuple|128|81|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|bib-mahajan2008multi|<tuple|131|81|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|bib-maillard2011adaptive|<tuple|132|81|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|bib-mcmahan2009tighter|<tuple|134|81|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|bib-ortner2012regret|<tuple|144|81|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|bib-slivkins2008adapting|<tuple|154|81|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|bib-slivkins2009contextual|<tuple|155|81|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|bib-wald1947sequential|<tuple|164|82|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|bib-wang2005arbitrary|<tuple|166|82|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|bib-wang2005bandit|<tuple|167|82|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|bib-yu2011unimodal|<tuple|174|82|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|contextual|<tuple|4|33|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|eq:KLchapeauprop|<tuple|2.10|16|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|eq:LBminimax|<tuple|3.29|28|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|eq:MGD3|<tuple|5.4|51|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|eq:UCB1|<tuple|2.5|15|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|eq:UCB2|<tuple|2.6|15|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|eq:UCB3|<tuple|2.7|15|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|eq:ballestimate|<tuple|5.7|57|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|eq:ballgradient|<tuple|5.10|57|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|eq:ballregret1|<tuple|5.8|57|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|eq:ballregret2|<tuple|5.9|57|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|eq:cndef|<tuple|2.11|16|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|eq:consistency|<tuple|5.3|51|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|eq:defmu2prime|<tuple|2.9|16|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|eq:endLR|<tuple|2.14|17|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|eq:equalities|<tuple|3.5|22|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|eq:exp-regret|<tuple|1.2|10|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|eq:exp2def|<tuple|5.1|48|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|eq:exp3-rebel-cont|<tuple|4.8|38|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|eq:exp3P1|<tuple|3.19|26|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|eq:exp3P2|<tuple|3.22|26|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|eq:exp3P3|<tuple|3.26|26|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|eq:exp3P4|<tuple|3.27|27|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|eq:exp3Pbound1|<tuple|3.16|26|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|eq:exp3Pbound2|<tuple|3.17|26|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|eq:exp3Pbound3|<tuple|3.28|27|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|eq:exp3Plem|<tuple|3.18|26|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|eq:exp3bound|<tuple|3.2|22|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|eq:exp3boundanytime|<tuple|3.3|22|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|eq:exp3lem|<tuple|3.4|22|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|eq:exp4-exp3|<tuple|4.3|35|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|eq:exp4-ineq1|<tuple|4.4|36|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|eq:exp4-ineq2|<tuple|4.5|36|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|eq:exp4-ineq3|<tuple|4.6|36|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|eq:exp4bound|<tuple|4.1|35|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|eq:exp4bound-mix|<tuple|4.9|38|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|eq:exp4boundanytime|<tuple|4.2|35|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|eq:expregret|<tuple|3.6|23|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|eq:firststepmm|<tuple|3.30|29|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|eq:fourthstepmm|<tuple|3.39|29|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|eq:klbernoullis|<tuple|2.8|16|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|eq:lip-tloss|<tuple|6.2|63|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|eq:logmoment|<tuple|3.8|23|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|eq:one-point-est|<tuple|6.3|65|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|eq:pregretstocha|<tuple|1.4|10|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|eq:pseudoregret|<tuple|1.3|10|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|eq:pseudoregretadv|<tuple|3.1|21|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|eq:pseudoregretstocha|<tuple|2.1|13|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|eq:psiconcentration|<tuple|2.3|14|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|eq:psicond|<tuple|2.2|14|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|eq:regret|<tuple|1.1|10|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|eq:regretUCBbounded|<tuple|2.4|14|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|eq:secondstep|<tuple|3.13|23|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|eq:secondstepmm|<tuple|3.31|29|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|eq:semibanditestimate|<tuple|5.5|54|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|eq:semibanditregret|<tuple|5.6|54|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|eq:sgs-ratios|<tuple|6.5|67|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|eq:sgs-rec|<tuple|6.6|67|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|eq:sgs-th|<tuple|6.7|68|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|eq:strongmax|<tuple|6.4|66|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|eq:superball|<tuple|5.11|57|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|eq:thirdstep|<tuple|3.15|23|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|eq:thirdstep2mm|<tuple|3.36|29|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|eq:transrelation|<tuple|5.2|50|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|eq:two-point-est|<tuple|6.1|62|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|eq:vebound|<tuple|4.10|40|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|fig:exp3P|<tuple|(3)|25|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|fig:exp4|<tuple|(6)|35|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|footnote-2.1|<tuple|2.1|14|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|footnote-3.1|<tuple|3.1|30|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|footnote-5.1|<tuple|5.1|50|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|footnote-6.1|<tuple|6.1|67|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|footnr-2.1|<tuple|2.1|14|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|footnr-3.1|<tuple|3.1|30|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|footnr-5.1|<tuple|5.1|50|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|footnr-6.1|<tuple|6.1|67|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|intro|<tuple|1|9|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|l:divergence|<tuple|6.1|62|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|l:stokes|<tuple|6.2|62|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|l:two-point|<tuple|6.3|63|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|lem:LBminimax|<tuple|3.2|28|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|lem:exp3P|<tuple|3.1|24|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|lem:proj|<tuple|5.2|50|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|lem:psi|<tuple|5.3|55|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|linear|<tuple|5|47|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|nonlinear|<tuple|6|61|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|s:context-adv|<tuple|4.2|34|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|s:context-intro|<tuple|4.1|33|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|s:context-stochastic|<tuple|4.3|39|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|s:mdp|<tuple|7.1|71|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|s:multiclass|<tuple|4.4|41|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|s:nonlinear-stochastic|<tuple|6.3|65|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|s:stoch-lower|<tuple|2.3|15|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|sec:Exp2|<tuple|5.1|47|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|sec:LB|<tuple|3.3|28|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|sec:OMD|<tuple|5.2|49|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|sec:OSMD|<tuple|5.3|52|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|sec:UCB|<tuple|2.2|14|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|sec:ball|<tuple|5.5|56|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|sec:best-of-both|<tuple|3.4.4|31|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|sec:contextual|<tuple|4.5|44|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|sec:dueling|<tuple|7.3|73|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|sec:exp3S|<tuple|3.4.3|31|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|sec:feedback|<tuple|3.4.5|32|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|sec:heavytail|<tuple|2.4.7|19|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|sec:hplinear|<tuple|5.6.2|59|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|sec:logfree|<tuple|3.4.1|30|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|sec:regret|<tuple|3.2|24|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|sec:semibandit|<tuple|5.4|54|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|sec:stochlinear|<tuple|5.6.3|59|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|sec:truthful|<tuple|7.6|74|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|ss:best-context|<tuple|4.2.1|36|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|stochastic|<tuple|2|13|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|th:Exp3|<tuple|3.1|22|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|th:Exp4|<tuple|4.2|35|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|th:Fnotlegendre|<tuple|5.4|52|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|th:LBminimax|<tuple|3.4|28|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|th:LR85|<tuple|2.2|16|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|th:MGD|<tuple|5.3|51|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|th:OSMD2|<tuple|5.5|53|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|th:ball|<tuple|5.8|57|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|th:context-simple|<tuple|4.1|33|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|th:exp2john|<tuple|5.2|48|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|th:exp3-rebel|<tuple|4.3|37|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|th:exp3P|<tuple|3.2|26|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|th:exp4-mixing|<tuple|4.4|38|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|th:john|<tuple|5.1|48|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|th:osmdnegent|<tuple|5.6|54|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|th:osmdzero|<tuple|5.7|56|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|th:theta-regret|<tuple|4.5|38|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|th:two-point|<tuple|6.1|64|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|th:ucb|<tuple|2.1|14|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
    <associate|variants|<tuple|7|71|../../../Library/Application Support/liiilabs/texts/scratch/no_name_212.tm>>
  </collection>
</references>

<\auxiliary>
  <\collection>
    <\associate|bib>
      Tho33

      GWMT06

      KS06

      mahajan2008multi

      GGW11

      Rob52

      wald1947sequential

      arrow1949bayes

      LR85

      Agr95

      ACFS03

      farias2006combining

      arora2012online

      Han57

      Ban68

      FoVo98

      HaMa99

      HaMa00

      ACFS03

      gittins1979bandit

      Bub10

      ACF02

      LR85

      BK97

      Bub10

      GC11

      AMS09

      ACF02

      HT10

      GC11

      MMS11

      CGMMS12

      GC11

      AB09

      AB10

      AO10

      PR11

      ABM10

      AMS09

      SA11

      AMS09

      SB98

      ACF02

      ACF02

      Tho33

      CLi11

      AG12

      KKM12

      KCG12

      BCL12

      BCL12

      CL06

      arora2012multiplicative

      AB10

      CL06

      CL06

      Sto05

      Bub10

      ACFS03

      Bub10

      AB09

      CL06

      ABL11

      AB10

      AB10

      ACFS03

      AB10

      HK09

      CMS07

      HK09

      slivkins2008adapting

      slivkins2009contextual

      Aue02

      AB10

      BS12

      HP97

      CLS05

      AAGO06

      AB10

      MS11

      CL06

      BPS10

      FR11

      li2010contextual

      beygelzimer2010contextual

      ACFS03

      BBL05

      BBL05

      wang2005bandit

      wang2005arbitrary

      RT10

      PR11

      slivkins2009contextual

      Aue02

      chu2011contextual

      abe1999associative

      filippi2010parametric

      maillard2011adaptive

      ACFS03

      beygelzimer2011contextual

      mcmahan2009tighter

      beygelzimer2011contextual

      NIPS2011_0948

      langford2007epoch

      dudik2011efficient

      langford2007epoch

      kakade2008efficient

      crammer2011multiclass

      hazan2011newtron

      Bal97

      BCK12

      CL06

      CL06

      Zin03

      AK04

      MB04

      DHK08

      CL11

      BCK12

      Nem79

      NY83

      HW98

      GLS01

      KW01

      Sha07

      CL06

      Rak09

      Haz11

      JNTV05

      AHR08

      BCK12

      Bub11

      CL06

      HL01

      BV04

      ABL11

      BN99

      KST10

      RM51

      KW52

      NJLS09

      CSV09

      Nes11

      BM11

      Rak09

      BT03

      BPSS11

      SST11

      KV05

      TW03

      WK08

      HW09

      HKW10

      KWK10

      WKH11

      CL11

      GLLO07

      KRS10

      UNK10

      ABL11

      HW09

      KWK10

      ABL11

      ABL11

      AB09

      Bub11

      DHK08

      ABL11

      ABL11

      KWK10

      BDHKRT08

      AR09

      Aue02

      DHK08b

      RT10

      filippi2010parametric

      APS11

      kiefer1953sequential

      FKM05

      kleinberg2004nearly

      ADX10

      yu2011unimodal

      KSU08

      BMSS09

      kleinberg2004nearly

      auer2007improved

      cope2009regret

      KSU08

      BMSS09

      BMSS11

      agarwal2011stochastic

      NY83

      AKS11

      SKKS10

      GAOS10

      SB98

      Kak03

      Sze10

      YMS09

      BM10

      JOA10

      NGSA10

      Lez98

      TL11

      filippi2011optimally

      ortner2012regret

      GM11

      KNS10

      KMB09

      slivkins2009contextual

      KS12

      GKSS07

      BMS09

      BMS11

      BMS09

      ABM10

      GGLB11

      BJM11

      BWV12

      EMM02

      MT04

      EMM06

      AGS08

      CLGMA11

      CM11

      YBKJ09

      YBKJ09

      EMM02

      YJ11

      BEG11

      BEG11

      BEG11

      BCZHS97

      WAM08

      WAM08

      BSS09

      DK09

      BKS10

      WS12

      KMN02

      KS06

      GWMT06

      CM07

      BM10

      TT09

      HT10b

      LZK10

      ADBL11

      BK11

      ABD10

      BEG11
    </associate>
    <\associate|figure>
      <tuple|normal|<surround|<hidden-binding|<tuple>|3.1>||Exp3.P forecaster.>|<pageref|auto-25>>

      <tuple|normal|<surround|<hidden-binding|<tuple>|4.1>||Exp4 forecaster.>|<pageref|auto-44>>
    </associate>
    <\associate|toc>
      <vspace*|1fn><with|font-series|<quote|bold>|math-font-series|<quote|bold>|Abstract> <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>> <no-break><pageref|auto-1><vspace|0.5fn>

      <vspace*|1fn><with|font-series|<quote|bold>|math-font-series|<quote|bold>|1<space|2spc>Introduction> <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>> <no-break><pageref|auto-2><vspace|0.5fn>

      <vspace*|1fn><with|font-series|<quote|bold>|math-font-series|<quote|bold>|2<space|2spc>Stochastic bandits: fundamental results> <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>> <no-break><pageref|auto-3><vspace|0.5fn>

      2.1<space|2spc>Optimism in face of uncertainty <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>> <no-break><pageref|auto-4>

      2.2<space|2spc>Upper Confidence Bound (UCB) strategies <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>> <no-break><pageref|auto-5>

      2.3<space|2spc>Lower bound <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>> <no-break><pageref|auto-6>

      <with|par-left|<quote|1tab>|First step: Notations. <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>> <no-break><pageref|auto-7>>

      <with|par-left|<quote|1tab>|Second step: <with|mode|<quote|math>|\<bbb-P\><around|(|C<rsub|n>|)>=o<around|(|1|)>>. <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>> <no-break><pageref|auto-8>>

      <with|par-left|<quote|1tab>|Third step: <with|mode|<quote|math>|\<bbb-P\><around*|(|T<rsub|2><around|(|n|)>\<less\>f<rsub|n>|)>=o<around|(|1|)>>. <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>> <no-break><pageref|auto-9>>

      2.4<space|2spc>Refinements and bibliographic remarks <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>> <no-break><pageref|auto-10>

      <with|par-left|<quote|1tab>|2.4.1<space|2spc>Improved constants <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>> <no-break><pageref|auto-11>>

      <with|par-left|<quote|1tab>|2.4.2<space|2spc>Second order bounds <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>> <no-break><pageref|auto-12>>

      <with|par-left|<quote|1tab>|2.4.3<space|2spc>Distribution-free bounds <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>> <no-break><pageref|auto-13>>

      <with|par-left|<quote|1tab>|2.4.4<space|2spc>High probability bounds <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>> <no-break><pageref|auto-14>>

      <with|par-left|<quote|1tab>|2.4.5<space|2spc><with|mode|<quote|math>|\<epsilon\>>-greedy <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>> <no-break><pageref|auto-15>>

      <with|par-left|<quote|1tab>|2.4.6<space|2spc>Thompson sampling <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>> <no-break><pageref|auto-16>>

      <with|par-left|<quote|1tab>|2.4.7<space|2spc>Heavy-tailed distributions <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>> <no-break><pageref|auto-17>>

      <vspace*|1fn><with|font-series|<quote|bold>|math-font-series|<quote|bold>|3<space|2spc>Adversarial bandits: fundamental results> <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>> <no-break><pageref|auto-18><vspace|0.5fn>

      3.1<space|2spc>Pseudo-regret bounds <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>> <no-break><pageref|auto-19>

      <with|par-left|<quote|1tab>|First step: Useful equalities. <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>> <no-break><pageref|auto-20>>

      <with|par-left|<quote|1tab>|Second step: Study of the first term in (<reference|eq:logmoment>). <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>> <no-break><pageref|auto-21>>

      <with|par-left|<quote|1tab>|Third step: Study of the second term in (<reference|eq:logmoment>). <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>> <no-break><pageref|auto-22>>

      <with|par-left|<quote|1tab>|Fourth step: Summing. <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>> <no-break><pageref|auto-23>>

      3.2<space|2spc>High probability and expected regret bounds <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>> <no-break><pageref|auto-24>

      <with|par-left|<quote|1tab>|First step: Notation and simple equalities. <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>> <no-break><pageref|auto-26>>

      <with|par-left|<quote|1tab>|Second step: Study of the first term in (<reference|eq:exp3P2>). <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>> <no-break><pageref|auto-27>>

      <with|par-left|<quote|1tab>|Third step: Summing. <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>> <no-break><pageref|auto-28>>

      3.3<space|2spc>Lower Bound <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>> <no-break><pageref|auto-29>

      <with|par-left|<quote|1tab>|First step: Empirical distribution of plays. <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>> <no-break><pageref|auto-30>>

      <with|par-left|<quote|1tab>|Second step: Pinsker's inequality. <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>> <no-break><pageref|auto-31>>

      <with|par-left|<quote|1tab>|Third step: Computation of <with|mode|<quote|math>|<with|mode|<quote|text>|<with|font-family|<quote|rm>|font-shape|<quote|right>|KL>><around|(|\<bbb-P\><rsub|0>,\<bbb-P\><rsub|i>|)>>. \ <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>> <no-break><pageref|auto-32>>

      <with|par-left|<quote|1tab>|Fourth step: conclusion for deterministic forecasters. \ <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>> <no-break><pageref|auto-33>>

      <with|par-left|<quote|1tab>|Fifth step: randomized forecasters via Fubini's Theorem. <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>> <no-break><pageref|auto-34>>

      3.4<space|2spc>Refinements and bibliographic remarks <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>> <no-break><pageref|auto-35>

      <with|par-left|<quote|1tab>|3.4.1<space|2spc>Log-free upper bounds <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>> <no-break><pageref|auto-36>>

      <with|par-left|<quote|1tab>|3.4.2<space|2spc>Adaptive bounds <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>> <no-break><pageref|auto-37>>

      <with|par-left|<quote|1tab>|3.4.3<space|2spc>Competing with the best switching strategy <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>> <no-break><pageref|auto-38>>

      <with|par-left|<quote|1tab>|3.4.4<space|2spc>Stochastic versus adversarial bandits <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>> <no-break><pageref|auto-39>>

      <with|par-left|<quote|1tab>|3.4.5<space|2spc>Alternative feedback structures <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>> <no-break><pageref|auto-40>>

      <vspace*|1fn><with|font-series|<quote|bold>|math-font-series|<quote|bold>|4<space|2spc>Contextual bandits> <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>> <no-break><pageref|auto-41><vspace|0.5fn>

      4.1<space|2spc>Bandits with side information <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>> <no-break><pageref|auto-42>

      4.2<space|2spc>The expert case <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>> <no-break><pageref|auto-43>

      <with|par-left|<quote|1tab>|4.2.1<space|2spc>Competing against the best context set <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>> <no-break><pageref|auto-45>>

      4.3<space|2spc>Stochastic contextual bandits <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>> <no-break><pageref|auto-46>

      4.4<space|2spc>The multiclass case <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>> <no-break><pageref|auto-47>

      4.5<space|2spc>Bibliographic remarks <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>> <no-break><pageref|auto-48>

      <vspace*|1fn><with|font-series|<quote|bold>|math-font-series|<quote|bold>|5<space|2spc>Linear bandits> <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>> <no-break><pageref|auto-49><vspace|0.5fn>

      5.1<space|2spc>Exp2 (Expanded Exp) with John's exploration <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>> <no-break><pageref|auto-50>

      5.2<space|2spc>Online Mirror Descent (OMD) <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>> <no-break><pageref|auto-51>

      5.3<space|2spc>Online Stochastic Mirror Descent (OSMD) <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>> <no-break><pageref|auto-52>

      5.4<space|2spc>Online combinatorial optimization <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>> <no-break><pageref|auto-53>

      5.5<space|2spc>Improved regret bounds for bandit feedback <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>> <no-break><pageref|auto-54>

      5.6<space|2spc>Refinements and bibliographic remarks <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>> <no-break><pageref|auto-55>

      <with|par-left|<quote|1tab>|5.6.1<space|2spc>Lower bounds <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>> <no-break><pageref|auto-56>>

      <with|par-left|<quote|1tab>|5.6.2<space|2spc>High probability bounds <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>> <no-break><pageref|auto-57>>

      <with|par-left|<quote|1tab>|5.6.3<space|2spc>Stochastic online linear optimization <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>> <no-break><pageref|auto-58>>

      <vspace*|1fn><with|font-series|<quote|bold>|math-font-series|<quote|bold>|6<space|2spc>Nonlinear bandits> <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>> <no-break><pageref|auto-59><vspace|0.5fn>

      6.1<space|2spc>Two-points bandit feedback <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>> <no-break><pageref|auto-60>

      6.2<space|2spc>One-point bandit feedback <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>> <no-break><pageref|auto-61>

      6.3<space|2spc>Nonlinear stochastic bandits <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>> <no-break><pageref|auto-62>

      6.4<space|2spc>Bibliographic remarks <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>> <no-break><pageref|auto-63>

      <vspace*|1fn><with|font-series|<quote|bold>|math-font-series|<quote|bold>|7<space|2spc>Variants> <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>> <no-break><pageref|auto-64><vspace|0.5fn>

      7.1<space|2spc>Markov Decision Processes, restless and sleeping bandits <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>> <no-break><pageref|auto-65>

      7.2<space|2spc>Pure exploration problems <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>> <no-break><pageref|auto-66>

      7.3<space|2spc>Dueling bandits <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>> <no-break><pageref|auto-67>

      7.4<space|2spc>Discovery with probabilistic expert advice <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>> <no-break><pageref|auto-68>

      7.5<space|2spc>Many-armed bandits <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>> <no-break><pageref|auto-69>

      7.6<space|2spc>Truthful bandits <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>> <no-break><pageref|auto-70>

      7.7<space|2spc>Concluding remarks <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>> <no-break><pageref|auto-71>

      <vspace*|1fn><with|font-series|<quote|bold>|math-font-series|<quote|bold>|Appendix<space|2spc>Acknowledgements> <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>> <no-break><pageref|auto-72><vspace|0.5fn>

      <vspace*|1fn><with|font-series|<quote|bold>|math-font-series|<quote|bold>|Bibliography> <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>> <no-break><pageref|auto-73><vspace|0.5fn>
    </associate>
  </collection>
</auxiliary>
